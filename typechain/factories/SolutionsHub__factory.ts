/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SolutionsHub, SolutionsHubInterface } from "../SolutionsHub";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ConditionalTokens",
        name: "_conditionalTokens",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "CreateSolution",
    type: "event",
  },
  {
    inputs: [],
    name: "conditionalTokens",
    outputs: [
      {
        internalType: "contract ConditionalTokens",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_collateralToken",
        type: "address",
      },
      {
        components: [
          {
            internalType: "contract SolverFactory",
            name: "factory",
            type: "address",
          },
          {
            internalType: "address",
            name: "keeper",
            type: "address",
          },
          {
            internalType: "address",
            name: "arbiter",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "timelockHours",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "to",
                type: "address",
              },
              {
                internalType: "bool",
                name: "executed",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "useSolverIdx",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "solverIdx",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Minion.Action[]",
            name: "actions",
            type: "tuple[]",
          },
        ],
        internalType: "struct SolutionsHub.SolverConfig[]",
        name: "_solverConfigs",
        type: "tuple[]",
      },
    ],
    name: "createSolution",
    outputs: [
      {
        internalType: "bytes32",
        name: "_solutionId",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_proposalId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_solutionId",
        type: "bytes32",
      },
    ],
    name: "executeSolution",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
    ],
    name: "getSolution",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "executed",
            type: "bool",
          },
          {
            internalType: "contract IERC20",
            name: "collateralToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "keeper",
            type: "address",
          },
          {
            internalType: "address",
            name: "proposalHub",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "proposalId",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "id",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "contract SolverFactory",
                name: "factory",
                type: "address",
              },
              {
                internalType: "address",
                name: "keeper",
                type: "address",
              },
              {
                internalType: "address",
                name: "arbiter",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "timelockHours",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "to",
                    type: "address",
                  },
                  {
                    internalType: "bool",
                    name: "executed",
                    type: "bool",
                  },
                  {
                    internalType: "bool",
                    name: "useSolverIdx",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "solverIdx",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "value",
                    type: "uint256",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct Minion.Action[]",
                name: "actions",
                type: "tuple[]",
              },
            ],
            internalType: "struct SolutionsHub.SolverConfig[]",
            name: "solverConfigs",
            type: "tuple[]",
          },
          {
            internalType: "address[]",
            name: "solverAddresses",
            type: "address[]",
          },
        ],
        internalType: "struct SolutionsHub.Solution",
        name: "solution",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_proposalId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_solutionId",
        type: "bytes32",
      },
    ],
    name: "linkToProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_solutionId",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "contract SolverFactory",
            name: "factory",
            type: "address",
          },
          {
            internalType: "address",
            name: "keeper",
            type: "address",
          },
          {
            internalType: "address",
            name: "arbiter",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "timelockHours",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "to",
                type: "address",
              },
              {
                internalType: "bool",
                name: "executed",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "useSolverIdx",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "solverIdx",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Minion.Action[]",
            name: "actions",
            type: "tuple[]",
          },
        ],
        internalType: "struct SolutionsHub.SolverConfig[]",
        name: "_solverConfigs",
        type: "tuple[]",
      },
    ],
    name: "setSolverConfigs",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_solutionId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "solverFromIndex",
    outputs: [
      {
        internalType: "address",
        name: "solver",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051611e12380380611e1283398101604081905261002f91610054565b600180546001600160a01b0319166001600160a01b0392909216919091179055610082565b600060208284031215610065578081fd5b81516001600160a01b038116811461007b578182fd5b9392505050565b611d81806100916000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806360bbb9281161005b57806360bbb928146100d357806373c587f5146100e8578063d8e4844e146100fb578063ddc02e031461010e5761007d565b8063191481a0146100825780634a2b487f146100ab5780635bd9e299146100cb575b600080fd5b6100956100903660046110a7565b61012e565b6040516100a29190611387565b60405180910390f35b6100be6100b93660046110c8565b61017b565b6040516100a2919061139b565b6100956102d6565b6100e66100e13660046110a7565b6102e5565b005b6100e66100f63660046110a7565b610886565b6100e661010936600461105d565b610958565b61012161011c366004611045565b610a3c565b6040516100a29190611642565b600082815260026020526040812060060180548390811061015f57634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b03169392505050565b60008054818061018a83611a7b565b9091555050600080546040516101a4913391602001611365565b60408051601f19818403018152918152815160209283012060008181526002909352908220600481018290556001810180546001600160a01b0319163317905580546001600160a01b038916610100027fffffffffffffffffffffff0000000000000000000000000000000000000000ff909116178155909250905b84811015610295578160050186868381811061024c57634e487b7160e01b600052603260045260246000fd5b905060200281019061025e9190611725565b8154600181018355600092835260209092209091600602016102808282611b38565b5050808061028d90611a7b565b915050610220565b507faf58c2d61bce90c15ecad6e5142ecbbb0b542b557388df7578e0162b098999a3826040516102c5919061139b565b60405180910390a150949350505050565b6001546001600160a01b031681565b600081815260026020819052604090912001546001600160a01b031633146103285760405162461bcd60e51b815260040161031f906115d4565b60405180910390fd5b60008181526002602052604090206003015482146103585760405162461bcd60e51b815260040161031f90611540565b60008181526002602052604090205460ff16156103875760405162461bcd60e51b815260040161031f90611509565b6000818152600260205260408120805460ff191660011790555b6000828152600260205260409020600501548110156106a85760008281526002602052604081206005018054839081106103eb57634e487b7160e01b600052603260045260246000fd5b6000918252602080832060069092029091015485835260029182905260408320805492810154600590910180546001600160a01b039384169650869463b942ca6e946101009091048116938a939116913091908a90811061045c57634e487b7160e01b600052603260045260246000fd5b906000526020600020906006020160010160009054906101000a90046001600160a01b0316600260008c81526020019081526020016000206005018a815481106104b657634e487b7160e01b600052603260045260246000fd5b6000918252602080832060026006909302018201548e8452919052604090912060050180546001600160a01b03909216918c90811061050557634e487b7160e01b600052603260045260246000fd5b906000526020600020906006020160030154600260008e81526020019081526020016000206005018c8154811061054c57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060060201600501600260008f81526020019081526020016000206005018d8154811061059257634e487b7160e01b600052603260045260246000fd5b90600052602060002090600602016004016040518a63ffffffff1660e01b81526004016105c7999897969594939291906113bb565b602060405180830381600087803b1580156105e157600080fd5b505af11580156105f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106199190611006565b905061062481610d9d565b6001600160a01b03811661064a5760405162461bcd60e51b815260040161031f906114d2565b600084815260026020908152604080832060060180546001810182559084528284200180546001600160a01b039095166001600160a01b031990951685179055928252600390522083905550806106a081611a7b565b9150506103a1565b5060008181526002602052604081206006018054339263c13784f79286929091906106e357634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815261073292916001600160a01b0316906004016113a4565b600060405180830381600087803b15801561074c57600080fd5b505af1158015610760573d6000803e3d6000fd5b5050505060005b6000828152600260205260409020600501548110156108815760008281526002602052604081206006018054839081106107b157634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101548583526002909152604090912060060180546001600160a01b03909216925061081a918490811061080057634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b0316610d9d565b806001600160a01b0316633a275fa26040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561085557600080fd5b505af1158015610869573d6000803e3d6000fd5b5050505050808061087990611a7b565b915050610767565b505050565b6040517fd3f79a05000000000000000000000000000000000000000000000000000000008152339063d3f79a05906108c290859060040161139b565b60206040518083038186803b1580156108da57600080fd5b505afa1580156108ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109129190611029565b61092e5760405162461bcd60e51b815260040161031f90611577565b600090815260026020819052604090912090810180546001600160a01b0319163317905560030155565b60008381526002602052604090206001015483906001600160a01b031633146109935760405162461bcd60e51b815260040161031f9061160b565b60008481526002602052604081206109b091600590910190610e32565b60005b82811015610a355760008581526002602052604090206005018484838181106109ec57634e487b7160e01b600052603260045260246000fd5b90506020028101906109fe9190611725565b815460018101835560009283526020909220909160060201610a208282611b38565b50508080610a2d90611a7b565b9150506109b3565b5050505050565b610a44610e53565b600082815260026020818152604080842081516101008082018452825460ff811615158352046001600160a01b0390811682860152600183015481168285015294820154909416606085015260038101546080850152600481015460a08501526005810180548351818602810186019094528084529495919460c08701949192909184015b82821015610d2c5760008481526020908190206040805160c0810182526006860290920180546001600160a01b039081168452600182015481169484019490945260028101549093169082015260038201546060820152600482018054919291608084019190610b3890611a2d565b80601f0160208091040260200160405190810160405280929190818152602001828054610b6490611a2d565b8015610bb15780601f10610b8657610100808354040283529160200191610bb1565b820191906000526020600020905b815481529060010190602001808311610b9457829003601f168201915b5050505050815260200160058201805480602002602001604051908101604052809291908181526020016000905b82821015610d155760008481526020908190206040805160c0810182526004860290920180546001600160a01b038116845260ff740100000000000000000000000000000000000000008204811615159585019590955275010000000000000000000000000000000000000000009004909316151590820152600182015460608201526002820154608082015260038201805491929160a084019190610c8490611a2d565b80601f0160208091040260200160405190810160405280929190818152602001828054610cb090611a2d565b8015610cfd5780601f10610cd257610100808354040283529160200191610cfd565b820191906000526020600020905b815481529060010190602001808311610ce057829003601f168201915b50505050508152505081526020019060010190610bdf565b505050508152505081526020019060010190610ac9565b50505050815260200160068201805480602002602001604051908101604052809291908181526020018280548015610d8d57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610d6f575b5050505050815250509050919050565b610e0e81604051602401610db19190611387565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f2c2ecbc200000000000000000000000000000000000000000000000000000000179052610e11565b50565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b5080546000825560060290600052602060002090810190610e0e9190610e99565b604080516101008101825260008082526020820181905291810182905260608082018390526080820183905260a082019290925260c0810182905260e081019190915290565b80821115610ef35780546001600160a01b03199081168255600182018054821690556002820180549091169055600060038201819055610edc6004830182610ef7565b610eea600583016000610f33565b50600601610e99565b5090565b508054610f0390611a2d565b6000825580601f10610f155750610e0e565b601f016020900490600052602060002090810190610e0e9190610f54565b5080546000825560040290600052602060002090810190610e0e9190610f69565b5b80821115610ef35760008155600101610f55565b80821115610ef35780547fffffffffffffffffffff0000000000000000000000000000000000000000000016815560006001820181905560028201819055610fb46003830182610ef7565b50600401610f69565b60008083601f840112610fce578182fd5b50813567ffffffffffffffff811115610fe5578182fd5b6020830191508360208083028501011115610fff57600080fd5b9250929050565b600060208284031215611017578081fd5b815161102281611d28565b9392505050565b60006020828403121561103a578081fd5b815161102281611d3d565b600060208284031215611056578081fd5b5035919050565b600080600060408486031215611071578182fd5b83359250602084013567ffffffffffffffff81111561108e578283fd5b61109a86828701610fbd565b9497909650939450505050565b600080604083850312156110b9578182fd5b50508035926020909101359150565b6000806000604084860312156110dc578283fd5b83356110e781611d28565b9250602084013567ffffffffffffffff81111561108e578283fd5b6001600160a01b03169052565b6000815180845260208085019450808401835b838110156111475781516001600160a01b031687529582019590820190600101611122565b509495945050505050565b60008282518085526020808601955080818302840101818601855b848110156111e657858303601f19018952815180516001600160a01b0316845284810151151585850152604080820151151590850152606080820151908501526080808201519085015260a09081015160c0918501829052906111d2818601836112a3565b9a86019a945050509083019060010161116d565b5090979650505050505050565b60008282518085526020808601955080818302840101818601855b848110156111e657601f19868403018952815160c06001600160a01b038083511686528087840151168787015260408181850151168188015250506060808301518187015250608080830151828288015261126b838801826112a3565b9250505060a080830151925085820381870152506112898183611152565b9a86019a945050509083019060010161120e565b15159052565b60008151808452815b818110156112c8576020818501810151868301820152016112ac565b818111156112d95782602083870101525b50601f01601f19169290920160200192915050565b600081546112fb81611a2d565b808552602060018381168015611318576001811461132c5761135a565b60ff1985168884015260408801955061135a565b866000528260002060005b858110156113525781548a8201860152908301908401611337565b890184019650505b505050505092915050565b60609290921b6bffffffffffffffffffffffff19168252601482015260340190565b6001600160a01b0391909116815260200190565b90815260200190565b9182526001600160a01b0316602082015260400190565b60006101208083016001600160a01b03808e16855260208d818701526040828e16818801526060838e16818901526080848e16818a015260a0858e16818b015260c08d818c01528860e08c01528798508c548089526101409850888c019950888782028d010198508d8b52868b208b5b828110156114a4578d8b0361013f19018c5281548a81168c5260ff6114568b8e0183891c831661129d565b6114678a8e01828460a81c1661129d565b50506001820154878c01526002820154868c015283858c015261148f848c01600384016112ee565b9b89019b9a506004919091019060010161142b565b505050505050505050508381036101008501526114c181866112ee565b9d9c50505050505050505050505050565b6020808252600f908201527f496e76616c696420616464726573730000000000000000000000000000000000604082015260600190565b60208082526019908201527f536f6c7574696f6e20616c726561647920657865637574656400000000000000604082015260600190565b60208082526010908201527f57726f6e672070726f706f73616c496400000000000000000000000000000000604082015260600190565b60208082526024908201527f50726f706f73616c206973206e6f742076616c69642061742070726f706f736160408201527f6c48756200000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526017908201527f4e6f7420636f72726563742070726f706f73616c487562000000000000000000604082015260600190565b60208082526018908201527f536f6c7574696f6e734875623a206f6e6c794b65657065720000000000000000604082015260600190565b60006020825282511515602083015260208301516116636040840182611102565b5060408301516116766060840182611102565b5060608301516116896080840182611102565b50608083015160a083015260a083015160c083015260c08301516101008060e08501526116ba6101208501836111f3565b915060e0850151601f1985840301828601526116d6838261110f565b9695505050505050565b6000808335601e198436030181126116f6578182fd5b83018035915067ffffffffffffffff821115611710578283fd5b602001915036819003821315610fff57600080fd5b6000823560be1983360301811261173a578182fd5b9190910192915050565b60009081526020902090565b6020841080156117a657601f841160018114611777576117708685611a68565b83556117a0565b61178083611744565b6117956020601f8801048201600183016117f5565b506117a08684611afd565b50610a35565b8160005260206000206020601f8701048101601f871680156117d0576117d0816000198401611ac2565b506117e36020601f8801048301826117f5565b50506001856002021782555050505050565b5b8181101561180a57600081556001016117f6565b5050565b6801000000000000000083111561182757611827611aac565b8054838255808410156118eb577f3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600181831181161561186957611869611a96565b600482871182161561187d5761187d611a96565b600085815260208120909350878202810190828602015b808210156118e5578482556118ab85858401611ae9565b6118b88560028401611ae9565b6003820180546118c781611a2d565b80156118d9576118d988828486611750565b50505090820190611894565b50505050505b50816118f682611744565b6000805b8681101561192c5761191661190f8588611725565b8385611c60565b60209390930192600492909201916001016118fa565b50505050505050565b67ffffffffffffffff83111561194d5761194d611aac565b6119578154611a2d565b600080601f8611601f8411818117156119765761197386611744565b92505b80156119a5576020601f890104830160208910156119915750825b6119a36020601f8801048501826117f5565b505b5080600181146119d1576000945087156119c0578387013594505b6119ca8886611a68565b8655611a23565b601f198816945082845b868110156119fb57888601358255602095860195600190920191016119db565b5088861015611a1857878501356000196008601f8c16021c191681555b506001600289020186555b5050505050505050565b600281046001821680611a4157607f821691505b60208210811415611a6257634e487b7160e01b600052602260045260246000fd5b50919050565b600019600883021c191660029091021790565b6000600019821415611a8f57611a8f611a96565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b8054600019836020036008021c1681555050565b60008135611ae381611d3d565b92915050565b8054600019600884021b1981168255505050565b806000526020600020611b11838254611a68565b9091556000905550565b6001600160a01b0382166001600160a01b03198254161781555050565b8135611b4381611d28565b6001600160a01b0381166001600160a01b0319835416178255506020820135611b6b81611d28565b611b788160018401611b1b565b506040820135611b8781611d28565b611b948160028401611b1b565b5060608201356003820155611bac60808301836116e0565b611bba818360048601611935565b505060a0820135601e19833603018112611bd357600080fd5b8201803567ffffffffffffffff811115611bec57600080fd5b60209182019181023603821315611c0257600080fd5b611c1081836005860161180e565b50505050565b80547fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff1691151560a81b75ff00000000000000000000000000000000000000000016919091179055565b8115611c7c57634e487b7160e01b600052600060045260246000fd5b8235611c8781611d28565b611c918183611b1b565b506020830135611ca081611d3d565b81547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1690151560a01b74ff000000000000000000000000000000000000000016178155611cf9611cf360408501611ad6565b82611c16565b6060830135600182015560808301356002820155611d1a60a08401846116e0565b610a35818360038601611935565b6001600160a01b0381168114610e0e57600080fd5b8015158114610e0e57600080fdfea26469706673582212207f514c196ab04a1f26339b1b41eb4610f73677fa2de96bcde777c0b56298ff9264736f6c63430008000033";

export class SolutionsHub__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _conditionalTokens: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SolutionsHub> {
    return super.deploy(
      _conditionalTokens,
      overrides || {}
    ) as Promise<SolutionsHub>;
  }
  getDeployTransaction(
    _conditionalTokens: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_conditionalTokens, overrides || {});
  }
  attach(address: string): SolutionsHub {
    return super.attach(address) as SolutionsHub;
  }
  connect(signer: Signer): SolutionsHub__factory {
    return super.connect(signer) as SolutionsHub__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SolutionsHubInterface {
    return new utils.Interface(_abi) as SolutionsHubInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SolutionsHub {
    return new Contract(address, _abi, signerOrProvider) as SolutionsHub;
  }
}
