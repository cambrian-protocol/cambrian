/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SolutionManager,
  SolutionManagerInterface,
} from "../SolutionManager";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "solver",
        type: "address",
      },
      {
        internalType: "address",
        name: "keeper",
        type: "address",
      },
      {
        internalType: "address",
        name: "warden",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "solutionId",
        type: "bytes32",
      },
    ],
    name: "askQuestion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "questionId",
        type: "bytes32",
      },
    ],
    name: "confirmOutcomes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "questions",
    outputs: [
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
      {
        internalType: "address",
        name: "solver",
        type: "address",
      },
      {
        internalType: "address",
        name: "keeper",
        type: "address",
      },
      {
        internalType: "address",
        name: "warden",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "questionId",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "outcomes",
        type: "uint256[]",
      },
    ],
    name: "reportOutcomes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052735fbdb2315678afecb367f032d93f642f64180aa36000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561006457600080fd5b50610cea806100746000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80634755b293146100515780636cbdb09b1461006d57806395addb9014610089578063dbee65a0146100bd575b600080fd5b61006b6004803603810190610066919061079e565b6100d9565b005b61008760048036038101906100829190610775565b610218565b005b6100a3600480360381019061009e9190610775565b610365565b6040516100b4959493929190610a83565b60405180910390f35b6100d760048036038101906100d29190610712565b610408565b005b82338073ffffffffffffffffffffffffffffffffffffffff166001600084815260200190815260200160002060000160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461017f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017690610b26565b60405180910390fd5b84600115156001600083815260200190815260200160002060000160009054906101000a900460ff161515146101ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e190610b06565b60405180910390fd5b848460016000898152602001908152602001600020600401919061020f9291906105e7565b50505050505050565b80338073ffffffffffffffffffffffffffffffffffffffff166001600084815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146102be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b590610b46565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c49298ac84600160008781526020019081526020016000206004016040518363ffffffff1660e01b815260040161032e929190610ad6565b600060405180830381600087803b15801561034857600080fd5b505af115801561035c573d6000803e3d6000fd5b50505050505050565b60016020528060005260406000206000915090508060000160009054906101000a900460ff16908060000160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154905085565b6000848484846040516020016104219493929190610a35565b60405160208183030381529060405280519060200120905060606040518060c001604052806001151581526020018773ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152506001600084815260200190815260200160002060008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816003015560a08201518160040190805190602001906105db929190610634565b50905050505050505050565b828054828255906000526020600020908101928215610623579160200282015b82811115610622578235825591602001919060010190610607565b5b5090506106309190610681565b5090565b828054828255906000526020600020908101928215610670579160200282015b8281111561066f578251825591602001919060010190610654565b5b50905061067d9190610681565b5090565b5b8082111561069a576000816000905550600101610682565b5090565b6000813590506106ad81610c86565b92915050565b60008083601f8401126106c557600080fd5b8235905067ffffffffffffffff8111156106de57600080fd5b6020830191508360208202830111156106f657600080fd5b9250929050565b60008135905061070c81610c9d565b92915050565b6000806000806080858703121561072857600080fd5b60006107368782880161069e565b94505060206107478782880161069e565b93505060406107588782880161069e565b9250506060610769878288016106fd565b91505092959194509250565b60006020828403121561078757600080fd5b6000610795848285016106fd565b91505092915050565b6000806000604084860312156107b357600080fd5b60006107c1868287016106fd565b935050602084013567ffffffffffffffff8111156107de57600080fd5b6107ea868287016106b3565b92509250509250925092565b60006108028383610a26565b60208301905092915050565b61081781610bbf565b82525050565b61082e61082982610bbf565b610c2b565b82525050565b600061083f82610b7b565b6108498185610b93565b935061085483610b66565b8060005b8381101561088c5761086982610c59565b61087388826107f6565b975061087e83610b86565b925050600181019050610858565b5085935050505092915050565b6108a281610bd1565b82525050565b6108b181610bdd565b82525050565b6108c86108c382610bdd565b610c3d565b82525050565b60006108db603483610ba4565b91507f5175657374696f6e206d7573742062652061637469766520746f20686176652060008301527f616e206f7574636f6d65207265706f727465642e0000000000000000000000006020830152604082019050919050565b6000610941602f83610ba4565b91507f6d73672e73656e646572206d7573742062652074686520536f6c766572206f6660008301527f20676976656e20536f6c7661626c6500000000000000000000000000000000006020830152604082019050919050565b60006109a7604683610ba4565b91507f6d73672e73656e646572206d757374206265207468652057617272656e206f6660008301527f2074686520536f6c7574696f6e20636f6e7461696e696e67207468697320517560208301527f657374696f6e00000000000000000000000000000000000000000000000000006040830152606082019050919050565b610a2f81610c07565b82525050565b6000610a41828761081d565b601482019150610a51828661081d565b601482019150610a61828561081d565b601482019150610a7182846108b7565b60208201915081905095945050505050565b600060a082019050610a986000830188610899565b610aa5602083018761080e565b610ab2604083018661080e565b610abf606083018561080e565b610acc60808301846108a8565b9695505050505050565b6000604082019050610aeb60008301856108a8565b8181036020830152610afd8184610834565b90509392505050565b60006020820190508181036000830152610b1f816108ce565b9050919050565b60006020820190508181036000830152610b3f81610934565b9050919050565b60006020820190508181036000830152610b5f8161099a565b9050919050565b60008190508160005260206000209050919050565b600081549050919050565b6000600182019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000819050919050565b6000610bca82610be7565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610c24610c1f83610c79565b610bb5565b9050919050565b6000610c3682610c47565b9050919050565b6000819050919050565b6000610c5282610c6c565b9050919050565b6000610c658254610c11565b9050919050565b60008160601b9050919050565b60008160001c9050919050565b610c8f81610bbf565b8114610c9a57600080fd5b50565b610ca681610bdd565b8114610cb157600080fd5b5056fea2646970667358221220ae4ad3d4a3a89be2e549da5fc1d682f161084111192de438438c29750cb9149b64736f6c63430008000033";

export class SolutionManager__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SolutionManager> {
    return super.deploy(overrides || {}) as Promise<SolutionManager>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SolutionManager {
    return super.attach(address) as SolutionManager;
  }
  connect(signer: Signer): SolutionManager__factory {
    return super.connect(signer) as SolutionManager__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SolutionManagerInterface {
    return new utils.Interface(_abi) as SolutionManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SolutionManager {
    return new Contract(address, _abi, signerOrProvider) as SolutionManager;
  }
}
