/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ProposalsHub, ProposalsHubInterface } from "../ProposalsHub";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "CreateProposal",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_proposalId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_solver",
        type: "address",
      },
    ],
    name: "approveERC20Transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_collateralToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_solutionsHub",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_fundingGoal",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_solutionId",
        type: "bytes32",
      },
    ],
    name: "createProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_proposalId",
        type: "bytes32",
      },
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "defundProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_proposalId",
        type: "bytes32",
      },
    ],
    name: "executeProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_proposalId",
        type: "bytes32",
      },
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "fundProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
    ],
    name: "getProposal",
    outputs: [
      {
        components: [
          {
            internalType: "contract IERC20",
            name: "collateralToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "proposer",
            type: "address",
          },
          {
            internalType: "address",
            name: "solutionsHub",
            type: "address",
          },
          {
            internalType: "address",
            name: "primeSolver",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "id",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "solutionId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "funding",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fundingGoal",
            type: "uint256",
          },
        ],
        internalType: "struct ProposalsHub.Proposal",
        name: "proposal",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
    ],
    name: "isProposal",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "proposals",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "collateralToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "proposer",
        type: "address",
      },
      {
        internalType: "address",
        name: "solutionsHub",
        type: "address",
      },
      {
        internalType: "address",
        name: "primeSolver",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "solutionId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "funding",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fundingGoal",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611049806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063980ff6c61161005b578063980ff6c614610105578063c12639f714610118578063c13784f71461012b578063d3f79a051461013e57610088565b8063116f94d01461008d57806332ed5b12146100a2578063430694cf146100d257806354dd9927146100f2575b600080fd5b6100a061009b366004610b51565b61015e565b005b6100b56100b0366004610ad3565b6102cd565b6040516100c9989796959493929190610c36565b60405180910390f35b6100e56100e0366004610ad3565b610322565b6040516100c99190610f18565b6100a0610100366004610b1a565b6103a7565b6100a0610113366004610ad3565b61054c565b6100a0610126366004610b1a565b610618565b6100a0610139366004610aeb565b6107d7565b61015161014c366004610ad3565b610a35565b6040516100c99190610c14565b60003382868560005460405160200161017b959493929190610b96565b60408051601f19818403018152919052805160209091012060008054919250806101a483610fb1565b909155505060008181526002602081905260409182902080546001600160a01b03808a167fffffffffffffffffffffffff0000000000000000000000000000000000000000928316178355600183018054831633179055928201805493891693909116831790556004808201859055600582018690556007820187905592517f73c587f500000000000000000000000000000000000000000000000000000000815290926373c587f59161025c918691889101610c28565b600060405180830381600087803b15801561027657600080fd5b505af115801561028a573d6000803e3d6000fd5b505050507f2d231481d8c1af3958a30a257e93e0df6b089bc07ebedc0a86e7355d1aaf1338826040516102bd9190610c1f565b60405180910390a1505050505050565b6002602081905260009182526040909120805460018201549282015460038301546004840154600585015460068601546007909601546001600160a01b03958616978616969486169590931693919290919088565b61032a610a4c565b5060009081526002602081815260409283902083516101008101855281546001600160a01b039081168252600183015481169382019390935292810154821693830193909352600383015416606082015260048201546080820152600582015460a0820152600682015460c082015260079091015460e082015290565b6000838152600260205260409020600401546103de5760405162461bcd60e51b81526004016103d590610e4d565b60405180910390fd5b6000838152600260205260409020546001600160a01b038381169116146104175760405162461bcd60e51b81526004016103d590610ebb565b600081116104375760405162461bcd60e51b81526004016103d590610e16565b60008381526001602090815260408083203384529091529020548111156104705760405162461bcd60e51b81526004016103d590610d25565b60008381526002602052604081206006018054839290610491908490610f9a565b90915550506000838152600160209081526040808320338452909152812080548392906104bf908490610f9a565b90915550506040516323b872dd60e01b81526001600160a01b038316906323b872dd906104f490309033908690600401610bd7565b602060405180830381600087803b15801561050e57600080fd5b505af1158015610522573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105469190610ab3565b50505050565b60008181526002602052604090206007810154600690910154146105825760405162461bcd60e51b81526004016103d590610ddf565b6000818152600260208190526040918290209081015460059091015491517f60bbb9280000000000000000000000000000000000000000000000000000000081526001600160a01b03909116916360bbb928916105e3918591600401610c28565b600060405180830381600087803b1580156105fd57600080fd5b505af1158015610611573d6000803e3d6000fd5b5050505050565b6000838152600260205260409020600401546106465760405162461bcd60e51b81526004016103d590610e4d565b6000838152600260205260409020546001600160a01b0383811691161461067f5760405162461bcd60e51b81526004016103d590610ebb565b6000811161069f5760405162461bcd60e51b81526004016103d590610e16565b600083815260026020526040902060078101546006909101546106c29083610f82565b11156106e05760405162461bcd60e51b81526004016103d590610e84565b60008381526002602052604081206006018054839290610701908490610f82565b909155505060008381526001602090815260408083203384529091528120805483929061072f908490610f82565b90915550506040516323b872dd60e01b81526001600160a01b038316906323b872dd9061076490339030908690600401610bd7565b602060405180830381600087803b15801561077e57600080fd5b505af1158015610792573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b69190610ab3565b6107d25760405162461bcd60e51b81526004016103d590610d82565b505050565b600082815260026020819052604090912001546001600160a01b031633146108115760405162461bcd60e51b81526004016103d590610cee565b6001600160a01b0381166108375760405162461bcd60e51b81526004016103d590610c80565b60008281526002602081905260408083209182015460059092015490517f191481a00000000000000000000000000000000000000000000000000000000081526001600160a01b039283169392851692849263191481a09261089c9290600401610c28565b60206040518083038186803b1580156108b457600080fd5b505afa1580156108c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ec9190610a90565b6001600160a01b0316146109125760405162461bcd60e51b81526004016103d590610cb7565b60008381526002602052604080822054905163095ea7b360e01b81526001600160a01b0390911691829163095ea7b39161095191879190600401610bfb565b602060405180830381600087803b15801561096b57600080fd5b505af115801561097f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a39190610ab3565b506000848152600260205260409081902060060154905163095ea7b360e01b81526001600160a01b0383169163095ea7b3916109e3918791600401610bfb565b602060405180830381600087803b1580156109fd57600080fd5b505af1158015610a11573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106119190610ab3565b600090815260026020526040902060040154151590565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081019190915290565b600060208284031215610aa1578081fd5b8151610aac81610ffb565b9392505050565b600060208284031215610ac4578081fd5b81518015158114610aac578182fd5b600060208284031215610ae4578081fd5b5035919050565b60008060408385031215610afd578081fd5b823591506020830135610b0f81610ffb565b809150509250929050565b600080600060608486031215610b2e578081fd5b833592506020840135610b4081610ffb565b929592945050506040919091013590565b60008060008060808587031215610b66578081fd5b8435610b7181610ffb565b93506020850135610b8181610ffb565b93969395505050506040820135916060013590565b6bffffffffffffffffffffffff19606096871b8116825260148201959095529290941b90921660348201526048810191909152606881019190915260880190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b90815260200190565b918252602082015260400190565b6001600160a01b03988916815296881660208801529487166040870152929095166060850152608084015260a083019390935260c082019290925260e08101919091526101000190565b6020808252600f908201527f496e76616c696420616464726573730000000000000000000000000000000000604082015260600190565b60208082526018908201527f496e636f727265637420736f6c76657220616464726573730000000000000000604082015260600190565b6020808252601b908201527f6d73672e73656e646572206e6f7420736f6c7574696f6e734875620000000000604082015260600190565b60208082526025908201527f436f6d6d69747465642066756e6473206973206c6f776572207468616e20616d60408201527f6f756e742e000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526022908201527f436f756c64206e6f74207472616e736665722066726f6d206d73672e73656e6460408201527f6572000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526019908201527f50726f706f73616c206e6f742066756c6c792066756e64656400000000000000604082015260600190565b60208082526015908201527f416d6f756e742063616e6e6f74206265207a65726f0000000000000000000000604082015260600190565b60208082526017908201527f50726f706f73616c20646f6573206e6f74206578697374000000000000000000604082015260600190565b60208082526019908201527f43616e27742066756e64206d6f7265207468616e20676f616c00000000000000604082015260600190565b60208082526031908201527f50726f706f73616c20646f6573206e6f7420696e636c7564652074686973207460408201527f6f6b656e20746f2062652066756e646564000000000000000000000000000000606082015260800190565b6000610100820190506001600160a01b03808451168352806020850151166020840152806040850151166040840152806060850151166060840152506080830151608083015260a083015160a083015260c083015160c083015260e083015160e083015292915050565b60008219821115610f9557610f95610fcc565b500190565b600082821015610fac57610fac610fcc565b500390565b6000600019821415610fc557610fc5610fcc565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6001600160a01b038116811461101057600080fd5b5056fea26469706673582212203f49674fac4809010591cf267b8439a9c7338574b5140fc29badb4fbdb958dae64736f6c63430008000033";

export class ProposalsHub__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ProposalsHub> {
    return super.deploy(overrides || {}) as Promise<ProposalsHub>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ProposalsHub {
    return super.attach(address) as ProposalsHub;
  }
  connect(signer: Signer): ProposalsHub__factory {
    return super.connect(signer) as ProposalsHub__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProposalsHubInterface {
    return new utils.Interface(_abi) as ProposalsHubInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProposalsHub {
    return new Contract(address, _abi, signerOrProvider) as ProposalsHub;
  }
}
