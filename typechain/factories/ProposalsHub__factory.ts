/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ProposalsHub, ProposalsHubInterface } from "../ProposalsHub";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_proposalId",
        type: "bytes32",
      },
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "defundProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_proposalId",
        type: "bytes32",
      },
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "fundProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610f39806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806354dd992714610051578063bc197c811461006d578063c12639f71461009d578063f23a6e61146100b9575b600080fd5b61006b600480360381019061006691906109ea565b6100e9565b005b61008760048036038101906100829190610863565b6103e7565b6040516100949190610c7b565b60405180910390f35b6100b760048036038101906100b291906109ea565b6103ff565b005b6100d360048036038101906100ce919061092f565b61073b565b6040516100e09190610c7b565b60405180910390f35b6000806000858152602001908152602001600020600001541415610142576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161013990610cd6565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1660008085815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146101e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101dc90610d16565b60405180910390fd5b60008111610228576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021f90610cb6565b60405180910390fd5b60008084815260200190815260200160002060050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548111156102bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b490610c96565b60405180910390fd5b8060008085815260200190815260200160002060030160008282546102e29190610d9d565b925050819055508060008085815260200190815260200160002060050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461034b9190610d9d565b925050819055508173ffffffffffffffffffffffffffffffffffffffff166323b872dd3033846040518463ffffffff1660e01b815260040161038f93929190610c44565b602060405180830381600087803b1580156103a957600080fd5b505af11580156103bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e191906109c1565b50505050565b600063bc197c8160e01b905098975050505050505050565b6000806000858152602001908152602001600020600001541415610458576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044f90610cd6565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1660008085815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146104fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f290610d16565b60405180910390fd5b6000811161053e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053590610cb6565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b815260040161057b929190610c1b565b60206040518083038186803b15801561059357600080fd5b505afa1580156105a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105cb9190610a39565b905080821115610610576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060790610cf6565b60405180910390fd5b8160008086815260200190815260200160002060030160008282546106359190610d47565b925050819055508160008086815260200190815260200160002060050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461069e9190610d47565b925050819055508273ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016106e293929190610c44565b602060405180830381600087803b1580156106fc57600080fd5b505af1158015610710573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073491906109c1565b5050505050565b600063f23a6e6160e01b90509695505050505050565b60008135905061076081610e90565b92915050565b60008083601f84011261077857600080fd5b8235905067ffffffffffffffff81111561079157600080fd5b6020830191508360208202830111156107a957600080fd5b9250929050565b6000815190506107bf81610ea7565b92915050565b6000813590506107d481610ebe565b92915050565b60008083601f8401126107ec57600080fd5b8235905067ffffffffffffffff81111561080557600080fd5b60208301915083600182028301111561081d57600080fd5b9250929050565b60008135905061083381610ed5565b92915050565b60008135905061084881610eec565b92915050565b60008151905061085d81610eec565b92915050565b60008060008060008060008060a0898b03121561087f57600080fd5b600061088d8b828c01610751565b985050602061089e8b828c01610751565b975050604089013567ffffffffffffffff8111156108bb57600080fd5b6108c78b828c01610766565b9650965050606089013567ffffffffffffffff8111156108e657600080fd5b6108f28b828c01610766565b9450945050608089013567ffffffffffffffff81111561091157600080fd5b61091d8b828c016107da565b92509250509295985092959890939650565b60008060008060008060a0878903121561094857600080fd5b600061095689828a01610751565b965050602061096789828a01610751565b955050604061097889828a01610839565b945050606061098989828a01610839565b935050608087013567ffffffffffffffff8111156109a657600080fd5b6109b289828a016107da565b92509250509295509295509295565b6000602082840312156109d357600080fd5b60006109e1848285016107b0565b91505092915050565b6000806000606084860312156109ff57600080fd5b6000610a0d868287016107c5565b9350506020610a1e86828701610824565b9250506040610a2f86828701610839565b9150509250925092565b600060208284031215610a4b57600080fd5b6000610a598482850161084e565b91505092915050565b610a6b81610dd1565b82525050565b610a7a81610df9565b82525050565b6000610a8d602583610d36565b91507f436f6d6d69747465642066756e6473206973206c6f776572207468616e20616d60008301527f6f756e742e0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610af3601583610d36565b91507f416d6f756e742063616e6e6f74206265207a65726f00000000000000000000006000830152602082019050919050565b6000610b33601783610d36565b91507f50726f706f73616c20646f6573206e6f742065786973740000000000000000006000830152602082019050919050565b6000610b73601f83610d36565b91507f416c6c6f77616e6365206973206c6f776572207468616e20616d6f756e742e006000830152602082019050919050565b6000610bb3603183610d36565b91507f50726f706f73616c20646f6573206e6f7420696e636c7564652074686973207460008301527f6f6b656e20746f2062652066756e6465640000000000000000000000000000006020830152604082019050919050565b610c1581610e57565b82525050565b6000604082019050610c306000830185610a62565b610c3d6020830184610a62565b9392505050565b6000606082019050610c596000830186610a62565b610c666020830185610a62565b610c736040830184610c0c565b949350505050565b6000602082019050610c906000830184610a71565b92915050565b60006020820190508181036000830152610caf81610a80565b9050919050565b60006020820190508181036000830152610ccf81610ae6565b9050919050565b60006020820190508181036000830152610cef81610b26565b9050919050565b60006020820190508181036000830152610d0f81610b66565b9050919050565b60006020820190508181036000830152610d2f81610ba6565b9050919050565b600082825260208201905092915050565b6000610d5282610e57565b9150610d5d83610e57565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d9257610d91610e61565b5b828201905092915050565b6000610da882610e57565b9150610db383610e57565b925082821015610dc657610dc5610e61565b5b828203905092915050565b6000610ddc82610e37565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6000610e3082610dd1565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b610e9981610dd1565b8114610ea457600080fd5b50565b610eb081610de3565b8114610ebb57600080fd5b50565b610ec781610def565b8114610ed257600080fd5b50565b610ede81610e25565b8114610ee957600080fd5b50565b610ef581610e57565b8114610f0057600080fd5b5056fea26469706673582212209ad11d9cde5ce44d876f94309b02dcdf5c5e955b4b2e923a0299f9234d2e2d5164736f6c63430008000033";

export class ProposalsHub__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ProposalsHub> {
    return super.deploy(overrides || {}) as Promise<ProposalsHub>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ProposalsHub {
    return super.attach(address) as ProposalsHub;
  }
  connect(signer: Signer): ProposalsHub__factory {
    return super.connect(signer) as ProposalsHub__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProposalsHubInterface {
    return new utils.Interface(_abi) as ProposalsHubInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProposalsHub {
    return new Contract(address, _abi, signerOrProvider) as ProposalsHub;
  }
}
