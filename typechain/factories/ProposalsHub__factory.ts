/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ProposalsHub, ProposalsHubInterface } from "../ProposalsHub";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "CreateProposal",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_proposalId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_solver",
        type: "address",
      },
    ],
    name: "approveERC20Transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_collateralToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_solutionsHub",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_fundingGoal",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_solutionId",
        type: "bytes32",
      },
    ],
    name: "createProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_proposalId",
        type: "bytes32",
      },
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "defundProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_proposalId",
        type: "bytes32",
      },
    ],
    name: "executeProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_proposalId",
        type: "bytes32",
      },
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "fundProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
    ],
    name: "getProposal",
    outputs: [
      {
        components: [
          {
            internalType: "contract IERC20",
            name: "collateralToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "proposer",
            type: "address",
          },
          {
            internalType: "address",
            name: "solutionsHub",
            type: "address",
          },
          {
            internalType: "address",
            name: "primeSolver",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "id",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "solutionId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "funding",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fundingGoal",
            type: "uint256",
          },
        ],
        internalType: "struct ProposalsHub.Proposal",
        name: "proposal",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
    ],
    name: "isProposal",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "proposals",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "collateralToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "proposer",
        type: "address",
      },
      {
        internalType: "address",
        name: "solutionsHub",
        type: "address",
      },
      {
        internalType: "address",
        name: "primeSolver",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "solutionId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "funding",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fundingGoal",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611e53806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063980ff6c61161005b578063980ff6c61461012c578063c12639f714610148578063c13784f714610164578063d3f79a051461018057610088565b8063116f94d01461008d57806332ed5b12146100a9578063430694cf146100e057806354dd992714610110575b600080fd5b6100a760048036038101906100a29190611385565b6101b0565b005b6100c360048036038101906100be91906112d1565b6103a3565b6040516100d79897969594939291906119de565b60405180910390f35b6100fa60048036038101906100f591906112d1565b61046b565b6040516101079190611b9c565b60405180910390f35b61012a60048036038101906101259190611336565b610619565b005b610146600480360381019061014191906112d1565b610918565b005b610162600480360381019061015d9190611336565b610a42565b005b61017e600480360381019061017991906112fa565b610d66565b005b61019a600480360381019061019591906112d1565b611138565b6040516101a79190611956565b60405180910390f35b6000338286856000546040516020016101cd95949392919061186e565b6040516020818303038152906040528051906020012090506000808154809291906101f790611ced565b91905055506000600260008381526020019081526020016000209050858160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550338160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508181600401819055508281600501819055508381600701819055508473ffffffffffffffffffffffffffffffffffffffff166373c587f583856040518363ffffffff1660e01b815260040161033292919061198c565b600060405180830381600087803b15801561034c57600080fd5b505af1158015610360573d6000803e3d6000fd5b505050507f2d231481d8c1af3958a30a257e93e0df6b089bc07ebedc0a86e7355d1aaf1338826040516103939190611971565b60405180910390a1505050505050565b60026020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040154908060050154908060060154908060070154905088565b61047361115e565b60026000838152602001908152602001600020604051806101000160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820154815260200160058201548152602001600682015481526020016007820154815250509050919050565b6000801b60026000858152602001908152602001600020600401541415610675576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066c90611b3c565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166002600085815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610719576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071090611b7c565b60405180910390fd5b6000811161075c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075390611b1c565b60405180910390fd5b6001600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548111156107ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e690611abc565b60405180910390fd5b806002600085815260200190815260200160002060060160008282546108159190611c1f565b92505081905550806001600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461087c9190611c1f565b925050819055508173ffffffffffffffffffffffffffffffffffffffff166323b872dd3033846040518463ffffffff1660e01b81526004016108c0939291906118cd565b602060405180830381600087803b1580156108da57600080fd5b505af11580156108ee573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091291906112a8565b50505050565b6002600082815260200190815260200160002060070154600260008381526020019081526020016000206006015414610986576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097d90611afc565b60405180910390fd5b6002600082815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166360bbb9288260026000858152602001908152602001600020600501546040518363ffffffff1660e01b8152600401610a0d92919061198c565b600060405180830381600087803b158015610a2757600080fd5b505af1158015610a3b573d6000803e3d6000fd5b5050505050565b6000801b60026000858152602001908152602001600020600401541415610a9e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9590611b3c565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166002600085815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610b42576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3990611b7c565b60405180910390fd5b60008111610b85576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7c90611b1c565b60405180910390fd5b6002600084815260200190815260200160002060070154600260008581526020019081526020016000206006015482610bbe9190611bc9565b1115610bff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf690611b5c565b60405180910390fd5b80600260008581526020019081526020016000206006016000828254610c259190611bc9565b92505081905550806001600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c8c9190611bc9565b925050819055508173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610cd0939291906118cd565b602060405180830381600087803b158015610cea57600080fd5b505af1158015610cfe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2291906112a8565b610d61576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5890611adc565b60405180910390fd5b505050565b6002600083815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e0190611a9c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610e7a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7190611a5c565b60405180910390fd5b60006002600084815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1663191481a0600260008781526020019081526020016000206005015460006040518363ffffffff1660e01b8152600401610f1e9291906119b5565b60206040518083038186803b158015610f3657600080fd5b505afa158015610f4a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f6e919061127f565b73ffffffffffffffffffffffffffffffffffffffff1614610fc4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fbb90611a7c565b60405180910390fd5b60006002600085815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663095ea7b38460006040518363ffffffff1660e01b815260040161103b929190611904565b602060405180830381600087803b15801561105557600080fd5b505af1158015611069573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061108d91906112a8565b508073ffffffffffffffffffffffffffffffffffffffff1663095ea7b38460026000888152602001908152602001600020600601546040518363ffffffff1660e01b81526004016110df92919061192d565b602060405180830381600087803b1580156110f957600080fd5b505af115801561110d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061113191906112a8565b5050505050565b60008060001b600260008481526020019081526020016000206004015414159050919050565b604051806101000160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600080191681526020016000801916815260200160008152602001600081525090565b60008135905061121081611daa565b92915050565b60008151905061122581611daa565b92915050565b60008151905061123a81611dc1565b92915050565b60008135905061124f81611dd8565b92915050565b60008135905061126481611def565b92915050565b60008135905061127981611e06565b92915050565b60006020828403121561129157600080fd5b600061129f84828501611216565b91505092915050565b6000602082840312156112ba57600080fd5b60006112c88482850161122b565b91505092915050565b6000602082840312156112e357600080fd5b60006112f184828501611240565b91505092915050565b6000806040838503121561130d57600080fd5b600061131b85828601611240565b925050602061132c85828601611201565b9150509250929050565b60008060006060848603121561134b57600080fd5b600061135986828701611240565b935050602061136a86828701611255565b925050604061137b8682870161126a565b9150509250925092565b6000806000806080858703121561139b57600080fd5b60006113a987828801611255565b94505060206113ba87828801611201565b93505060406113cb8782880161126a565b92505060606113dc87828801611240565b91505092959194509250565b6113f181611c53565b82525050565b61140081611c53565b82525050565b61141761141282611c53565b611d36565b82525050565b61142681611c65565b82525050565b61143581611c71565b82525050565b61144481611c71565b82525050565b61145b61145682611c71565b611d48565b82525050565b61146a81611cb7565b82525050565b61147981611cb7565b82525050565b61149061148b82611cb7565b611d36565b82525050565b61149f81611cdb565b82525050565b60006114b2600f83611bb8565b91507f496e76616c6964206164647265737300000000000000000000000000000000006000830152602082019050919050565b60006114f2601883611bb8565b91507f496e636f727265637420736f6c766572206164647265737300000000000000006000830152602082019050919050565b6000611532601b83611bb8565b91507f6d73672e73656e646572206e6f7420736f6c7574696f6e7348756200000000006000830152602082019050919050565b6000611572602583611bb8565b91507f436f6d6d69747465642066756e6473206973206c6f776572207468616e20616d60008301527f6f756e742e0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006115d8602283611bb8565b91507f436f756c64206e6f74207472616e736665722066726f6d206d73672e73656e6460008301527f65720000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061163e601983611bb8565b91507f50726f706f73616c206e6f742066756c6c792066756e646564000000000000006000830152602082019050919050565b600061167e601583611bb8565b91507f416d6f756e742063616e6e6f74206265207a65726f00000000000000000000006000830152602082019050919050565b60006116be601783611bb8565b91507f50726f706f73616c20646f6573206e6f742065786973740000000000000000006000830152602082019050919050565b60006116fe601983611bb8565b91507f43616e27742066756e64206d6f7265207468616e20676f616c000000000000006000830152602082019050919050565b600061173e603183611bb8565b91507f50726f706f73616c20646f6573206e6f7420696e636c7564652074686973207460008301527f6f6b656e20746f2062652066756e6465640000000000000000000000000000006020830152604082019050919050565b610100820160008201516117ae6000850182611461565b5060208201516117c160208501826113e8565b5060408201516117d460408501826113e8565b5060608201516117e760608501826113e8565b5060808201516117fa608085018261142c565b5060a082015161180d60a085018261142c565b5060c082015161182060c0850182611839565b5060e082015161183360e0850182611839565b50505050565b61184281611cad565b82525050565b61185181611cad565b82525050565b61186861186382611cad565b611d64565b82525050565b600061187a8288611406565b60148201915061188a828761144a565b60208201915061189a828661147f565b6014820191506118aa8285611857565b6020820191506118ba8284611857565b6020820191508190509695505050505050565b60006060820190506118e260008301866113f7565b6118ef60208301856113f7565b6118fc6040830184611848565b949350505050565b600060408201905061191960008301856113f7565b6119266020830184611496565b9392505050565b600060408201905061194260008301856113f7565b61194f6020830184611848565b9392505050565b600060208201905061196b600083018461141d565b92915050565b6000602082019050611986600083018461143b565b92915050565b60006040820190506119a1600083018561143b565b6119ae602083018461143b565b9392505050565b60006040820190506119ca600083018561143b565b6119d76020830184611496565b9392505050565b6000610100820190506119f4600083018b611470565b611a01602083018a6113f7565b611a0e60408301896113f7565b611a1b60608301886113f7565b611a28608083018761143b565b611a3560a083018661143b565b611a4260c0830185611848565b611a4f60e0830184611848565b9998505050505050505050565b60006020820190508181036000830152611a75816114a5565b9050919050565b60006020820190508181036000830152611a95816114e5565b9050919050565b60006020820190508181036000830152611ab581611525565b9050919050565b60006020820190508181036000830152611ad581611565565b9050919050565b60006020820190508181036000830152611af5816115cb565b9050919050565b60006020820190508181036000830152611b1581611631565b9050919050565b60006020820190508181036000830152611b3581611671565b9050919050565b60006020820190508181036000830152611b55816116b1565b9050919050565b60006020820190508181036000830152611b75816116f1565b9050919050565b60006020820190508181036000830152611b9581611731565b9050919050565b600061010082019050611bb26000830184611797565b92915050565b600082825260208201905092915050565b6000611bd482611cad565b9150611bdf83611cad565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611c1457611c13611d6e565b5b828201905092915050565b6000611c2a82611cad565b9150611c3583611cad565b925082821015611c4857611c47611d6e565b5b828203905092915050565b6000611c5e82611c8d565b9050919050565b60008115159050919050565b6000819050919050565b6000611c8682611c53565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611cc282611cc9565b9050919050565b6000611cd482611c8d565b9050919050565b6000611ce682611cad565b9050919050565b6000611cf882611cad565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611d2b57611d2a611d6e565b5b600182019050919050565b6000611d4182611d52565b9050919050565b6000819050919050565b6000611d5d82611d9d565b9050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160601b9050919050565b611db381611c53565b8114611dbe57600080fd5b50565b611dca81611c65565b8114611dd557600080fd5b50565b611de181611c71565b8114611dec57600080fd5b50565b611df881611c7b565b8114611e0357600080fd5b50565b611e0f81611cad565b8114611e1a57600080fd5b5056fea2646970667358221220704869f69f7c895fee6dd8c255ca6b74e9f5c34cb8da339308286be4428960f864736f6c63430008000033";

export class ProposalsHub__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ProposalsHub> {
    return super.deploy(overrides || {}) as Promise<ProposalsHub>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ProposalsHub {
    return super.attach(address) as ProposalsHub;
  }
  connect(signer: Signer): ProposalsHub__factory {
    return super.connect(signer) as ProposalsHub__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProposalsHubInterface {
    return new utils.Interface(_abi) as ProposalsHubInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProposalsHub {
    return new Contract(address, _abi, signerOrProvider) as ProposalsHub;
  }
}
