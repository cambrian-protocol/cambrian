/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ProposalsHub, ProposalsHubInterface } from "../ProposalsHub";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_collateralToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_keeper",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_fundingGoal",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_solutionId",
        type: "bytes32",
      },
    ],
    name: "createProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_proposalId",
        type: "bytes32",
      },
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "defundProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_proposalId",
        type: "bytes32",
      },
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "fundProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "proposals",
    outputs: [
      {
        internalType: "bool",
        name: "configured",
        type: "bool",
      },
      {
        internalType: "contract IERC20",
        name: "collateralToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "proposer",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "solutionId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "funding",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fundingGoal",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506111e0806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063116f94d01461006757806332ed5b121461008357806354dd9927146100b9578063bc197c81146100d5578063c12639f714610105578063f23a6e6114610121575b600080fd5b610081600480360381019061007c9190610b90565b610151565b005b61009d60048036038101906100989190610b18565b610263565b6040516100b09796959493929190610e74565b60405180910390f35b6100d360048036038101906100ce9190610b41565b6102f2565b005b6100ef60048036038101906100ea9190610991565b6105f7565b6040516100fc9190610ee3565b60405180910390f35b61011f600480360381019061011a9190610b41565b61060f565b005b61013b60048036038101906101369190610a5d565b61087e565b6040516101489190610ee3565b60405180910390f35b60003385858560005460405160200161016e959493929190610dde565b604051602081830303815290604052805190602001209050600060016000838152602001908152602001600020905060008160000160006101000a81548160ff021916908315150217905550858160000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550338160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818160020181905550828160030181905550838160050181905550505050505050565b60016020528060005260406000206000915090508060000160009054906101000a900460ff16908060000160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154908060040154908060050154905087565b6000801b6001600085815260200190815260200160002060020154141561034e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034590610f3e565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166001600085815260200190815260200160002060000160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146103f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e990610f5e565b60405180910390fd5b60008111610435576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042c90610f1e565b60405180910390fd5b6001600084815260200190815260200160002060060160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548111156104cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c290610efe565b60405180910390fd5b806001600085815260200190815260200160002060040160008282546104f19190610fe5565b92505081905550806001600085815260200190815260200160002060060160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461055b9190610fe5565b925050819055508173ffffffffffffffffffffffffffffffffffffffff166323b872dd3033846040518463ffffffff1660e01b815260040161059f93929190610e3d565b602060405180830381600087803b1580156105b957600080fd5b505af11580156105cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f19190610aef565b50505050565b600063bc197c8160e01b905098975050505050505050565b6000801b6001600085815260200190815260200160002060020154141561066b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066290610f3e565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166001600085815260200190815260200160002060000160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461070f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070690610f5e565b60405180910390fd5b60008111610752576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074990610f1e565b60405180910390fd5b806001600085815260200190815260200160002060040160008282546107789190610f8f565b92505081905550806001600085815260200190815260200160002060060160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107e29190610f8f565b925050819055508173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161082693929190610e3d565b602060405180830381600087803b15801561084057600080fd5b505af1158015610854573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108789190610aef565b50505050565b600063f23a6e6160e01b90509695505050505050565b6000813590506108a381611137565b92915050565b60008083601f8401126108bb57600080fd5b8235905067ffffffffffffffff8111156108d457600080fd5b6020830191508360208202830111156108ec57600080fd5b9250929050565b6000815190506109028161114e565b92915050565b60008135905061091781611165565b92915050565b60008083601f84011261092f57600080fd5b8235905067ffffffffffffffff81111561094857600080fd5b60208301915083600182028301111561096057600080fd5b9250929050565b6000813590506109768161117c565b92915050565b60008135905061098b81611193565b92915050565b60008060008060008060008060a0898b0312156109ad57600080fd5b60006109bb8b828c01610894565b98505060206109cc8b828c01610894565b975050604089013567ffffffffffffffff8111156109e957600080fd5b6109f58b828c016108a9565b9650965050606089013567ffffffffffffffff811115610a1457600080fd5b610a208b828c016108a9565b9450945050608089013567ffffffffffffffff811115610a3f57600080fd5b610a4b8b828c0161091d565b92509250509295985092959890939650565b60008060008060008060a08789031215610a7657600080fd5b6000610a8489828a01610894565b9650506020610a9589828a01610894565b9550506040610aa689828a0161097c565b9450506060610ab789828a0161097c565b935050608087013567ffffffffffffffff811115610ad457600080fd5b610ae089828a0161091d565b92509250509295509295509295565b600060208284031215610b0157600080fd5b6000610b0f848285016108f3565b91505092915050565b600060208284031215610b2a57600080fd5b6000610b3884828501610908565b91505092915050565b600080600060608486031215610b5657600080fd5b6000610b6486828701610908565b9350506020610b7586828701610967565b9250506040610b868682870161097c565b9150509250925092565b60008060008060808587031215610ba657600080fd5b6000610bb487828801610967565b9450506020610bc587828801610894565b9350506040610bd68782880161097c565b9250506060610be787828801610908565b91505092959194509250565b610bfc81611019565b82525050565b610c13610c0e82611019565b6110cd565b82525050565b610c228161102b565b82525050565b610c3181611037565b82525050565b610c4081611041565b82525050565b610c4f816110a9565b82525050565b610c66610c61826110a9565b6110cd565b82525050565b6000610c79602583610f7e565b91507f436f6d6d69747465642066756e6473206973206c6f776572207468616e20616d60008301527f6f756e742e0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610cdf601583610f7e565b91507f416d6f756e742063616e6e6f74206265207a65726f00000000000000000000006000830152602082019050919050565b6000610d1f601783610f7e565b91507f50726f706f73616c20646f6573206e6f742065786973740000000000000000006000830152602082019050919050565b6000610d5f603183610f7e565b91507f50726f706f73616c20646f6573206e6f7420696e636c7564652074686973207460008301527f6f6b656e20746f2062652066756e6465640000000000000000000000000000006020830152604082019050919050565b610dc18161109f565b82525050565b610dd8610dd38261109f565b6110f1565b82525050565b6000610dea8288610c02565b601482019150610dfa8287610c55565b601482019150610e0a8286610c02565b601482019150610e1a8285610dc7565b602082019150610e2a8284610dc7565b6020820191508190509695505050505050565b6000606082019050610e526000830186610bf3565b610e5f6020830185610bf3565b610e6c6040830184610db8565b949350505050565b600060e082019050610e89600083018a610c19565b610e966020830189610c46565b610ea36040830188610bf3565b610eb06060830187610c28565b610ebd6080830186610c28565b610eca60a0830185610db8565b610ed760c0830184610db8565b98975050505050505050565b6000602082019050610ef86000830184610c37565b92915050565b60006020820190508181036000830152610f1781610c6c565b9050919050565b60006020820190508181036000830152610f3781610cd2565b9050919050565b60006020820190508181036000830152610f5781610d12565b9050919050565b60006020820190508181036000830152610f7781610d52565b9050919050565b600082825260208201905092915050565b6000610f9a8261109f565b9150610fa58361109f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610fda57610fd96110fb565b5b828201905092915050565b6000610ff08261109f565b9150610ffb8361109f565b92508282101561100e5761100d6110fb565b5b828203905092915050565b60006110248261107f565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600061107882611019565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006110b4826110bb565b9050919050565b60006110c68261107f565b9050919050565b60006110d8826110df565b9050919050565b60006110ea8261112a565b9050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160601b9050919050565b61114081611019565b811461114b57600080fd5b50565b6111578161102b565b811461116257600080fd5b50565b61116e81611037565b811461117957600080fd5b50565b6111858161106d565b811461119057600080fd5b50565b61119c8161109f565b81146111a757600080fd5b5056fea264697066735822122099ab61c21a65c9bebb66477b3679f720798d24b89c3a520eb30797cd0f7745dc64736f6c63430008000033";

export class ProposalsHub__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ProposalsHub> {
    return super.deploy(overrides || {}) as Promise<ProposalsHub>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ProposalsHub {
    return super.attach(address) as ProposalsHub;
  }
  connect(signer: Signer): ProposalsHub__factory {
    return super.connect(signer) as ProposalsHub__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProposalsHubInterface {
    return new utils.Interface(_abi) as ProposalsHubInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProposalsHub {
    return new Contract(address, _abi, signerOrProvider) as ProposalsHub;
  }
}
