/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Solver, SolverInterface } from "../Solver";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_type",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_key",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "addData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "addressFromChainIndex",
    outputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "payouts",
        type: "uint256[]",
      },
    ],
    name: "arbitrate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "arbitrateNull",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "arbitrationPending",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "arbitrationRequested",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "chainChild",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "chainIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "chainParent",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "conditions",
    outputs: [
      {
        internalType: "bytes32",
        name: "questionId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "parentCollectionId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "conditionId",
        type: "bytes32",
      },
      {
        internalType: "enum SolverLib.Status",
        name: "status",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "config",
    outputs: [
      {
        internalType: "contract Solver",
        name: "implementation",
        type: "address",
      },
      {
        internalType: "address",
        name: "keeper",
        type: "address",
      },
      {
        internalType: "address",
        name: "arbitrator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "timelockSeconds",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "contract IERC20",
            name: "collateralToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "outcomeSlots",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "parentCollectionPartitionIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "partition",
            type: "uint256[]",
          },
          {
            internalType: "uint256[][]",
            name: "recipientAddressPorts",
            type: "uint256[][]",
          },
          {
            internalType: "uint256[][]",
            name: "recipientAmounts",
            type: "uint256[][]",
          },
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
        ],
        internalType: "struct SolverLib.ConditionBase",
        name: "conditionBase",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "confirmPayouts",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "deferredIngest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract Solver",
            name: "implementation",
            type: "address",
          },
          {
            internalType: "address",
            name: "keeper",
            type: "address",
          },
          {
            internalType: "address",
            name: "arbitrator",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "timelockSeconds",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "executions",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isDeferred",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isConstant",
                type: "bool",
              },
              {
                internalType: "uint8",
                name: "port",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "key",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "solverIndex",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct SolverLib.Ingest[]",
            name: "ingests",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "executed",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isPort",
                type: "bool",
              },
              {
                internalType: "address",
                name: "to",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "portIndex",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct SolverLib.Action[]",
            name: "actions",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "contract IERC20",
                name: "collateralToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "outcomeSlots",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "parentCollectionPartitionIndex",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "uint256[]",
                name: "partition",
                type: "uint256[]",
              },
              {
                internalType: "uint256[][]",
                name: "recipientAddressPorts",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "recipientAmounts",
                type: "uint256[][]",
              },
              {
                internalType: "string",
                name: "metadata",
                type: "string",
              },
            ],
            internalType: "struct SolverLib.ConditionBase",
            name: "conditionBase",
            type: "tuple",
          },
        ],
        internalType: "struct SolverLib.Config",
        name: "_config",
        type: "tuple",
      },
    ],
    name: "deployChild",
    outputs: [
      {
        internalType: "contract Solver",
        name: "_solver",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "executeSolve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_partitionIndex",
        type: "uint256",
      },
    ],
    name: "getCanonCollectionId",
    outputs: [
      {
        internalType: "bytes32",
        name: "collectionId",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getConditions",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "questionId",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "parentCollectionId",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "conditionId",
            type: "bytes32",
          },
          {
            internalType: "uint256[]",
            name: "payouts",
            type: "uint256[]",
          },
          {
            internalType: "enum SolverLib.Status",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct SolverLib.Condition[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_key",
        type: "uint256",
      },
    ],
    name: "getOutput",
    outputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ingestsValid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_chainParent",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_chainIndex",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "contract Solver",
            name: "implementation",
            type: "address",
          },
          {
            internalType: "address",
            name: "keeper",
            type: "address",
          },
          {
            internalType: "address",
            name: "arbitrator",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "timelockSeconds",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "executions",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isDeferred",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isConstant",
                type: "bool",
              },
              {
                internalType: "uint8",
                name: "port",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "key",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "solverIndex",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct SolverLib.Ingest[]",
            name: "ingests",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "executed",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isPort",
                type: "bool",
              },
              {
                internalType: "address",
                name: "to",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "portIndex",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct SolverLib.Action[]",
            name: "actions",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "contract IERC20",
                name: "collateralToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "outcomeSlots",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "parentCollectionPartitionIndex",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "uint256[]",
                name: "partition",
                type: "uint256[]",
              },
              {
                internalType: "uint256[][]",
                name: "recipientAddressPorts",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "recipientAmounts",
                type: "uint256[][]",
              },
              {
                internalType: "string",
                name: "metadata",
                type: "string",
              },
            ],
            internalType: "struct SolverLib.ConditionBase",
            name: "conditionBase",
            type: "tuple",
          },
        ],
        internalType: "struct SolverLib.Config",
        name: "_solverConfig",
        type: "tuple",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "prepareSolve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_payouts",
        type: "uint256[]",
      },
    ],
    name: "proposePayouts",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_trackingId",
        type: "bytes32",
      },
    ],
    name: "setTrackingId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "timelock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "trackingId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50614350806100206000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c80635bd11123116100f9578063972a688b11610097578063d33219b411610071578063d33219b414610388578063e7fd205914610390578063ea8221a9146103a3578063f23a6e61146103ab576101c4565b8063972a688b146103585780639999250614610360578063bc197c8114610368576101c4565b80637c123627116100d35780637c1236271461031557806380c2dde21461032a57806384dbd3911461033257806394e0560014610345576101c4565b80635bd11123146102e05780636980c22b146102e857806379502c55146102fb576101c4565b80632c17b91e1161016657806348cbb2fc1161014057806348cbb2fc146102a857806348d6bc00146102bd5780634da34efd146102c557806355dd978b146102d8576101c4565b80632c17b91e146102785780633837b05e146102805780633a275fa2146102a0576101c4565b806317861f87116101a257806317861f871461021a57806318f792781461023a57806326c50007146102425780632b36342714610265576101c4565b806301ffc9a7146101c95780630d06101a146101f25780630d49722d14610207575b600080fd5b6101dc6101d736600461251e565b6103be565b6040516101e99190612ee3565b60405180910390f35b6102056102003660046124ee565b610404565b005b610205610215366004612402565b610432565b61022d6102283660046124ee565b610593565b6040516101e99190612f2e565b61020561067c565b6102556102503660046124ee565b6107d7565b6040516101e99493929190612ef7565b6102056102733660046126a4565b610814565b610205610850565b61029361028e3660046124ee565b610993565b6040516101e99190612d23565b610205610a55565b6102b0610d6f565b6040516101e99190612eee565b610205610d75565b6102056102d33660046123ab565b610ebf565b610293610f7b565b610205610f8a565b6102936102f6366004612669565b611063565b610303611168565b6040516101e996959493929190612f41565b61031d611478565b6040516101e99190612d79565b61029361159c565b6102b06103403660046124ee565b6115b0565b6102056103533660046124ee565b6116ab565b6102056116e1565b6101dc6117ba565b61037b61037636600461223d565b611867565b6040516101e99190612f19565b6102b0611894565b61020561039e366004612442565b61189a565b6102b0611a0a565b61037b6103b93660046122f8565b611a10565b60006001600160e01b031982167f4e2312e00000000000000000000000000000000000000000000000000000000014806103fc57506103fc82611a3b565b90505b919050565b6015541561042d5760405162461bcd60e51b8152600401610424906133ca565b60405180910390fd5b601555565b6002546001600160a01b0316331461045c5760405162461bcd60e51b815260040161042490613136565b60016010805461046e906001906138fd565b8154811061048c57634e487b7160e01b600052603260045260246000fd5b600091825260209091206004600590920201015460ff1660068111156104c257634e487b7160e01b600052602160045260246000fd5b146104df5760405162461bcd60e51b815260040161042490613393565b6010805473__$94d7d2f22770e4b0d1a2b99fb2812308e2$__91636a0a24f19161050b906001906138fd565b8154811061052957634e487b7160e01b600052603260045260246000fd5b906000526020600020906005020184846040518463ffffffff1660e01b8152600401610557939291906134a5565b60006040518083038186803b15801561056f57600080fd5b505af4158015610583573d6000803e3d6000fd5b5050505061058f611a6d565b5050565b60008181526017602052604090205460609060ff16806105c25750601054600083815260186020526040902054145b6105de5760405162461bcd60e51b815260040161042490613401565b600082815260166020526040902080546105f790613d4f565b80601f016020809104026020016040519081016040528092919081815260200182805461062390613d4f565b80156106705780601f1061064557610100808354040283529160200191610670565b820191906000526020600020905b81548152906001019060200180831161065357829003601f168201915b50505050509050919050565b6003546001600160a01b031633146106a65760405162461bcd60e51b815260040161042490613212565b6002601080546106b8906001906138fd565b815481106106d657634e487b7160e01b600052603260045260246000fd5b600091825260209091206004600590920201015460ff16600681111561070c57634e487b7160e01b600052602160045260246000fd5b146107295760405162461bcd60e51b8152600401610424906132b7565b6010805473__$94d7d2f22770e4b0d1a2b99fb2812308e2$__916324b2860291610755906001906138fd565b8154811061077357634e487b7160e01b600052603260045260246000fd5b90600052602060002090600502016040518263ffffffff1660e01b815260040161079d9190612eee565b60006040518083038186803b1580156107b557600080fd5b505af41580156107c9573d6000803e3d6000fd5b505050506107d5611a6d565b565b601081815481106107e757600080fd5b60009182526020909120600590910201805460018201546002830154600490930154919350919060ff1684565b6002546001600160a01b0316331461083e5760405162461bcd60e51b815260040161042490613091565b61084b8383600084611a8a565b505050565b60115460ff1615610976576002546001600160a01b031633146108855760405162461bcd60e51b81526004016104249061335c565b600560108054610897906001906138fd565b815481106108b557634e487b7160e01b600052603260045260246000fd5b600091825260209091206004600590920201015460ff1660068111156108eb57634e487b7160e01b600052602160045260246000fd5b148061095a5750600660108054610904906001906138fd565b8154811061092257634e487b7160e01b600052603260045260246000fd5b600091825260209091206004600590920201015460ff16600681111561095857634e487b7160e01b600052602160045260246000fd5b145b6109765760405162461bcd60e51b815260040161042490613023565b6011805460ff1916600117905561098b611bbc565b6107d5611d03565b6011546012546013546040517f9fa61fa300000000000000000000000000000000000000000000000000000000815260009373__$94d7d2f22770e4b0d1a2b99fb2812308e2$__93639fa61fa393610a0593889330936001600160a01b03610100909204821693911691600401613696565b60206040518083038186803b158015610a1d57600080fd5b505af4158015610a31573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fc9190612221565b600060108054610a67906001906138fd565b81548110610a8557634e487b7160e01b600052603260045260246000fd5b600091825260209091206004600590920201015460ff166006811115610abb57634e487b7160e01b600052602160045260246000fd5b14610ad85760405162461bcd60e51b815260040161042490613438565b610ae06117ba565b610afc5760405162461bcd60e51b8152600401610424906131a4565b6010805460019190610b0f9083906138fd565b81548110610b2d57634e487b7160e01b600052603260045260246000fd5b60009182526020909120600460059092020101805460ff19166001836006811115610b6857634e487b7160e01b600052602160045260246000fd5b021790555073__$94d7d2f22770e4b0d1a2b99fb2812308e2$__6366662585601160019054906101000a90046001600160a01b0316600160070160106001601080549050610bb691906138fd565b81548110610bd457634e487b7160e01b600052603260045260246000fd5b90600052602060002090600502016040518463ffffffff1660e01b8152600401610c0093929190612d37565b60006040518083038186803b158015610c1857600080fd5b505af4158015610c2c573d6000803e3d6000fd5b50506010805473__$94d7d2f22770e4b0d1a2b99fb2812308e2$__935063366968289250610c5c906001906138fd565b81548110610c7a57634e487b7160e01b600052603260045260246000fd5b906000526020600020906005020160016007013060166015546040518663ffffffff1660e01b8152600401610cb39594939291906134ff565b60006040518083038186803b158015610ccb57600080fd5b505af4158015610cdf573d6000803e3d6000fd5b50506040517f7a00026d00000000000000000000000000000000000000000000000000000000815273__$94d7d2f22770e4b0d1a2b99fb2812308e2$__9250637a00026d9150610d3790600790601690600401612d6b565b60006040518083038186803b158015610d4f57600080fd5b505af4158015610d63573d6000803e3d6000fd5b505050506107d5611d68565b60155481565b6014544211610d965760405162461bcd60e51b81526004016104249061316d565b600260108054610da8906001906138fd565b81548110610dc657634e487b7160e01b600052603260045260246000fd5b600091825260209091206004600590920201015460ff166006811115610dfc57634e487b7160e01b600052602160045260246000fd5b14610e195760405162461bcd60e51b815260040161042490613280565b6010805473__$94d7d2f22770e4b0d1a2b99fb2812308e2$__9163b89c10e791610e45906001906138fd565b81548110610e6357634e487b7160e01b600052603260045260246000fd5b90600052602060002090600502016040518263ffffffff1660e01b8152600401610e8d9190612eee565b60006040518083038186803b158015610ea557600080fd5b505af4158015610eb9573d6000803e3d6000fd5b50505050565b3373e7f1725e7734ce288f8367e1bb143e90bb3f051214610ef25760405162461bcd60e51b8152600401610424906130ff565b6000610f0460408301602084016121fe565b6001600160a01b03161415610f2b5760405162461bcd60e51b815260040161042490613249565b601180547fffffffffffffffffffffff0000000000000000000000000000000000000000ff166101006001600160a01b038616021790556013829055806001610f748282614079565b5050505050565b6012546001600160a01b031681565b6003546001600160a01b03163314610fb45760405162461bcd60e51b815260040161042490613212565b600360108054610fc6906001906138fd565b81548110610fe457634e487b7160e01b600052603260045260246000fd5b600091825260209091206004600590920201015460ff16600681111561101a57634e487b7160e01b600052602160045260246000fd5b146110375760405162461bcd60e51b8152600401610424906131db565b6010805473__$94d7d2f22770e4b0d1a2b99fb2812308e2$__9163ec7ac2f091610755906001906138fd565b6012546000906001600160a01b03161561108f5760405162461bcd60e51b8152600401610424906130c8565b6013546040517f4dd0aa4900000000000000000000000000000000000000000000000000000000815273__$94d7d2f22770e4b0d1a2b99fb2812308e2$__91634dd0aa49916110e591869130919060040161356d565b604080518083038186803b1580156110fc57600080fd5b505af4158015611110573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111349190612372565b6012805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03939093169290921790915592915050565b60018054600254600354600454600580546001600160a01b03958616969486169590931693919261119890613d4f565b80601f01602080910402602001604051908101604052809291908181526020018280546111c490613d4f565b80156112115780601f106111e657610100808354040283529160200191611211565b820191906000526020600020905b8154815290600101906020018083116111f457829003601f168201915b505060408051610100810182526007870180546001600160a01b031682526008880154602080840191909152600989015483850152600a8901546060840152600b890180548551818402810184019096528086529899989397509195506080870194509091908301828280156112a657602002820191906000526020600020905b815481526020019060010190808311611292575b5050505050815260200160058201805480602002602001604051908101604052809291908181526020016000905b828210156113405760008481526020908190208301805460408051828502810185019091528181529283018282801561132c57602002820191906000526020600020905b815481526020019060010190808311611318575b5050505050815260200190600101906112d4565b50505050815260200160068201805480602002602001604051908101604052809291908181526020016000905b828210156113d9576000848152602090819020830180546040805182850281018501909152818152928301828280156113c557602002820191906000526020600020905b8154815260200190600101908083116113b1575b50505050508152602001906001019061136d565b5050505081526020016007820180546113f190613d4f565b80601f016020809104026020016040519081016040528092919081815260200182805461141d90613d4f565b801561146a5780601f1061143f5761010080835404028352916020019161146a565b820191906000526020600020905b81548152906001019060200180831161144d57829003601f168201915b505050505081525050905086565b60606010805480602002602001604051908101604052809291908181526020016000905b8282101561159357838290600052602060002090600502016040518060a00160405290816000820154815260200160018201548152602001600282015481526020016003820180548060200260200160405190810160405280929190818152602001828054801561152c57602002820191906000526020600020905b815481526020019060010190808311611518575b5050509183525050600482015460209091019060ff16600681111561156157634e487b7160e01b600052602160045260246000fd5b600681111561158057634e487b7160e01b600052602160045260246000fd5b815250508152602001906001019061149c565b50505050905090565b60115461010090046001600160a01b031681565b600073__$94d7d2f22770e4b0d1a2b99fb2812308e2$__630bc1c42a601060016010805490506115e091906138fd565b815481106115fe57634e487b7160e01b600052603260045260246000fd5b90600052602060002090600502016001600701600401858154811061163357634e487b7160e01b600052603260045260246000fd5b90600052602060002001546040518363ffffffff1660e01b815260040161165b92919061354b565b60206040518083038186803b15801561167357600080fd5b505af4158015611687573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fc9190612506565b6002546001600160a01b031633146116d55760405162461bcd60e51b815260040161042490613091565b6116de81611e6c565b50565b6003546001600160a01b0316331461170b5760405162461bcd60e51b815260040161042490613212565b60046010805461171d906001906138fd565b8154811061173b57634e487b7160e01b600052603260045260246000fd5b600091825260209091206004600590920201015460ff16600681111561177157634e487b7160e01b600052602160045260246000fd5b1461178e5760405162461bcd60e51b815260040161042490613325565b6010805473__$94d7d2f22770e4b0d1a2b99fb2812308e2$__916359111fb591610755906001906138fd565b6010546040517f5cc1f6b500000000000000000000000000000000000000000000000000000000815260009173__$94d7d2f22770e4b0d1a2b99fb2812308e2$__91635cc1f6b5916118129160069190600401612e17565b60206040518083038186803b15801561182a57600080fd5b505af415801561183e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061186291906124d2565b905090565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b60145481565b6003546001600160a01b031633146118c45760405162461bcd60e51b815260040161042490613212565b6004601080546118d6906001906138fd565b815481106118f457634e487b7160e01b600052603260045260246000fd5b600091825260209091206004600590920201015460ff16600681111561192a57634e487b7160e01b600052602160045260246000fd5b146119475760405162461bcd60e51b815260040161042490613325565b60145442116119685760405162461bcd60e51b81526004016104249061316d565b6010805473__$94d7d2f22770e4b0d1a2b99fb2812308e2$__916348cc49d591611994906001906138fd565b815481106119b257634e487b7160e01b600052603260045260246000fd5b9060005260206000209060050201836040518363ffffffff1660e01b81526004016119de9291906134bf565b60006040518083038186803b1580156119f657600080fd5b505af4158015610f74573d6000803e3d6000fd5b60135481565b7ff23a6e61000000000000000000000000000000000000000000000000000000009695505050505050565b6001600160e01b031981167f01ffc9a70000000000000000000000000000000000000000000000000000000014919050565b600454611a7b9060016138de565b611a8590426138c6565b601455565b60008381526017602052604090205460ff1615611ab95760405162461bcd60e51b81526004016104249061305a565b8115611add576000838152601760205260409020805460ff19166001179055611b38565b601054611aec906001906138fd565b60008481526018602052604090205414611b185760405162461bcd60e51b8152600401610424906132ee565b6000838152601860205260408120805491611b3283613d97565b91905055505b60008381526016602090815260409091208251611b5792840190611fee565b508360ff166004811115611b7b57634e487b7160e01b600052602160045260246000fd5b6000848152601960205260409020805460ff19166001836004811115611bb157634e487b7160e01b600052602160045260246000fd5b021790555050505050565b601154601080546040517f5069a07c000000000000000000000000000000000000000000000000000000008152919273__$94d7d2f22770e4b0d1a2b99fb2812308e2$__92635069a07c92611c28926008926101009091046001600160a01b031691309160040161346f565b60006040518083038186803b158015611c4057600080fd5b505af4158015611c54573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611c7c91908101906125b9565b815460018181018455600093845260209384902083516005909302019182558383015190820155604082015160028201556060820151805192939192611cc89260038501920190612072565b50608082015160048201805460ff19166001836006811115611cfa57634e487b7160e01b600052602160045260246000fd5b02179055505050565b60005b6006548110156116de576006805482908110611d3257634e487b7160e01b600052603260045260246000fd5b600091825260209091206001600590920201015460ff16611d5657611d5681611e6c565b80611d6081613d97565b915050611d06565b6012546001600160a01b031615801590611e035750601260009054906101000a90046001600160a01b03166001600160a01b031663999925066040518163ffffffff1660e01b815260040160206040518083038186803b158015611dcb57600080fd5b505afa158015611ddf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e0391906124d2565b156107d557601260009054906101000a90046001600160a01b03166001600160a01b0316633a275fa26040518163ffffffff1660e01b8152600401600060405180830381600087803b158015611e5857600080fd5b505af1158015610eb9573d6000803e3d6000fd5b6116de60016005018281548110611e9357634e487b7160e01b600052603260045260246000fd5b906000526020600020906005020160010160029054906101000a900460ff1660016005018381548110611ed657634e487b7160e01b600052603260045260246000fd5b90600052602060002090600502016002015460016005018481548110611f0c57634e487b7160e01b600052603260045260246000fd5b906000526020600020906005020160010160019054906101000a900460ff1673__$94d7d2f22770e4b0d1a2b99fb2812308e2$__63f060d0b660016005018781548110611f6957634e487b7160e01b600052603260045260246000fd5b9060005260206000209060050201306040518363ffffffff1660e01b8152600401611f9592919061367f565b60006040518083038186803b158015611fad57600080fd5b505af4158015611fc1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611fe99190810190612546565b611a8a565b828054611ffa90613d4f565b90600052602060002090601f01602090048101928261201c5760008555612062565b82601f1061203557805160ff1916838001178555612062565b82800160010185558215612062579182015b82811115612062578251825591602001919060010190612047565b5061206e9291506120ac565b5090565b8280548282559060005260206000209081019282156120625791602002820182811115612062578251825591602001919060010190612047565b5b8082111561206e57600081556001016120ad565b80356103ff816142e8565b60008083601f8401126120dd578182fd5b50813567ffffffffffffffff8111156120f4578182fd5b602083019150836020808302850101111561210e57600080fd5b9250929050565b600082601f830112612125578081fd5b8151602061213a612135836137c3565b613799565b8281528181019085830183850287018401881015612156578586fd5b855b8581101561217457815184529284019290840190600101612158565b5090979650505050505050565b80356103ff816142fd565b60008083601f84011261219d578182fd5b50813567ffffffffffffffff8111156121b4578182fd5b60208301915083602082850101111561210e57600080fd5b8051600781106103ff57600080fd5b600061010082840312156121ed578081fd5b50919050565b80356103ff8161430b565b60006020828403121561220f578081fd5b813561221a816142e8565b9392505050565b600060208284031215612232578081fd5b815161221a816142e8565b60008060008060008060008060a0898b031215612258578384fd5b8835612263816142e8565b97506020890135612273816142e8565b9650604089013567ffffffffffffffff8082111561228f578586fd5b61229b8c838d016120cc565b909850965060608b01359150808211156122b3578586fd5b6122bf8c838d016120cc565b909650945060808b01359150808211156122d7578384fd5b506122e48b828c0161218c565b999c989b5096995094979396929594505050565b60008060008060008060a08789031215612310578384fd5b863561231b816142e8565b9550602087013561232b816142e8565b94506040870135935060608701359250608087013567ffffffffffffffff811115612354578283fd5b61236089828a0161218c565b979a9699509497509295939492505050565b60008060408385031215612384578182fd5b825161238f816142e8565b60208401519092506123a0816142e8565b809150509250929050565b6000806000606084860312156123bf578081fd5b83356123ca816142e8565b925060208401359150604084013567ffffffffffffffff8111156123ec578182fd5b6123f8868287016121db565b9150509250925092565b60008060208385031215612414578182fd5b823567ffffffffffffffff81111561242a578283fd5b612436858286016120cc565b90969095509350505050565b60006020808385031215612454578182fd5b823567ffffffffffffffff81111561246a578283fd5b8301601f8101851361247a578283fd5b8035612488612135826137c3565b81815283810190838501858402850186018910156124a4578687fd5b8694505b838510156124c65780358352600194909401939185019185016124a8565b50979650505050505050565b6000602082840312156124e3578081fd5b815161221a816142fd565b6000602082840312156124ff578081fd5b5035919050565b600060208284031215612517578081fd5b5051919050565b60006020828403121561252f578081fd5b81356001600160e01b03198116811461221a578182fd5b600060208284031215612557578081fd5b815167ffffffffffffffff81111561256d578182fd5b8201601f8101841361257d578182fd5b805161258b612135826137e7565b81815285602083850101111561259f578384fd5b6125b0826020830160208601613d23565b95945050505050565b6000602082840312156125ca578081fd5b815167ffffffffffffffff808211156125e1578283fd5b9083019060a082860312156125f4578283fd5b60405160a08101818110838211171561260f5761260f613dde565b806040525082518152602083015160208201526040830151604082015260608301518281111561263d578485fd5b61264987828601612115565b60608301525061265b608084016121cc565b608082015295945050505050565b60006020828403121561267a578081fd5b813567ffffffffffffffff811115612690578182fd5b61269c848285016121db565b949350505050565b6000806000606084860312156126b8578081fd5b83356126c38161430b565b925060208401359150604084013567ffffffffffffffff8111156126e5578182fd5b8401601f810186136126f5578182fd5b8035612703612135826137e7565b818152876020838501011115612717578384fd5b8160208401602083013783602083830101528093505050509250925092565b6001600160a01b03169052565b818352602080840193600091908185020181018584845b87811015612790578284038952612771828861381b565b61277c8682846129ca565b9a87019a955050509084019060010161275a565b5091979650505050505050565b6000815180845260208085018081965082840281019150828601855b858110156127905782840389526127d1848351612a17565b988501989350908401906001016127b9565b6000815480845260208085018081965082840281019150858552828520855b858110156127905782840389526128198483612a51565b98850198935060019182019101612802565b818352602080840193600091908185020181018584845b87811015612790578284038952813560be19883603018112612862578687fd5b870160c08135612871816142fd565b1515865281870135612882816142fd565b15158688015260406128958382016120c1565b6128a182890182612736565b5050606082810135908701526080808301359087015260a06128c581840184613863565b935082828901526128d98389018583612a89565b9c89019c97505050928601925050600101612842565b818352602080840193600091908185020181018584845b87811015612790578284038952813560de19883603018112612926578687fd5b87018035855260e08682013561293b816142fd565b61294788880182612a83565b506040612955818401612181565b61296182890182612a83565b505060606129708184016121f3565b61297c82890182612d1c565b50506080828101359087015260a0808301359087015260c06129a081840184613863565b935082828901526129b48389018583612a89565b9c89019c97505050928601925050600101612906565b60008284527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8311156129fb578081fd5b6020830280836020870137939093016020019283525090919050565b6000815180845260208085019450808401835b83811015612a4657815187529582019590820190600101612a2a565b509495945050505050565b6000815480845260208085019450838352808320835b83811015612a4657815487529582019560019182019101612a67565b15159052565b60008284528282602086013780602084860101526020601f19601f85011685010190509392505050565b60008151808452612acb816020860160208601613d23565b601f01601f19169290920160200192915050565b60008154612aec81613d4f565b808552602060018381168015612b095760018114612b1d57612b4b565b60ff19851688840152604088019550612b4b565b866000528260002060005b85811015612b435781548a8201860152908301908401612b28565b890184019650505b505050505092915050565b60078110612b7457634e487b7160e01b600052602160045260246000fd5b9052565b6000610100612b8f84612b8a856120c1565b612736565b602083013560208501526040830135604085015260608301356060850152612bba608084018461381b565b826080870152612bcd83870182846129ca565b92505050612bde60a084018461381b565b85830360a0870152612bf1838284612743565b92505050612c0260c084018461381b565b85830360c0870152612c15838284612743565b92505050612c2660e0840184613863565b85830360e0870152612c39838284612a89565b9695505050505050565b6000610100612c5684612b8a8554613914565b600183015460208501526002830154604085015260038301546060850152806080850152612c8981850160048501612a51565b905083810360a0850152612ca081600585016127e3565b905083810360c0850152612cb781600685016127e3565b905083810360e085015261269c8160078501612adf565b600081548352600182015460208401526002820154604084015260a06060840152612cff60a0840160038401612a51565b60ff600484015416612d146080860182612b56565b509392505050565b60ff169052565b6001600160a01b0391909116815260200190565b60006001600160a01b038516825260606020830152612d596060830185612c43565b8281036040840152612c398185612cce565b918252602082015260400190565b60208082528251828201819052600091906040908185019080840286018301878501865b83811015612e0957603f19898403018552815160a081518552888201518986015287820151888601526060808301518282880152612ddd83880182612a17565b925050506080808301519250612df581870184612b56565b509588019593505090860190600101612d9d565b509098975050505050505050565b60006040808301818452808654808352606092508286019150602083818302880101898752818720875b84811015612ed057605f198a840301865260e082548452600183015460ff612e6d878701828416612a83565b612e7e8b8701828460081c16612a83565b612e8f8a8701828460101c16612d1c565b505060028301546080850152600383015460a08501528060c0850152612eba81850160048501612adf565b9685019693505060059190910190600101612e41565b5050960196909652509295945050505050565b901515815260200190565b90815260200190565b8481526020810184905260408101839052608081016125b06060830184612b56565b6001600160e01b031991909116815260200190565b60006020825261221a6020830184612ab3565b60006001600160a01b038089168352808816602084015280871660408401525084606083015260c06080830152612f7b60c0830185612ab3565b82810360a0840152610100612f91828651612736565b6020850151602083015260408501516040830152606085015160608301526080850151816080840152612fc682840182612a17565b91505060a085015182820360a0840152612fe0828261279d565b91505060c085015182820360c0840152612ffa828261279d565b91505060e085015182820360e08401526130148282612ab3565b9b9a5050505050505050505050565b60208082526014908201527f43757272656e7420736f6c766520616374697665000000000000000000000000604082015260600190565b6020808252600b908201527f506f7274206c6f636b6564000000000000000000000000000000000000000000604082015260600190565b6020808252600a908201527f4f6e6c794b656570657200000000000000000000000000000000000000000000604082015260600190565b60208082526010908201527f536f6c76657220686173206368696c6400000000000000000000000000000000604082015260600190565b6020808252600c908201527f4f6e6c7920666163746f72790000000000000000000000000000000000000000604082015260600190565b6020808252600b908201527f4f6e6c79204b6565706572000000000000000000000000000000000000000000604082015260600190565b60208082526015908201527f54696d656c6f636b207374696c6c206c6f636b65640000000000000000000000604082015260600190565b6020808252600f908201527f696e676573747320696e76616c69640000000000000000000000000000000000604082015260600190565b60208082526018908201527f4e6f74204172626974726174696f6e5265717565737465640000000000000000604082015260600190565b6020808252600f908201527f4f6e6c792061726269747261746f720000000000000000000000000000000000604082015260600190565b6020808252600e908201527f4b656570657220696e76616c6964000000000000000000000000000000000000604082015260600190565b60208082526014908201527f4f7574636f6d65206e6f742070726f706f736564000000000000000000000000604082015260600190565b60208082526013908201527f4e6f74204f7574636f6d6550726f706f73656400000000000000000000000000604082015260600190565b60208082526014908201527f506f72742076657273696f6e20696e76616c6964000000000000000000000000604082015260600190565b60208082526016908201527f4e6f74204172626974726174696f6e50656e64696e6700000000000000000000604082015260600190565b6020808252600b908201527f4f6e6c79206b6565706572000000000000000000000000000000000000000000604082015260600190565b60208082526012908201527f436f6e646974696f6e2045786563757465640000000000000000000000000000604082015260600190565b6020808252600e908201527f547261636b696e67496420736574000000000000000000000000000000000000604082015260600190565b6020808252600d908201527f506f727420696e76616c69642e00000000000000000000000000000000000000604082015260600190565b6020808252600d908201527f6e6f7420496e6974696174656400000000000000000000000000000000000000604082015260600190565b6000608082526134826080830187612c43565b6001600160a01b0395861660208401529390941660408201526060015292915050565b6000848252604060208301526125b06040830184866129ca565b60006040820184835260206040818501528185518084526060860191508287019350845b81811015612174578451835293830193918301916001016134e3565b600060a0825261351260a0830188612cce565b82810360208401526135248188612c43565b6001600160a01b039690961660408401525050606081019290925260809091015292915050565b60006040825261355e6040830185612cce565b90508260208301529392505050565b60006060825261358360608301612b8a876120c1565b61358f602086016120c1565b61359c6080840182612736565b506135a9604086016120c1565b6135b660a0840182612736565b50606085013560c08301526135ce6080860186613863565b6101008060e08601526135e661016086018385612a89565b92506135f560a089018961381b565b9250605f1980878603018388015261360e8585846128ef565b945061361d60c08b018b61381b565b94509250808786030161012088015261363785858561282b565b945061364660e08b018b6138a8565b935080878603016101408801525050506136608282612b78565b925050506136716020830185612736565b826040830152949350505050565b9182526001600160a01b0316602082015260400190565b9485526001600160a01b03938416602086015291831660408501529091166060830152608082015260a00190565b6000808335601e198436030181126136da578283fd5b83018035915067ffffffffffffffff8211156136f4578283fd5b602090810192508102360382131561210e57600080fd5b6000808335601e19843603018112613721578283fd5b83018035915067ffffffffffffffff82111561373b578283fd5b60200191503681900382131561210e57600080fd5b6000823560be19833603018112613765578182fd5b9190910192915050565b6000823560fe19833603018112613765578182fd5b6000823560de19833603018112613765578182fd5b60405181810167ffffffffffffffff811182821017156137bb576137bb613dde565b604052919050565b600067ffffffffffffffff8211156137dd576137dd613dde565b5060209081020190565b600067ffffffffffffffff82111561380157613801613dde565b50601f01601f191660200190565b60009081526020902090565b6000808335601e19843603018112613831578283fd5b830160208101925035905067ffffffffffffffff81111561385157600080fd5b60208102360383131561210e57600080fd5b6000808335601e19843603018112613879578283fd5b830160208101925035905067ffffffffffffffff81111561389957600080fd5b80360383131561210e57600080fd5b6000823560fe198336030181126138bd578182fd5b90910192915050565b600082198211156138d9576138d9613dc8565b500190565b60008160001904831182151516156138f8576138f8613dc8565b500290565b60008282101561390f5761390f613dc8565b500390565b6001600160a01b031690565b5b8181101561058f5760008155600101613921565b6801000000000000000083111561394e5761394e613dde565b80548382558084101561398c576000828152602081208581019083015b808210156139885761397d8383613e07565b60018201915061396b565b5050505b50816139978261380f565b6000805b868110156139ce576139ad84876136c4565b6139b981838688614156565b5050602093909301926001928301920161399b565b50505050505050565b680100000000000000008311156139f0576139f0613dde565b805483825580841015613a9f577f3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6001818311811615613a3257613a32613dc8565b6004828711821615613a4657613a46613dc8565b600085815260208120909350878202810190828602015b80821015613a9957848255613a7585868685016142c9565b613a838586600285016142c9565b613a908560038401613e44565b90820190613a5d565b50505050505b5081613aaa8261380f565b6000805b868110156139ce57613aca613ac38588613750565b838561416f565b6020939093019260049290920191600101613aae565b68010000000000000000831115613af957613af9613dde565b805483825580841015613bb6577f33333333333333333333333333333333333333333333333333333333333333336001818311811615613b3b57613b3b613dc8565b6005828711821615613b4f57613b4f613dc8565b600085815260208120909350878202810190828602015b80821015613bb057613b798586846142c9565b8484830155613b8c8586600285016142c9565b613b9a8586600385016142c9565b613ba78560048401613e44565b90820190613b66565b50505050505b5081613bc18261380f565b6000805b868110156139ce57613be1613bda8588613784565b838561422e565b6020939093019260059290920191600101613bc5565b613c018382613e07565b818160005260208060002060005b868110156139ce57833582559282019260019182019101613c0f565b67ffffffffffffffff831115613c4357613c43613dde565b613c4d8154613d4f565b600080601f8611601f841181811715613c6c57613c698661380f565b92505b8015613c9b576020601f89010483016020891015613c875750825b613c996020601f880104850182613920565b505b508060018114613cc757600094508715613cb6578387013594505b613cc08886613d84565b8655613d19565b601f198816945082845b86811015613cf15788860135825560209586019560019092019101613cd1565b5088861015613d0e57878501356000196008601f8c16021c191681555b506001600289020186555b5050505050505050565b60005b83811015613d3e578181015183820152602001613d26565b83811115610eb95750506000910152565b600281046001821680613d6357607f821691505b602082108114156121ed57634e487b7160e01b600052602260045260246000fd5b600019600883021c191660029091021790565b6000600019821415613dab57613dab613dc8565b5060010190565b634e487b7160e01b600052600060045260246000fd5b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b60008135613e01816142e8565b92915050565b68010000000000000000821115613e2057613e20613dde565b80548282558083101561084b57816000526020600020610eb9828201858301613920565b8115613e5257613e52613db2565b613e5c8154613d4f565b801561084b57601f811160018114613e775760008355610eb9565b600083815260208120613e956020601f860104820160018301613920565b50838152602081208185555550505050565b6001600160a01b03821673ffffffffffffffffffffffffffffffffffffffff198254161781555050565b60ff1981541660ff8315151681178255505050565b8135613ef1816142e8565b613efb8183613ea7565b506001602080840135828401556040840135600284015560608401356003840155613f2960808501856136c4565b613f37818360048801613bf7565b5050613f4660a08501856136c4565b613f54818360058801613935565b5050613f6360c08501856136c4565b613f71818360068801613935565b505060078301613f8460e086018661370b565b67ffffffffffffffff811115613f9c57613f9c613dde565b613fa68354613d4f565b600080601f8411601f841181811715613fc557613fc28861380f565b92505b8015613ff15788601f870104830189871015613fde5750825b613fef8a601f880104850182613920565b505b50806001811461401d5760009450851561400c578387013594505b6140168686613d84565b885561406b565b601f198616945082845b8681101561404457888601358255948a0194908b01908a01614027565b508686101561406157878501356000196008601f8a16021c191681555b5089600287020188555b505050505050505050505050565b8135614084816142e8565b61408e8183613ea7565b50602082013561409d816142e8565b6140aa8160018401613ea7565b506140c36140ba60408401613df4565b60028301613ea7565b606082013560038201556140da608083018361370b565b6140e8818360048601613c2b565b50506140f760a08301836136c4565b614105818360058601613ae0565b505061411460c08301836136c4565b6141228183600686016139d7565b505061058f61413460e084018461376f565b60078301613ee6565b805461ff00191691151560081b61ff0016919091179055565b811561416457614164613db2565b610eb9848483613bf7565b811561417d5761417d613db2565b8235614188816142fd565b6141928183613ed1565b5060208301356141a1816142fd565b6141ab818361413d565b5060408301356141ba816142e8565b81547fffffffffffffffffffff0000000000000000000000000000000000000000ffff1660109190911b75ffffffffffffffffffffffffffffffffffffffff000016178155606083013560018201556080830135600282015561422060a084018461370b565b610f74818360038601613c2b565b811561423c5761423c613db2565b82358155600181016020840135614252816142fd565b61425c8183613ed1565b50604084013561426b816142fd565b614275818361413d565b5060608401356142848161430b565b815462ff0000191660109190911b62ff0000161790556080830135600282015560a083013560038201556142bb60c084018461370b565b610f74818360048601613c2b565b805460088302600019811b8086831b1681198416178455505050505050565b6001600160a01b03811681146116de57600080fd5b80151581146116de57600080fd5b60ff811681146116de57600080fdfea2646970667358221220dea824a35dede5af77ea4e5598ff54651ee18f3645f695d70a1d34b9e2cfada764736f6c63430008000033";

export class Solver__factory extends ContractFactory {
  constructor(linkLibraryAddresses: SolverLibraryAddresses, signer?: Signer) {
    super(_abi, Solver__factory.linkBytecode(linkLibraryAddresses), signer);
  }

  static linkBytecode(linkLibraryAddresses: SolverLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$94d7d2f22770e4b0d1a2b99fb2812308e2\\$__", "g"),
      linkLibraryAddresses["__$94d7d2f22770e4b0d1a2b99fb2812308e2$__"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Solver> {
    return super.deploy(overrides || {}) as Promise<Solver>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Solver {
    return super.attach(address) as Solver;
  }
  connect(signer: Signer): Solver__factory {
    return super.connect(signer) as Solver__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SolverInterface {
    return new utils.Interface(_abi) as SolverInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Solver {
    return new Contract(address, _abi, signerOrProvider) as Solver;
  }
}

export interface SolverLibraryAddresses {
  ["__$94d7d2f22770e4b0d1a2b99fb2812308e2$__"]: string;
}
