/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BasicSolverV1, BasicSolverV1Interface } from "../BasicSolverV1";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "chainChild",
        type: "address",
      },
    ],
    name: "DeployedChild",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "solver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "solveIndex",
        type: "uint256",
      },
    ],
    name: "PreparedSolve",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_slot",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "addData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "addressFromChainIndex",
    outputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "payouts",
        type: "uint256[]",
      },
    ],
    name: "arbitrate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "arbitrateNull",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "arbitrationPending",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "arbitrationRequested",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "chainChild",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "chainIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "chainParent",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "conditions",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "collateralToken",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "questionId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "parentCollectionId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "conditionId",
        type: "bytes32",
      },
      {
        internalType: "enum SolverLib.Status",
        name: "status",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "config",
    outputs: [
      {
        internalType: "contract Solver",
        name: "implementation",
        type: "address",
      },
      {
        internalType: "address",
        name: "keeper",
        type: "address",
      },
      {
        internalType: "address",
        name: "arbitrator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "timelockSeconds",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "contract IERC20",
            name: "collateralToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "outcomeSlots",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "parentCollectionIndexSet",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountSlot",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "partition",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "recipientAddressSlots",
            type: "uint256[]",
          },
          {
            internalType: "uint256[][]",
            name: "recipientAmountSlots",
            type: "uint256[][]",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "digest",
                type: "bytes32",
              },
              {
                internalType: "uint8",
                name: "hashFunction",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "size",
                type: "uint8",
              },
            ],
            internalType: "struct SolverLib.Multihash[]",
            name: "outcomeURIs",
            type: "tuple[]",
          },
        ],
        internalType: "struct SolverLib.ConditionBase",
        name: "conditionBase",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "confirmPayouts",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract Solver",
            name: "implementation",
            type: "address",
          },
          {
            internalType: "address",
            name: "keeper",
            type: "address",
          },
          {
            internalType: "address",
            name: "arbitrator",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "timelockSeconds",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "executions",
                type: "uint256",
              },
              {
                internalType: "enum SolverLib.IngestType",
                name: "ingestType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "slot",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "solverIndex",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct SolverLib.Ingest[]",
            name: "ingests",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "contract IERC20",
                name: "collateralToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "outcomeSlots",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "parentCollectionIndexSet",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountSlot",
                type: "uint256",
              },
              {
                internalType: "uint256[]",
                name: "partition",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "recipientAddressSlots",
                type: "uint256[]",
              },
              {
                internalType: "uint256[][]",
                name: "recipientAmountSlots",
                type: "uint256[][]",
              },
              {
                components: [
                  {
                    internalType: "bytes32",
                    name: "digest",
                    type: "bytes32",
                  },
                  {
                    internalType: "uint8",
                    name: "hashFunction",
                    type: "uint8",
                  },
                  {
                    internalType: "uint8",
                    name: "size",
                    type: "uint8",
                  },
                ],
                internalType: "struct SolverLib.Multihash[]",
                name: "outcomeURIs",
                type: "tuple[]",
              },
            ],
            internalType: "struct SolverLib.ConditionBase",
            name: "conditionBase",
            type: "tuple",
          },
        ],
        internalType: "struct SolverLib.Config",
        name: "_config",
        type: "tuple",
      },
    ],
    name: "deployChild",
    outputs: [
      {
        internalType: "contract Solver",
        name: "_solver",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "executeSolve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_slot",
        type: "uint256",
      },
    ],
    name: "getCallbackOutput",
    outputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getConditions",
    outputs: [
      {
        components: [
          {
            internalType: "contract IERC20",
            name: "collateralToken",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "questionId",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "parentCollectionId",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "conditionId",
            type: "bytes32",
          },
          {
            internalType: "uint256[]",
            name: "payouts",
            type: "uint256[]",
          },
          {
            internalType: "enum SolverLib.Status",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct SolverLib.Condition[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_slot",
        type: "uint256",
      },
    ],
    name: "getData",
    outputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "slot",
        type: "uint256",
      },
    ],
    name: "getOutgoingCallbacks",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_slot",
        type: "uint256",
      },
    ],
    name: "handleCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "ingestsValid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_chainParent",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_chainIndex",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "contract Solver",
            name: "implementation",
            type: "address",
          },
          {
            internalType: "address",
            name: "keeper",
            type: "address",
          },
          {
            internalType: "address",
            name: "arbitrator",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "timelockSeconds",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "executions",
                type: "uint256",
              },
              {
                internalType: "enum SolverLib.IngestType",
                name: "ingestType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "slot",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "solverIndex",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct SolverLib.Ingest[]",
            name: "ingests",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "contract IERC20",
                name: "collateralToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "outcomeSlots",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "parentCollectionIndexSet",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountSlot",
                type: "uint256",
              },
              {
                internalType: "uint256[]",
                name: "partition",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "recipientAddressSlots",
                type: "uint256[]",
              },
              {
                internalType: "uint256[][]",
                name: "recipientAmountSlots",
                type: "uint256[][]",
              },
              {
                components: [
                  {
                    internalType: "bytes32",
                    name: "digest",
                    type: "bytes32",
                  },
                  {
                    internalType: "uint8",
                    name: "hashFunction",
                    type: "uint8",
                  },
                  {
                    internalType: "uint8",
                    name: "size",
                    type: "uint8",
                  },
                ],
                internalType: "struct SolverLib.Multihash[]",
                name: "outcomeURIs",
                type: "tuple[]",
              },
            ],
            internalType: "struct SolverLib.ConditionBase",
            name: "conditionBase",
            type: "tuple",
          },
        ],
        internalType: "struct SolverLib.Config",
        name: "_solverConfig",
        type: "tuple",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "scale",
        type: "uint128",
      },
    ],
    name: "percentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "prepareSolve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_payouts",
        type: "uint256[]",
      },
    ],
    name: "proposePayouts",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_collateralToken",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_parentCollectionId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_conditionId",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "_indexSets",
        type: "uint256[]",
      },
    ],
    name: "redeemPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_slot",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_chainIndex",
        type: "uint256",
      },
    ],
    name: "registerOutgoingCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_trackingId",
        type: "bytes32",
      },
    ],
    name: "setTrackingId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "timelock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "trackingId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uiURI",
    outputs: [
      {
        internalType: "bytes32",
        name: "digest",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "hashFunction",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "size",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50614fa8806100206000396000f3fe608060405234801561001057600080fd5b506004361061020b5760003560e01c80634e46f2231161012a57806399992506116100bd578063bc197c811161008c578063d8b6231611610071578063d8b623161461048a578063ea8221a91461049d578063f23a6e61146104a55761020b565b8063bc197c8114610462578063d33219b4146104825761020b565b80639999250614610421578063a072d7b014610429578063a5682cb01461043c578063b992db0f1461044f5761020b565b806380b204b7116100f957806380b204b7146103e057806380c2dde2146103f357806387c0b374146103fb57806387dfee571461040e5761020b565b80634e46f2231461039657806355dd978b146103a957806379502c55146103b15780637c123627146103cb5761020b565b806336fcf48c116101a2578063499f5af311610171578063499f5af31461034a5780634a77234e1461035d5780634dab5e69146103705780634dd82880146103835761020b565b806336fcf48c146102eb5780633837b05e146103025780633ee8b6741461032257806348cbb2fc146103425761020b565b80630d8d3975116101de5780630d8d397514610281578063187825591461029457806326c50007146102a7578063341f6e3e146102cb5761020b565b80630178fe3f1461021057806301ffc9a71461023957806307c068b6146102595780630d06101a1461026e575b600080fd5b61022361021e366004612e79565b6104b8565b6040516102309190613abe565b60405180910390f35b61024c610247366004612e91565b61055a565b6040516102309190613a7c565b61026c610267366004612e79565b6105a0565b005b61026c61027c366004612e79565b6106e8565b61026c61028f366004612e79565b61070d565b61026c6102a2366004612f2c565b61083b565b6102ba6102b5366004612e79565b6108f6565b604051610230959493929190613b0b565b6102de6102d9366004613224565b610944565b6040516102309190613a87565b6102f3610a71565b60405161023093929190613a90565b610315610310366004612e79565b610a86565b60405161023091906137ff565b610335610330366004612e79565b610bb4565b6040516102309190613872565b6102de610c1f565b61026c610358366004612e02565b610c25565b61026c61036b366004612e79565b610d38565b61026c61037e366004612e79565b61100d565b610223610391366004612e79565b6110e7565b61026c6103a4366004612e79565b611132565b61031561120c565b6103b961121b565b60405161023096959493929190613b3e565b6103d36114d7565b60405161023091906138bf565b61026c6103ee36600461309e565b611606565b61031561174b565b61026c610409366004613203565b61175a565b61026c61041c3660046130e8565b611865565b61024c6119c0565b61026c610437366004612e79565b611a6d565b61031561044a366004613053565b611dbf565b61026c61045d366004612e79565b611f19565b610475610470366004612c94565b612234565b6040516102309190613aa9565b6102de612261565b61026c610498366004613184565b612267565b6102de6122bd565b6104756104b3366004612d4f565b6122c3565b6000818152601b602052604090208054606091906104d5906149e2565b80601f0160208091040260200160405190810160405280929190818152602001828054610501906149e2565b801561054e5780601f106105235761010080835404028352916020019161054e565b820191906000526020600020905b81548152906001019060200180831161053157829003601f168201915b50505050509050919050565b60006001600160e01b031982167f4e2312e00000000000000000000000000000000000000000000000000000000014806105985750610598826122ef565b90505b919050565b6005546001600160a01b031633146105d35760405162461bcd60e51b81526004016105ca90613f11565b60405180910390fd5b6003601182815481106105f657634e487b7160e01b600052603260045260246000fd5b600091825260209091206006918202016005015460ff169081111561062b57634e487b7160e01b600052602160045260246000fd5b146106485760405162461bcd60e51b81526004016105ca90613e46565b73__$94d7d2f22770e4b0d1a2b99fb2812308e2$__63ec7ac2f06011838154811061068357634e487b7160e01b600052603260045260246000fd5b90600052602060002090600602016040518263ffffffff1660e01b81526004016106ad9190613a87565b60006040518083038186803b1580156106c557600080fd5b505af41580156106d9573d6000803e3d6000fd5b505050506106e5612321565b50565b601654156107085760405162461bcd60e51b81526004016105ca906140fc565b601655565b601554421161072e5760405162461bcd60e51b81526004016105ca90613dd8565b60026011828154811061075157634e487b7160e01b600052603260045260246000fd5b600091825260209091206006918202016005015460ff169081111561078657634e487b7160e01b600052602160045260246000fd5b146107a35760405162461bcd60e51b81526004016105ca90613f7f565b73__$94d7d2f22770e4b0d1a2b99fb2812308e2$__63696d4661601183815481106107de57634e487b7160e01b600052603260045260246000fd5b90600052602060002090600602016040518263ffffffff1660e01b81526004016108089190613a87565b60006040518083038186803b15801561082057600080fd5b505af4158015610834573d6000803e3d6000fd5b5050505050565b6004546001600160a01b031633146108655760405162461bcd60e51b81526004016105ca90613da1565b6040517f01b7037c000000000000000000000000000000000000000000000000000000008152735fbdb2315678afecb367f032d93f642f64180aa3906301b7037c906108bd9088908890889088908890600401613ad1565b600060405180830381600087803b1580156108d757600080fd5b505af11580156108eb573d6000803e3d6000fd5b505050505050505050565b6011818154811061090657600080fd5b6000918252602090912060069091020180546001820154600283015460038401546005909401546001600160a01b0390931694509092909160ff1685565b60405163ddc2f15560e01b815260009073__$94d7d2f22770e4b0d1a2b99fb2812308e2$__9063ddc2f15590610983908790606490879060040161439b565b60206040518083038186803b15801561099b57600080fd5b505af41580156109af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d39190613086565b60405163ddc2f15560e01b815273__$94d7d2f22770e4b0d1a2b99fb2812308e2$__9063ddc2f15590610a0f908790606490889060040161439b565b60206040518083038186803b158015610a2757600080fd5b505af4158015610a3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5f9190613086565b610a69919061470a565b949350505050565b60015460025460ff8082169161010090041683565b6000601454821415610a9957503061059b565b601454821015610b2a57601254604051631c1bd82f60e11b81526001600160a01b0390911690633837b05e90610ad3908590600401613a87565b60206040518083038186803b158015610aeb57600080fd5b505afa158015610aff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b239190612c78565b905061059b565b60145482111561059b57601354604051631c1bd82f60e11b81526001600160a01b0390911690633837b05e90610b64908590600401613a87565b60206040518083038186803b158015610b7c57600080fd5b505afa158015610b90573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105989190612c78565b60008181526019602090815260409182902080548351818402810184019094528084526060939283018282801561054e57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610bf65750505050509050919050565b60165481565b600054610100900460ff1680610c3e575060005460ff16155b610c5a5760405162461bcd60e51b81526004016105ca90613e7d565b600054610100900460ff16158015610c85576000805460ff1961ff0019909116610100171660011790555b3373e7f1725e7734ce288f8367e1bb143e90bb3f051214610cb85760405162461bcd60e51b81526004016105ca90613d6a565b6000610cca6040840160208501612c55565b6001600160a01b03161415610cf15760405162461bcd60e51b81526004016105ca90613f48565b601280546001600160a01b0319166001600160a01b0386161790556014839055816003610d1e8282614c7a565b50508015610d32576000805461ff00191690555b50505050565b60115415610d7f576004546001600160a01b0316331480610d6357506012546001600160a01b031633145b610d7f5760405162461bcd60e51b81526004016105ca906140c5565b6011548114610da05760405162461bcd60e51b81526004016105ca90613d33565b60185415610dc05760405162461bcd60e51b81526004016105ca90613fed565b60175415610de05760405162461bcd60e51b81526004016105ca90614022565b601254601180546040517f62dae736000000000000000000000000000000000000000000000000000000008152919273__$94d7d2f22770e4b0d1a2b99fb2812308e2$__926362dae73692610e47926009926001600160a01b0390911691906004016141d8565b60006040518083038186803b158015610e5f57600080fd5b505af4158015610e73573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e9b9190810190612f94565b8154600180820184556000938452602093849020835160069093020180546001600160a01b0319166001600160a01b03909316929092178255828401519082015560408201516002820155606082015160038201556080820151805192939192610f0b9260048501920190612a51565b5060a082015160058201805460ff19166001836006811115610f3d57634e487b7160e01b600052602160045260246000fd5b02179055505050610f4c61233e565b7f152ec8ae15d347b2d2a8f0858caa29bcaaa0906749a1f43e08bfe799834602403082604051610f7d929190613859565b60405180910390a16013546001600160a01b0316156106e5576013546040517f4a77234e0000000000000000000000000000000000000000000000000000000081526001600160a01b0390911690634a77234e90610fdf908490600401613a87565b600060405180830381600087803b158015610ff957600080fd5b505af1158015610834573d6000803e3d6000fd5b6005546001600160a01b031633146110375760405162461bcd60e51b81526004016105ca90613f11565b60026011828154811061105a57634e487b7160e01b600052603260045260246000fd5b600091825260209091206006918202016005015460ff169081111561108f57634e487b7160e01b600052602160045260246000fd5b146110ac5760405162461bcd60e51b81526004016105ca90613fb6565b73__$94d7d2f22770e4b0d1a2b99fb2812308e2$__6324b286026011838154811061068357634e487b7160e01b600052603260045260246000fd5b6011546000828152601c6020526040902054606091146111195760405162461bcd60e51b81526004016105ca90613eda565b6000828152601b6020526040902080546104d5906149e2565b6005546001600160a01b0316331461115c5760405162461bcd60e51b81526004016105ca90613f11565b60046011828154811061117f57634e487b7160e01b600052603260045260246000fd5b600091825260209091206006918202016005015460ff16908111156111b457634e487b7160e01b600052602160045260246000fd5b146111d15760405162461bcd60e51b81526004016105ca90614057565b73__$94d7d2f22770e4b0d1a2b99fb2812308e2$__6359111fb56011838154811061068357634e487b7160e01b600052603260045260246000fd5b6013546001600160a01b031681565b60038054600454600554600654600780546001600160a01b03958616969486169590931693919261124b906149e2565b80601f0160208091040260200160405190810160405280929190818152602001828054611277906149e2565b80156112c45780601f10611299576101008083540402835291602001916112c4565b820191906000526020600020905b8154815290600101906020018083116112a757829003601f168201915b505060408051610100810182526006870180546001600160a01b03168252600788015460208084019190915260088901548385015260098901546060840152600a8901805485518184028101840190965280865298999893975091955060808701945090919083018282801561135957602002820191906000526020600020905b815481526020019060010190808311611345575b50505050508152602001600582018054806020026020016040519081016040528092919081815260200182805480156113b157602002820191906000526020600020905b81548152602001906001019080831161139d575b5050505050815260200160068201805480602002602001604051908101604052809291908181526020016000905b8282101561144b5760008481526020908190208301805460408051828502810185019091528181529283018282801561143757602002820191906000526020600020905b815481526020019060010190808311611423575b5050505050815260200190600101906113df565b50505050815260200160078201805480602002602001604051908101604052809291908181526020016000905b828210156114ca57600084815260209081902060408051606081018252600286029092018054835260019081015460ff8082168587015261010090910416918301919091529083529092019101611478565b5050505081525050905086565b60606011805480602002602001604051908101604052809291908181526020016000905b828210156115fd5760008481526020908190206040805160c0810182526006860290920180546001600160a01b03168352600181015483850152600281015483830152600381015460608401526004810180548351818702810187019094528084529394919360808601939283018282801561159657602002820191906000526020600020905b815481526020019060010190808311611582575b5050509183525050600582015460209091019060ff1660068111156115cb57634e487b7160e01b600052602160045260246000fd5b60068111156115ea57634e487b7160e01b600052602160045260246000fd5b81525050815260200190600101906114fb565b50505050905090565b6004546001600160a01b031633146116305760405162461bcd60e51b81526004016105ca90613da1565b60016011848154811061165357634e487b7160e01b600052603260045260246000fd5b600091825260209091206006918202016005015460ff169081111561168857634e487b7160e01b600052602160045260246000fd5b146116a55760405162461bcd60e51b81526004016105ca90613cc5565b73__$94d7d2f22770e4b0d1a2b99fb2812308e2$__636a0a24f1601185815481106116e057634e487b7160e01b600052603260045260246000fd5b906000526020600020906006020184846040518463ffffffff1660e01b815260040161170e93929190614206565b60006040518083038186803b15801561172657600080fd5b505af415801561173a573d6000803e3d6000fd5b50505050611746612321565b505050565b6012546001600160a01b031681565b61176381610a86565b6001600160a01b0316336001600160a01b0316146117935760405162461bcd60e51b81526004016105ca90613cfc565b6000828152601c6020526040902054158015906117bf57506011546000838152601c6020526040902054145b1561181e57604051630a072d7b60e41b8152339063a072d7b0906117e7908590600401613a87565b600060405180830381600087803b15801561180157600080fd5b505af1158015611815573d6000803e3d6000fd5b50505050611861565b6000828152601960209081526040822080546001810182559083529082200180546001600160a01b03191633179055601880549161185b83614a2a565b91905055505b5050565b6005546001600160a01b0316331461188f5760405162461bcd60e51b81526004016105ca90613f11565b6004601183815481106118b257634e487b7160e01b600052603260045260246000fd5b600091825260209091206006918202016005015460ff16908111156118e757634e487b7160e01b600052602160045260246000fd5b146119045760405162461bcd60e51b81526004016105ca90614057565b60155442116119255760405162461bcd60e51b81526004016105ca90613dd8565b73__$94d7d2f22770e4b0d1a2b99fb2812308e2$__6311ca1ac06011848154811061196057634e487b7160e01b600052603260045260246000fd5b9060005260206000209060060201836040518363ffffffff1660e01b815260040161198c929190614220565b60006040518083038186803b1580156119a457600080fd5b505af41580156119b8573d6000803e3d6000fd5b505050505050565b6011546040517f5cc1f6b500000000000000000000000000000000000000000000000000000000815260009173__$94d7d2f22770e4b0d1a2b99fb2812308e2$__91635cc1f6b591611a189160089190600401613971565b60206040518083038186803b158015611a3057600080fd5b505af4158015611a44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a689190612e59565b905090565b60003382604051602001611a829291906137dd565b60408051601f1981840301815291815281516020928301206000818152601a90935291205460088054929350611ae8929091908110611ad157634e487b7160e01b600052603260045260246000fd5b906000526020600020906005020160030154610a86565b6001600160a01b0316336001600160a01b031614611b185760405162461bcd60e51b81526004016105ca90613cfc565b6000818152601a6020526040812054600880549091908110611b4a57634e487b7160e01b600052603260045260246000fd5b600091825260209091206001600590920201015460ff166002811115611b8057634e487b7160e01b600052602160045260246000fd5b14611b9d5760405162461bcd60e51b81526004016105ca90613c57565b6000818152601a6020526040902054600880549091908110611bcf57634e487b7160e01b600052603260045260246000fd5b600091825260208220600590910201805491611bea83614a2a565b90915550506000818152601a602052604090205460088054611da092908110611c2357634e487b7160e01b600052603260045260246000fd5b906000526020600020906005020160020154336001600160a01b0316634dd828806003600501601760030160008781526020019081526020016000205481548110611c7e57634e487b7160e01b600052603260045260246000fd5b90600052602060002090600502016004018054611c9a906149e2565b80601f0160208091040260200160405190810160405280929190818152602001828054611cc6906149e2565b8015611d135780601f10611ce857610100808354040283529160200191611d13565b820191906000526020600020905b815481529060010190602001808311611cf657829003601f168201915b5050505050806020019051810190611d2b9190613086565b6040518263ffffffff1660e01b8152600401611d479190613a87565b60006040518083038186803b158015611d5f57600080fd5b505afa158015611d73573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611d9b9190810190612eb9565b6125ee565b6000818152601a60205260408120819055601780549161185b836149cb565b6004546000906001600160a01b03163314611dec5760405162461bcd60e51b81526004016105ca9061408e565b6013546001600160a01b031615611e155760405162461bcd60e51b81526004016105ca90613c8e565b6014546040517f4dd0aa4900000000000000000000000000000000000000000000000000000000815273__$94d7d2f22770e4b0d1a2b99fb2812308e2$__91634dd0aa4991611e6b9186913091906004016142ac565b604080518083038186803b158015611e8257600080fd5b505af4158015611e96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611eba9190612dc9565b601380546001600160a01b0319166001600160a01b0393841617908190556040519193507fbd2e7fbdc9b1c19997e58c63e6ea1b5a02acd8dd9fd5d76f4bb18634f7155e8092611f0c929116906137ff565b60405180910390a1919050565b600060118281548110611f3c57634e487b7160e01b600052603260045260246000fd5b600091825260209091206006918202016005015460ff1690811115611f7157634e487b7160e01b600052602160045260246000fd5b14611f8e5760405162461bcd60e51b81526004016105ca906141a1565b611f966119c0565b1515600114611fb75760405162461bcd60e51b81526004016105ca90613e0f565b600160118281548110611fda57634e487b7160e01b600052603260045260246000fd5b906000526020600020906006020160050160006101000a81548160ff0219169083600681111561201a57634e487b7160e01b600052602160045260246000fd5b02179055506012546011805473__$94d7d2f22770e4b0d1a2b99fb2812308e2$__92631e85323f926001600160a01b0390911691600991908690811061207057634e487b7160e01b600052603260045260246000fd5b60009182526020808320600c548452601b909152604090922080546006909202909201919061209e906149e2565b80601f01602080910402602001604051908101604052809291908181526020018280546120ca906149e2565b80156121175780601f106120ec57610100808354040283529160200191612117565b820191906000526020600020905b8154815290600101906020018083116120fa57829003601f168201915b505050505080602001905181019061212f9190613086565b6040518563ffffffff1660e01b815260040161214e9493929190613813565b60006040518083038186803b15801561216657600080fd5b505af415801561217a573d6000803e3d6000fd5b5050505073__$94d7d2f22770e4b0d1a2b99fb2812308e2$__6336696828601183815481106121b957634e487b7160e01b600052603260045260246000fd5b9060005260206000209060060201600360060130601b6016546040518663ffffffff1660e01b81526004016121f2959493929190614260565b60006040518083038186803b15801561220a57600080fd5b505af415801561221e573d6000803e3d6000fd5b5050505061222b816106e5565b6106e581612671565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b60155481565b6004546001600160a01b031633146122915760405162461bcd60e51b81526004016105ca90613c20565b6008548210156122b35760405162461bcd60e51b81526004016105ca90614133565b61186182826125ee565b60145481565b7ff23a6e61000000000000000000000000000000000000000000000000000000005b9695505050505050565b6001600160e01b031981167f01ffc9a70000000000000000000000000000000000000000000000000000000014919050565b60065461232f90600161472a565b61233990426146f2565b601555565b60005b6008548110156106e5576000600880548390811061236f57634e487b7160e01b600052603260045260246000fd5b600091825260209091206001600590920201015460ff1660028111156123a557634e487b7160e01b600052602160045260246000fd5b146123e9576123e4600360050182815481106123d157634e487b7160e01b600052603260045260246000fd5b906000526020600020906005020161275a565b6125dc565b6000306001600160a01b0316633837b05e6003600501848154811061241e57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060050201600301546040518263ffffffff1660e01b815260040161244c9190613a87565b60206040518083038186803b15801561246457600080fd5b505afa158015612478573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061249c9190612c78565b90506124a881836127c5565b806001600160a01b03166387c0b374600360050184815481106124db57634e487b7160e01b600052603260045260246000fd5b906000526020600020906005020160040180546124f7906149e2565b80601f0160208091040260200160405190810160405280929190818152602001828054612523906149e2565b80156125705780601f1061254557610100808354040283529160200191612570565b820191906000526020600020905b81548152906001019060200180831161255357829003601f168201915b50505050508060200190518101906125889190613086565b6014546040518363ffffffff1660e01b81526004016125a89291906143c3565b600060405180830381600087803b1580156125c257600080fd5b505af11580156125d6573d6000803e3d6000fd5b50505050505b806125e681614a2a565b915050612341565b6011546125fd90600190614749565b6000838152601c6020526040902054146126295760405162461bcd60e51b81526004016105ca9061416a565b6000828152601c6020526040812080549161264383614a2a565b90915550506000828152601b60209081526040909120825161266792840190612a9c565b50611861826128e9565b6013546001600160a01b03161580159061270c5750601360009054906101000a90046001600160a01b03166001600160a01b031663999925066040518163ffffffff1660e01b815260040160206040518083038186803b1580156126d457600080fd5b505afa1580156126e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061270c9190612e59565b156106e5576013546040517fb992db0f0000000000000000000000000000000000000000000000000000000081526001600160a01b039091169063b992db0f90610fdf908490600401613a87565b6106e5816002015473__$94d7d2f22770e4b0d1a2b99fb2812308e2$__63b3d73707846040518263ffffffff1660e01b81526004016127999190613a87565b60006040518083038186803b1580156127b157600080fd5b505af4158015611d73573d6000803e3d6000fd5b806017600301600084600360050185815481106127f257634e487b7160e01b600052603260045260246000fd5b9060005260206000209060050201600401805461280e906149e2565b80601f016020809104026020016040519081016040528092919081815260200182805461283a906149e2565b80156128875780601f1061285c57610100808354040283529160200191612887565b820191906000526020600020905b81548152906001019060200180831161286a57829003601f168201915b505050505080602001905181019061289f9190613086565b6040516020016128b09291906137dd565b60408051601f19818403018152918152815160209283012083529082019290925201600090812091909155601780549161185b83614a2a565b60005b60008281526019602052604090205481101561186157600082815260196020526040812080548390811061293057634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b031614612a3f57600082815260196020526040902080548290811061297857634e487b7160e01b600052603260045260246000fd5b600091825260209091200154604051630a072d7b60e41b81526001600160a01b039091169063a072d7b0906129b1908590600401613a87565b600060405180830381600087803b1580156129cb57600080fd5b505af11580156129df573d6000803e3d6000fd5b5050506000838152601960205260409020805490915082908110612a1357634e487b7160e01b600052603260045260246000fd5b6000918252602082200180546001600160a01b03191690556018805491612a39836149cb565b91905055505b80612a4981614a2a565b9150506128ec565b828054828255906000526020600020908101928215612a8c579160200282015b82811115612a8c578251825591602001919060010190612a71565b50612a98929150612b0f565b5090565b828054612aa8906149e2565b90600052602060002090601f016020900481019282612aca5760008555612a8c565b82601f10612ae357805160ff1916838001178555612a8c565b82800160010185558215612a8c5791820182811115612a8c578251825591602001919060010190612a71565b5b80821115612a985760008155600101612b10565b803561059b81614f41565b60008083601f840112612b40578182fd5b50813567ffffffffffffffff811115612b57578182fd5b6020830191508360208083028501011115612b7157600080fd5b9250929050565b600082601f830112612b88578081fd5b81516020612b9d612b9883614502565b6144d8565b8281528181019085830183850287018401881015612bb9578586fd5b855b85811015612bd757815184529284019290840190600101612bbb565b5090979650505050505050565b60008083601f840112612bf5578182fd5b50813567ffffffffffffffff811115612c0c578182fd5b602083019150836020828501011115612b7157600080fd5b805161059b81614f41565b80516007811061059b57600080fd5b600060e08284031215612c4f578081fd5b50919050565b600060208284031215612c66578081fd5b8135612c7181614f41565b9392505050565b600060208284031215612c89578081fd5b8151612c7181614f41565b60008060008060008060008060a0898b031215612caf578384fd5b8835612cba81614f41565b97506020890135612cca81614f41565b9650604089013567ffffffffffffffff80821115612ce6578586fd5b612cf28c838d01612b2f565b909850965060608b0135915080821115612d0a578586fd5b612d168c838d01612b2f565b909650945060808b0135915080821115612d2e578384fd5b50612d3b8b828c01612be4565b999c989b5096995094979396929594505050565b60008060008060008060a08789031215612d67578384fd5b8635612d7281614f41565b95506020870135612d8281614f41565b94506040870135935060608701359250608087013567ffffffffffffffff811115612dab578283fd5b612db789828a01612be4565b979a9699509497509295939492505050565b60008060408385031215612ddb578182fd5b8251612de681614f41565b6020840151909250612df781614f41565b809150509250929050565b600080600060608486031215612e16578081fd5b8335612e2181614f41565b925060208401359150604084013567ffffffffffffffff811115612e43578182fd5b612e4f86828701612c3e565b9150509250925092565b600060208284031215612e6a578081fd5b81518015158114612c71578182fd5b600060208284031215612e8a578081fd5b5035919050565b600060208284031215612ea2578081fd5b81356001600160e01b031981168114612c71578182fd5b600060208284031215612eca578081fd5b815167ffffffffffffffff811115612ee0578182fd5b8201601f81018413612ef0578182fd5b8051612efe612b9882614526565b818152856020838501011115612f12578384fd5b612f2382602083016020860161499f565b95945050505050565b600080600080600060808688031215612f43578283fd5b8535612f4e81614f41565b94506020860135935060408601359250606086013567ffffffffffffffff811115612f77578182fd5b612f8388828901612b2f565b969995985093965092949392505050565b600060208284031215612fa5578081fd5b815167ffffffffffffffff80821115612fbc578283fd5b9083019060c08286031215612fcf578283fd5b60405160c081018181108382111715612fea57612fea614a87565b604052612ff683612c24565b8152602083015160208201526040830151604082015260608301516060820152608083015182811115613027578485fd5b61303387828601612b78565b60808301525061304560a08401612c2f565b60a082015295945050505050565b600060208284031215613064578081fd5b813567ffffffffffffffff81111561307a578182fd5b610a6984828501612c3e565b600060208284031215613097578081fd5b5051919050565b6000806000604084860312156130b2578081fd5b83359250602084013567ffffffffffffffff8111156130cf578182fd5b6130db86828701612b2f565b9497909650939450505050565b600080604083850312156130fa578182fd5b8235915060208084013567ffffffffffffffff811115613118578283fd5b8401601f81018613613128578283fd5b8035613136612b9882614502565b81815283810190838501858402850186018a1015613152578687fd5b8694505b83851015613174578035835260019490940193918501918501613156565b5080955050505050509250929050565b60008060408385031215613196578182fd5b82359150602083013567ffffffffffffffff8111156131b3578182fd5b8301601f810185136131c3578182fd5b80356131d1612b9882614526565b8181528660208385010111156131e5578384fd5b81602084016020830137908101602001929092525090939092509050565b60008060408385031215613215578182fd5b50508035926020909101359150565b600080600060608486031215613238578081fd5b833592506020840135915060408401356fffffffffffffffffffffffffffffffff81168114613265578182fd5b809150509250925092565b6001600160a01b03169052565b818352602080840193600091908185020181018584845b878110156132ca5782840389526132ab82886145ff565b6132b6868284613508565b9a87019a9550505090840190600101613294565b5091979650505050505050565b6000815180845260208085018081965082840281019150828601855b858110156132ca57828403895261330b848351613555565b988501989350908401906001016132f3565b6000815480845260208085018081965082840281019150858552828520855b858110156132ca5782840389526133538483613584565b9885019893506001918201910161333c565b818352602080840193600091908185020181018584845b878110156132ca5782840389528135609e1988360301811261339c578687fd5b87018035855260a0868201356133b181614f56565b6133bd8888018261360c565b50604082810135908701526060808301359087015260806133e08184018461468f565b935082828901526133f483890185836135b6565b9c89019c9750505092860192505060010161337c565b60008284526020808501945082825b8581101561346357813587528282013561343281614f63565b60ff908116888501526040908382013561344b81614f63565b16908801526060968701969190910190600101613419565b509495945050505050565b6000815180845260208085019450808401835b83811015613463578151805188528381015160ff908116858a0152604091820151169088015260609096019590820190600101613481565b6000815480845260208085019450838352808320835b83811015613463578154875260018083015460ff808216868b015260089190911c166040890152606090970196600290920191016134cf565b60008284527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831115613539578081fd5b6020830280836020870137939093016020019283525090919050565b6000815180845260208085019450808401835b8381101561346357815187529582019590820190600101613568565b6000815480845260208085019450838352808320835b838110156134635781548752958201956001918201910161359a565b60008284528282602086013780602084860101526020601f19601f85011685010190509392505050565b600081518084526135f881602086016020860161499f565b601f01601f19169290920160200192915050565b6003811061361c5761361c614a71565b9052565b6007811061361c5761361c614a71565b60006101006136478461364285612b24565b613270565b60208301356020850152604083013560408501526060830135606085015261367260808401846145ff565b8260808701526136858387018284613508565b9250505061369660a08401846145ff565b85830360a08701526136a9838284613508565b925050506136ba60c08401846145ff565b85830360c08701526136cd83828461327d565b925050506136de60e0840184614647565b85830360e08701526122e583828461340a565b6000610100613704846136428554614760565b60018301546020850152600283015460408501526003830154606085015280608085015261373781850160048501613584565b905083810360a085015261374e8160058501613584565b905083810360c0850152613765816006850161331d565b905083810360e0850152610a6981600785016134b9565b60006001600160a01b03825416835260018201546020840152600282015460408401526003820154606084015260c060808401526137c060c0840160048401613584565b60ff6005840154166137d560a0860182613620565b509392505050565b60609290921b6bffffffffffffffffffffffff19168252601482015260340190565b6001600160a01b0391909116815260200190565b60006001600160a01b03861682526080602083015261383560808301866136f1565b8281036040840152613847818661377c565b91505082606083015295945050505050565b6001600160a01b03929092168252602082015260400190565b6020808252825182820181905260009190848201906040850190845b818110156138b35783516001600160a01b03168352928401929184019160010161388e565b50909695505050505050565b60208082528251828201819052600091906040908185019080840286018301878501865b8381101561396357603f19898403018552815160c06001600160a01b038251168552888201518986015287820151888601526060808301518187015250608080830151828288015261393783880182613555565b9250505060a080830151925061394f81870184613620565b5095880195935050908601906001016138e3565b509098975050505050505050565b60006040820160408352808554808352606092508285019150602083818302870101888652818620865b84811015613a6a57605f1989840301865260a082548452600160ff81850154166139c78787018261360c565b5060028401546040860152600384015489860152600484018260808701528a81546139f1816149e2565b94880185905260c0948185168015613a105760018114613a2457613a4f565b60ff1983168a88015260e08a019350613a4f565b848f528a8f208f5b83811015613a475781548c82018a0152908701908c01613a2c565b8b0188019450505b5050509887019895505050600592909201915060010161399b565b50509501959095525091949350505050565b901515815260200190565b90815260200190565b92835260ff918216602084015216604082015260600190565b6001600160e01b031991909116815260200190565b600060208252612c7160208301846135e0565b60006001600160a01b038716825285602083015284604083015260806060830152613b00608083018486613508565b979650505050505050565b600060a0820190506001600160a01b03871682528560208301528460408301528360608301526122e56080830184613620565b60006001600160a01b038089168352808816602084015280871660408401525084606083015260c06080830152613b7860c08301856135e0565b82810360a0840152610100613b8e828651613270565b6020850151602083015260408501516040830152606085015160608301526080850151816080840152613bc382840182613555565b91505060a085015182820360a0840152613bdd8282613555565b91505060c085015182820360c0840152613bf782826132d7565b91505060e085015182820360e0840152613c11828261346e565b9b9a5050505050505050505050565b6020808252600a908201527f4f6e6c794b656570657200000000000000000000000000000000000000000000604082015260600190565b60208082526013908201527f496e67657374206e6f742043616c6c6261636b00000000000000000000000000604082015260600190565b60208082526010908201527f536f6c76657220686173206368696c6400000000000000000000000000000000604082015260600190565b60208082526016908201527f436f6e646974696f6e206e6f7420457865637574656400000000000000000000604082015260600190565b60208082526015908201527f6d73672e73656e646572206e6f7420736f6c7665720000000000000000000000604082015260600190565b60208082526018908201527f496e76616c696420696e64657820746f20707265706172650000000000000000604082015260600190565b6020808252600c908201527f4f6e6c7920666163746f72790000000000000000000000000000000000000000604082015260600190565b6020808252600b908201527f4f6e6c79204b6565706572000000000000000000000000000000000000000000604082015260600190565b60208082526015908201527f54696d656c6f636b207374696c6c206c6f636b65640000000000000000000000604082015260600190565b6020808252600f908201527f696e676573747320696e76616c69640000000000000000000000000000000000604082015260600190565b60208082526018908201527f4e6f74204172626974726174696f6e5265717565737465640000000000000000604082015260600190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201527f647920696e697469616c697a6564000000000000000000000000000000000000606082015260800190565b60208082526011908201527f536c6f7420696e76616c6964207665722e000000000000000000000000000000604082015260600190565b6020808252600f908201527f4f6e6c792061726269747261746f720000000000000000000000000000000000604082015260600190565b6020808252600e908201527f4b656570657220696e76616c6964000000000000000000000000000000000000604082015260600190565b60208082526014908201527f4f7574636f6d65206e6f742070726f706f736564000000000000000000000000604082015260600190565b60208082526013908201527f4e6f74204f7574636f6d6550726f706f73656400000000000000000000000000604082015260600190565b6020808252818101527f46756c66696c6c206f7574676f696e672063616c6c6261636b73206669727374604082015260600190565b6020808252818101527f46756c66696c6c20696e636f6d696e672063616c6c6261636b73206669727374604082015260600190565b60208082526016908201527f4e6f74204172626974726174696f6e50656e64696e6700000000000000000000604082015260600190565b6020808252600b908201527f4f6e6c79206b6565706572000000000000000000000000000000000000000000604082015260600190565b60208082526012908201527f4f6e6c79206b65657065722f706172656e740000000000000000000000000000604082015260600190565b6020808252600e908201527f547261636b696e67496420736574000000000000000000000000000000000000604082015260600190565b60208082526017908201527f536c6f7420726573657276656420627920696e67657374000000000000000000604082015260600190565b60208082526014908201527f536c6f742076657273696f6e20696e76616c6964000000000000000000000000604082015260600190565b6020808252600d908201527f6e6f7420496e6974696174656400000000000000000000000000000000000000604082015260600190565b6000606082526141eb60608301866136f1565b6001600160a01b039490941660208301525060400152919050565b600084825260406020830152612f23604083018486613508565b60006040820184835260206040818501528185518084526060860191508287019350845b81811015612bd757845183529383019391830191600101614244565b600060a0825261427360a083018861377c565b828103602084015261428581886136f1565b6001600160a01b039690961660408401525050606081019290925260809091015292915050565b60006060825284356142bd81614f41565b6142ca6060840182613270565b506142d760208601612b24565b6142e46080840182613270565b506142f160408601612b24565b6142fe60a0840182613270565b50606085013560c0830152614316608086018661468f565b60e08085015261432b610140850182846135b6565b91505061433b60a08701876145ff565b605f198086850301610100870152614354848385613365565b935061436360c08a018a6146d4565b92508086850301610120870152505061437c8282613630565b9250505061438d6020830185613270565b826040830152949350505050565b92835260208301919091526fffffffffffffffffffffffffffffffff16604082015260600190565b918252602082015260400190565b6000808335601e198436030181126143e7578283fd5b83018035915067ffffffffffffffff821115614401578283fd5b6020908101925081023603821315612b7157600080fd5b6000808335601e1984360301811261442e578283fd5b83018035915067ffffffffffffffff821115614448578283fd5b6020019150606081023603821315612b7157600080fd5b6000808335601e19843603018112614475578182fd5b83018035915067ffffffffffffffff82111561448f578283fd5b602001915036819003821315612b7157600080fd5b6000823560fe198336030181126144b9578182fd5b9190910192915050565b60008235609e198336030181126144b9578182fd5b60405181810167ffffffffffffffff811182821017156144fa576144fa614a87565b604052919050565b600067ffffffffffffffff82111561451c5761451c614a87565b5060209081020190565b600067ffffffffffffffff82111561454057614540614a87565b50601f01601f191660200190565b60009081526020902090565b6020841080156145b057601f8411600181146145815761457a8685614a17565b83556145aa565b61458a8361454e565b61459f6020601f88010482016001830161476c565b506145aa8684614aee565b50610834565b8160005260206000206020601f8701048101601f871680156145da576145da816000198401614a9d565b506145ed6020601f88010483018261476c565b50506001856002021782555050505050565b6000808335601e19843603018112614615578283fd5b830160208101925035905067ffffffffffffffff81111561463557600080fd5b602081023603831315612b7157600080fd5b6000808335601e1984360301811261465d578283fd5b830160208101925035905067ffffffffffffffff81111561467d57600080fd5b606081023603831315612b7157600080fd5b6000808335601e198436030181126146a5578283fd5b830160208101925035905067ffffffffffffffff8111156146c557600080fd5b803603831315612b7157600080fd5b6000823560fe198336030181126146e9578182fd5b90910192915050565b6000821982111561470557614705614a5b565b500190565b60008261472557634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561474457614744614a5b565b500290565b60008282101561475b5761475b614a5b565b500390565b6001600160a01b031690565b5b81811015611861576000815560010161476d565b6801000000000000000083111561479a5761479a614a87565b805483825580841015614832577f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60018183118116156147dc576147dc614a5b565b60028287118216156147f0576147f0614a5b565b600085815260208120909350878202810190828602015b8082101561482c5761481b85868454614b0c565b825584848301558282019150614807565b50505050505b508161483d8261454e565b6000805b8681101561486a57614854848385614ee6565b6060939093019260029290920191600101614841565b50505050505050565b61487d8382614ab1565b818160005260208060002060005b8681101561486a5783358255928201926001918201910161488b565b67ffffffffffffffff8311156148bf576148bf614a87565b6148c981546149e2565b600080601f8611601f8411818117156148e8576148e58661454e565b92505b8015614917576020601f890104830160208910156149035750825b6149156020601f88010485018261476c565b505b50806001811461494357600094508715614932578387013594505b61493c8886614a17565b8655614995565b601f198816945082845b8681101561496d578886013582556020958601956001909201910161494d565b508886101561498a57878501356000196008601f8c16021c191681555b506001600289020186555b5050505050505050565b60005b838110156149ba5781810151838201526020016149a2565b83811115610d325750506000910152565b6000816149da576149da614a5b565b506000190190565b6002810460018216806149f657607f821691505b60208210811415612c4f57634e487b7160e01b600052602260045260246000fd5b600019600883021c191660029091021790565b6000600019821415614a3e57614a3e614a5b565b5060010190565b634e487b7160e01b600052600060045260246000fd5b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b8054600019836020036008021c1681555050565b68010000000000000000821115614aca57614aca614a87565b80548282558083101561174657816000526020600020610d3282820185830161476c565b806000526020600020614b02838254614a17565b9091556000905550565b60089190910291821b60001990921b9182169119161790565b6001600160a01b0382166001600160a01b03198254161781555050565b8135614b4d81614f41565b614b578183614b25565b506001602080840135828401556040840135600284015560608401356003840155614b8560808501856143d1565b614b93818360048801614873565b5050614ba260a08501856143d1565b614bb0818360058801614873565b505060068301614bc360c08601866143d1565b68010000000000000000811115614bdc57614bdc614a87565b825481845580821015614c175760008481528581208381019083015b80821015614c1357614c0a8383614ab1565b90880190614bf8565b5050505b5081614c228461454e565b93506000805b83811015614c5757614c3a83866143d1565b614c468183868b614e59565b505094870194918601918701614c28565b5050505050505050614c6c60e0830183614418565b610d32818360078601614781565b8135614c8581614f41565b614c8f8183614b25565b506001602080840135614ca181614f41565b614cad81848601614b25565b5060026040850135614cbe81614f41565b614cca81838701614b25565b5060036060860135818601556004614ce5608088018861445f565b614cf28183858b016148a7565b50506005808701614d0660a08a018a6143d1565b68010000000000000000811115614d1f57614d1f614a87565b825481845580821015614df3577f33333333333333333333333333333333333333333333333333333333333333338082118b1615614d5f57614d5f614a5b565b8083118b1615614d7157614d71614a5b565b506000848152898120838702810190878402015b80821015614def57614d9983848454614b0c565b8255828d8301558a8201614daf84858354614b0c565b815550898201614dc184858354614b0c565b90558189018054614dd1816149e2565b8015614de357614de38682848661455a565b50505090870190614d85565b5050505b50819650614e008361454e565b9550600094508492505b80831015614e3757614e26614e1f88846144c3565b8688614e72565b958701959483019491880191614e0a565b505050505050505050611861614e5060c08401846144a4565b60068301614b42565b8115614e6757614e67614a45565b610d32848483614873565b8115614e8057614e80614a45565b82358155600181016020840135614e9681614f56565b60038110614ea657614ea6614a71565b60ff1982541660ff8216811783555050506040830135600282015560608301356003820155614ed8608084018461445f565b6108348183600486016148a7565b8115614ef457614ef4614a45565b82358155600181016020840135614f0a81614f63565b815460ff191660ff91909116178082556040850135614f2881614f63565b61ff008160081b1661ff00198316178355505050505050565b6001600160a01b03811681146106e557600080fd5b600381106106e557600080fd5b60ff811681146106e557600080fdfea264697066735822122023892f74cadae1027557ff2096da16f52a1e94e7c9ed7fa8cff7a56449a39a3364736f6c63430008000033";

export class BasicSolverV1__factory extends ContractFactory {
  constructor(
    linkLibraryAddresses: BasicSolverV1LibraryAddresses,
    signer?: Signer
  ) {
    super(
      _abi,
      BasicSolverV1__factory.linkBytecode(linkLibraryAddresses),
      signer
    );
  }

  static linkBytecode(
    linkLibraryAddresses: BasicSolverV1LibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$94d7d2f22770e4b0d1a2b99fb2812308e2\\$__", "g"),
      linkLibraryAddresses["__$94d7d2f22770e4b0d1a2b99fb2812308e2$__"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BasicSolverV1> {
    return super.deploy(overrides || {}) as Promise<BasicSolverV1>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BasicSolverV1 {
    return super.attach(address) as BasicSolverV1;
  }
  connect(signer: Signer): BasicSolverV1__factory {
    return super.connect(signer) as BasicSolverV1__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BasicSolverV1Interface {
    return new utils.Interface(_abi) as BasicSolverV1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BasicSolverV1 {
    return new Contract(address, _abi, signerOrProvider) as BasicSolverV1;
  }
}

export interface BasicSolverV1LibraryAddresses {
  ["__$94d7d2f22770e4b0d1a2b99fb2812308e2$__"]: string;
}
