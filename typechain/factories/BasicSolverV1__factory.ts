/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BasicSolverV1, BasicSolverV1Interface } from "../BasicSolverV1";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_type",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_key",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "addData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "addressFromChainIndex",
    outputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "payouts",
        type: "uint256[]",
      },
    ],
    name: "arbitrate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "arbitrateNull",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "arbitrationPending",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "arbitrationRequested",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "chainChild",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "chainIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "chainParent",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "conditions",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "collateralToken",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "questionId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "parentCollectionId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "conditionId",
        type: "bytes32",
      },
      {
        internalType: "enum SolverLib.Status",
        name: "status",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "config",
    outputs: [
      {
        internalType: "contract Solver",
        name: "implementation",
        type: "address",
      },
      {
        internalType: "address",
        name: "keeper",
        type: "address",
      },
      {
        internalType: "address",
        name: "arbitrator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "timelockSeconds",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "contract IERC20",
            name: "collateralToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "outcomeSlots",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "parentCollectionPartitionIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "partition",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "recipientAddressSlots",
            type: "uint256[]",
          },
          {
            internalType: "uint256[][]",
            name: "recipientAmountSlots",
            type: "uint256[][]",
          },
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
        ],
        internalType: "struct SolverLib.ConditionBase",
        name: "conditionBase",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "confirmPayouts",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "deferredIngest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract Solver",
            name: "implementation",
            type: "address",
          },
          {
            internalType: "address",
            name: "keeper",
            type: "address",
          },
          {
            internalType: "address",
            name: "arbitrator",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "timelockSeconds",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "executions",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isDeferred",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isConstant",
                type: "bool",
              },
              {
                internalType: "uint8",
                name: "dataType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "key",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "solverIndex",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct SolverLib.Ingest[]",
            name: "ingests",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "contract IERC20",
                name: "collateralToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "outcomeSlots",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "parentCollectionPartitionIndex",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "uint256[]",
                name: "partition",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "recipientAddressSlots",
                type: "uint256[]",
              },
              {
                internalType: "uint256[][]",
                name: "recipientAmountSlots",
                type: "uint256[][]",
              },
              {
                internalType: "string",
                name: "metadata",
                type: "string",
              },
            ],
            internalType: "struct SolverLib.ConditionBase",
            name: "conditionBase",
            type: "tuple",
          },
        ],
        internalType: "struct SolverLib.Config",
        name: "_config",
        type: "tuple",
      },
    ],
    name: "deployChild",
    outputs: [
      {
        internalType: "contract Solver",
        name: "_solver",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "executeSolve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_partitionIndex",
        type: "uint256",
      },
    ],
    name: "getCanonCollectionId",
    outputs: [
      {
        internalType: "bytes32",
        name: "collectionId",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getConditions",
    outputs: [
      {
        components: [
          {
            internalType: "contract IERC20",
            name: "collateralToken",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "questionId",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "parentCollectionId",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "conditionId",
            type: "bytes32",
          },
          {
            internalType: "uint256[]",
            name: "payouts",
            type: "uint256[]",
          },
          {
            internalType: "enum SolverLib.Status",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct SolverLib.Condition[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_key",
        type: "uint256",
      },
    ],
    name: "getOutput",
    outputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ingestsValid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_chainParent",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_chainIndex",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "contract Solver",
            name: "implementation",
            type: "address",
          },
          {
            internalType: "address",
            name: "keeper",
            type: "address",
          },
          {
            internalType: "address",
            name: "arbitrator",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "timelockSeconds",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "executions",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isDeferred",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isConstant",
                type: "bool",
              },
              {
                internalType: "uint8",
                name: "dataType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "key",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "solverIndex",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct SolverLib.Ingest[]",
            name: "ingests",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "contract IERC20",
                name: "collateralToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "outcomeSlots",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "parentCollectionPartitionIndex",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "uint256[]",
                name: "partition",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "recipientAddressSlots",
                type: "uint256[]",
              },
              {
                internalType: "uint256[][]",
                name: "recipientAmountSlots",
                type: "uint256[][]",
              },
              {
                internalType: "string",
                name: "metadata",
                type: "string",
              },
            ],
            internalType: "struct SolverLib.ConditionBase",
            name: "conditionBase",
            type: "tuple",
          },
        ],
        internalType: "struct SolverLib.Config",
        name: "_solverConfig",
        type: "tuple",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "prepareSolve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_payouts",
        type: "uint256[]",
      },
    ],
    name: "proposePayouts",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_trackingId",
        type: "bytes32",
      },
    ],
    name: "setTrackingId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "timelock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "trackingId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50614135806100206000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c80635bd11123116100f95780639999250611610097578063e7fd205911610071578063e7fd20591461037e578063ea8221a914610391578063f23a6e6114610399578063f43d3269146103ac576101c4565b8063999925061461034e578063bc197c8114610356578063d33219b414610376576101c4565b806380c2dde2116100d357806380c2dde21461031857806384dbd3911461032057806394e0560014610333578063972a688b14610346576101c4565b80635bd11123146102e157806379502c55146102e95780637c12362714610303576101c4565b80632b363427116101665780633a275fa2116101405780633a275fa2146102b457806348cbb2fc146102bc57806348d6bc00146102d157806355dd978b146102d9576101c4565b80632b363427146102865780632c17b91e146102995780633837b05e146102a1576101c4565b806317861f87116101a257806317861f871461021a57806317f9447f1461023a57806318f792781461025a57806326c5000714610262576101c4565b806301ffc9a7146101c95780630d06101a146101f25780630d49722d14610207575b600080fd5b6101dc6101d736600461261b565b6103bf565b6040516101e99190612f38565b60405180910390f35b6102056102003660046125eb565b610405565b005b6102056102153660046124ff565b610433565b61022d6102283660046125eb565b610593565b6040516101e99190612f61565b61024d610248366004612775565b610663565b6040516101e99190612d72565b610205610768565b6102756102703660046125eb565b6108c2565b6040516101e9959493929190612f74565b6102056102943660046127b0565b610910565b61020561094a565b61024d6102af3660046125eb565b610b20565b610205610be2565b6102c4610e84565b6040516101e99190612f43565b610205610e8a565b61024d610fcd565b610205610fdc565b6102f16110b4565b6040516101e996959493929190612fa7565b61030b611383565b6040516101e99190612dba565b61024d6114b2565b6102c461032e3660046125eb565b6114c6565b6102056103413660046125eb565b6115c1565b610205611799565b6101dc611871565b61036961036436600461233a565b61191e565b6040516101e99190612f4c565b6102c461194b565b61020561038c36600461253f565b611951565b6102c4611ac7565b6103696103a73660046123f5565b611acd565b6102056103ba3660046124a8565b611af9565b60006001600160e01b031982167f4e2312e00000000000000000000000000000000000000000000000000000000014806103fd57506103fd82611bae565b90505b919050565b6014541561042e5760405162461bcd60e51b815260040161042590613430565b60405180910390fd5b601455565b6002546001600160a01b0316331461045d5760405162461bcd60e51b8152600401610425906131d3565b6001600f805461046f906001906139d0565b8154811061048d57634e487b7160e01b600052603260045260246000fd5b600091825260209091206006918202016005015460ff16908111156104c257634e487b7160e01b600052602160045260246000fd5b146104df5760405162461bcd60e51b815260040161042590613165565b600f805473__$94d7d2f22770e4b0d1a2b99fb2812308e2$__91636a0a24f19161050b906001906139d0565b8154811061052957634e487b7160e01b600052603260045260246000fd5b906000526020600020906006020184846040518463ffffffff1660e01b81526004016105579392919061350b565b60006040518083038186803b15801561056f57600080fd5b505af4158015610583573d6000803e3d6000fd5b5050505061058f611be0565b5050565b600f54600082815260166020526040902054606091146105c55760405162461bcd60e51b81526004016104259061312e565b600082815260156020526040902080546105de90613b69565b80601f016020809104026020016040519081016040528092919081815260200182805461060a90613b69565b80156106575780601f1061062c57610100808354040283529160200191610657565b820191906000526020600020905b81548152906001019060200180831161063a57829003601f168201915b50505050509050919050565b6011546000906001600160a01b03161561068f5760405162461bcd60e51b8152600401610425906130f7565b6012546040517f4dd0aa4900000000000000000000000000000000000000000000000000000000815273__$94d7d2f22770e4b0d1a2b99fb2812308e2$__91634dd0aa49916106e59186913091906004016135d3565b604080518083038186803b1580156106fc57600080fd5b505af4158015610710573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610734919061246f565b6011805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03939093169290921790915592915050565b6003546001600160a01b031633146107925760405162461bcd60e51b8152600401610425906132af565b6002600f80546107a4906001906139d0565b815481106107c257634e487b7160e01b600052603260045260246000fd5b600091825260209091206006918202016005015460ff16908111156107f757634e487b7160e01b600052602160045260246000fd5b146108145760405162461bcd60e51b815260040161042590613354565b600f805473__$94d7d2f22770e4b0d1a2b99fb2812308e2$__916324b2860291610840906001906139d0565b8154811061085e57634e487b7160e01b600052603260045260246000fd5b90600052602060002090600602016040518263ffffffff1660e01b81526004016108889190612f43565b60006040518083038186803b1580156108a057600080fd5b505af41580156108b4573d6000803e3d6000fd5b505050506108c0611be0565b565b600f81815481106108d257600080fd5b6000918252602090912060069091020180546001820154600283015460038401546005909401546001600160a01b0390931694509092909160ff1685565b6002546001600160a01b0316331461093a5760405162461bcd60e51b8152600401610425906130c0565b610945838383611bfd565b505050565b60105460ff1615610a88576002546001600160a01b031633148061097d575060105461010090046001600160a01b031633145b6109995760405162461bcd60e51b8152600401610425906133f9565b6005600f80546109ab906001906139d0565b815481106109c957634e487b7160e01b600052603260045260246000fd5b600091825260209091206006918202016005015460ff16908111156109fe57634e487b7160e01b600052602160045260246000fd5b1480610a6c57506006600f8054610a17906001906139d0565b81548110610a3557634e487b7160e01b600052603260045260246000fd5b600091825260209091206006918202016005015460ff1690811115610a6a57634e487b7160e01b600052602160045260246000fd5b145b610a885760405162461bcd60e51b815260040161042590613089565b6010805460ff19166001179055610a9d611cda565b610aa5611e52565b6011546001600160a01b0316156108c057601160009054906101000a90046001600160a01b03166001600160a01b0316632c17b91e6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610b0657600080fd5b505af1158015610b1a573d6000803e3d6000fd5b50505050565b6010546011546012546040517f9fa61fa300000000000000000000000000000000000000000000000000000000815260009373__$94d7d2f22770e4b0d1a2b99fb2812308e2$__93639fa61fa393610b9293889330936001600160a01b036101009092048216939116916004016136d9565b60206040518083038186803b158015610baa57600080fd5b505af4158015610bbe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fd919061231e565b6000600f8054610bf4906001906139d0565b81548110610c1257634e487b7160e01b600052603260045260246000fd5b600091825260209091206006918202016005015460ff1690811115610c4757634e487b7160e01b600052602160045260246000fd5b14610c645760405162461bcd60e51b81526004016104259061349e565b610c6c611871565b610c885760405162461bcd60e51b815260040161042590613241565b600f805460019190610c9b9083906139d0565b81548110610cb957634e487b7160e01b600052603260045260246000fd5b906000526020600020906006020160050160006101000a81548160ff02191690836006811115610cf957634e487b7160e01b600052602160045260246000fd5b021790555073__$94d7d2f22770e4b0d1a2b99fb2812308e2$__6366662585601060019054906101000a90046001600160a01b03166001600601600f6001600f80549050610d4791906139d0565b81548110610d6557634e487b7160e01b600052603260045260246000fd5b90600052602060002090600602016040518463ffffffff1660e01b8152600401610d9193929190612d86565b60006040518083038186803b158015610da957600080fd5b505af4158015610dbd573d6000803e3d6000fd5b5050600f805473__$94d7d2f22770e4b0d1a2b99fb2812308e2$__935063366968289250610ded906001906139d0565b81548110610e0b57634e487b7160e01b600052603260045260246000fd5b906000526020600020906006020160016006013060156014546040518663ffffffff1660e01b8152600401610e44959493929190613565565b60006040518083038186803b158015610e5c57600080fd5b505af4158015610e70573d6000803e3d6000fd5b50505050610e7c6108c0565b6108c0611eb7565b60145481565b6013544211610eab5760405162461bcd60e51b81526004016104259061320a565b6002600f8054610ebd906001906139d0565b81548110610edb57634e487b7160e01b600052603260045260246000fd5b600091825260209091206006918202016005015460ff1690811115610f1057634e487b7160e01b600052602160045260246000fd5b14610f2d5760405162461bcd60e51b81526004016104259061331d565b600f805473__$94d7d2f22770e4b0d1a2b99fb2812308e2$__9163696d466191610f59906001906139d0565b81548110610f7757634e487b7160e01b600052603260045260246000fd5b90600052602060002090600602016040518263ffffffff1660e01b8152600401610fa19190612f43565b60006040518083038186803b158015610fb957600080fd5b505af4158015610b1a573d6000803e3d6000fd5b6011546001600160a01b031681565b6003546001600160a01b031633146110065760405162461bcd60e51b8152600401610425906132af565b6003600f8054611018906001906139d0565b8154811061103657634e487b7160e01b600052603260045260246000fd5b600091825260209091206006918202016005015460ff169081111561106b57634e487b7160e01b600052602160045260246000fd5b146110885760405162461bcd60e51b815260040161042590613278565b600f805473__$94d7d2f22770e4b0d1a2b99fb2812308e2$__9163ec7ac2f091610840906001906139d0565b60018054600254600354600454600580546001600160a01b0395861696948616959093169391926110e490613b69565b80601f016020809104026020016040519081016040528092919081815260200182805461111090613b69565b801561115d5780601f106111325761010080835404028352916020019161115d565b820191906000526020600020905b81548152906001019060200180831161114057829003601f168201915b505060408051610100810182526006870180546001600160a01b03168252600788015460208084019190915260088901548385015260098901546060840152600a890180548551818402810184019096528086529899989397509195506080870194509091908301828280156111f257602002820191906000526020600020905b8154815260200190600101908083116111de575b505050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561124a57602002820191906000526020600020905b815481526020019060010190808311611236575b5050505050815260200160068201805480602002602001604051908101604052809291908181526020016000905b828210156112e4576000848152602090819020830180546040805182850281018501909152818152928301828280156112d057602002820191906000526020600020905b8154815260200190600101908083116112bc575b505050505081526020019060010190611278565b5050505081526020016007820180546112fc90613b69565b80601f016020809104026020016040519081016040528092919081815260200182805461132890613b69565b80156113755780601f1061134a57610100808354040283529160200191611375565b820191906000526020600020905b81548152906001019060200180831161135857829003601f168201915b505050505081525050905086565b6060600f805480602002602001604051908101604052809291908181526020016000905b828210156114a95760008481526020908190206040805160c0810182526006860290920180546001600160a01b03168352600181015483850152600281015483830152600381015460608401526004810180548351818702810187019094528084529394919360808601939283018282801561144257602002820191906000526020600020905b81548152602001906001019080831161142e575b5050509183525050600582015460209091019060ff16600681111561147757634e487b7160e01b600052602160045260246000fd5b600681111561149657634e487b7160e01b600052602160045260246000fd5b81525050815260200190600101906113a7565b50505050905090565b60105461010090046001600160a01b031681565b600073__$94d7d2f22770e4b0d1a2b99fb2812308e2$__630bc1c42a600f6001600f805490506114f691906139d0565b8154811061151457634e487b7160e01b600052603260045260246000fd5b90600052602060002090600602016001600601600401858154811061154957634e487b7160e01b600052603260045260246000fd5b90600052602060002001546040518363ffffffff1660e01b81526004016115719291906135b1565b60206040518083038186803b15801561158957600080fd5b505af415801561159d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fd9190612603565b6002546001600160a01b031633146115eb5760405162461bcd60e51b8152600401610425906130c0565b600680548290811061160d57634e487b7160e01b600052603260045260246000fd5b60009182526020909120600160059092020181015460ff161515146116445760405162461bcd60e51b815260040161042590613467565b6117966001600501828154811061166b57634e487b7160e01b600052603260045260246000fd5b906000526020600020906005020160010160029054906101000a900460ff16600160050183815481106116ae57634e487b7160e01b600052603260045260246000fd5b90600052602060002090600502016002015473__$94d7d2f22770e4b0d1a2b99fb2812308e2$__63f060d0b6600160050186815481106116fe57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060050201306040518363ffffffff1660e01b815260040161172a9291906136c2565b60006040518083038186803b15801561174257600080fd5b505af4158015611756573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261177e9190810190612643565b8060200190518101906117919190612643565b611bfd565b50565b6003546001600160a01b031633146117c35760405162461bcd60e51b8152600401610425906132af565b6004600f80546117d5906001906139d0565b815481106117f357634e487b7160e01b600052603260045260246000fd5b600091825260209091206006918202016005015460ff169081111561182857634e487b7160e01b600052602160045260246000fd5b146118455760405162461bcd60e51b8152600401610425906133c2565b600f805473__$94d7d2f22770e4b0d1a2b99fb2812308e2$__916359111fb591610840906001906139d0565b600f546040517f5cc1f6b500000000000000000000000000000000000000000000000000000000815260009173__$94d7d2f22770e4b0d1a2b99fb2812308e2$__91635cc1f6b5916118c99160069190600401612e6c565b60206040518083038186803b1580156118e157600080fd5b505af41580156118f5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061191991906125cf565b905090565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b60135481565b6003546001600160a01b0316331461197b5760405162461bcd60e51b8152600401610425906132af565b6004600f805461198d906001906139d0565b815481106119ab57634e487b7160e01b600052603260045260246000fd5b600091825260209091206006918202016005015460ff16908111156119e057634e487b7160e01b600052602160045260246000fd5b146119fd5760405162461bcd60e51b8152600401610425906133c2565b6013544211611a1e5760405162461bcd60e51b81526004016104259061320a565b600f805473__$94d7d2f22770e4b0d1a2b99fb2812308e2$__916311ca1ac091611a4a906001906139d0565b81548110611a6857634e487b7160e01b600052603260045260246000fd5b9060005260206000209060060201836040518363ffffffff1660e01b8152600401611a94929190613525565b60006040518083038186803b158015611aac57600080fd5b505af4158015611ac0573d6000803e3d6000fd5b5050505050565b60125481565b7ff23a6e61000000000000000000000000000000000000000000000000000000005b9695505050505050565b3373e7f1725e7734ce288f8367e1bb143e90bb3f051214611b2c5760405162461bcd60e51b81526004016104259061319c565b6000611b3e60408301602084016122fb565b6001600160a01b03161415611b655760405162461bcd60e51b8152600401610425906132e6565b601080547fffffffffffffffffffffff0000000000000000000000000000000000000000ff166101006001600160a01b038616021790556012829055806001611ac08282613dff565b6001600160e01b031981167f01ffc9a70000000000000000000000000000000000000000000000000000000014919050565b600454611bee9060016139b1565b611bf89042613999565b601355565b600f54611c0c906001906139d0565b60008381526016602052604090205414611c385760405162461bcd60e51b81526004016104259061338b565b6000828152601660205260408120805491611c5283613bb1565b909155505060008281526015602090815260409091208251611c76928401906120e1565b508260ff166004811115611c9a57634e487b7160e01b600052602160045260246000fd5b6000838152601760205260409020805460ff19166001836004811115611cd057634e487b7160e01b600052602160045260246000fd5b0217905550505050565b601054600f80546040517f5069a07c000000000000000000000000000000000000000000000000000000008152919273__$94d7d2f22770e4b0d1a2b99fb2812308e2$__92635069a07c92611d46926007926101009091046001600160a01b03169130916004016134d5565b60006040518083038186803b158015611d5e57600080fd5b505af4158015611d72573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611d9a91908101906126b6565b81546001808201845560009384526020938490208351600690930201805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03909316929092178255828401519082015560408201516002820155606082015160038201556080820151805192939192611e179260048501920190612165565b5060a082015160058201805460ff19166001836006811115611e4957634e487b7160e01b600052602160045260246000fd5b02179055505050565b60005b600654811015611796576006805482908110611e8157634e487b7160e01b600052603260045260246000fd5b600091825260209091206001600590920201015460ff16611ea557611ea581611fa7565b80611eaf81613bb1565b915050611e55565b6011546001600160a01b031615801590611f525750601160009054906101000a90046001600160a01b03166001600160a01b031663999925066040518163ffffffff1660e01b815260040160206040518083038186803b158015611f1a57600080fd5b505afa158015611f2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f5291906125cf565b156108c057601160009054906101000a90046001600160a01b03166001600160a01b0316633a275fa26040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610b0657600080fd5b61179660016005018281548110611fce57634e487b7160e01b600052603260045260246000fd5b906000526020600020906005020160010160029054906101000a900460ff166001600501838154811061201157634e487b7160e01b600052603260045260246000fd5b90600052602060002090600502016002015473__$94d7d2f22770e4b0d1a2b99fb2812308e2$__63f060d0b66001600501868154811061206157634e487b7160e01b600052603260045260246000fd5b9060005260206000209060050201306040518363ffffffff1660e01b815260040161208d9291906136c2565b60006040518083038186803b1580156120a557600080fd5b505af41580156120b9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526117919190810190612643565b8280546120ed90613b69565b90600052602060002090601f01602090048101928261210f5760008555612155565b82601f1061212857805160ff1916838001178555612155565b82800160010185558215612155579182015b8281111561215557825182559160200191906001019061213a565b5061216192915061219f565b5090565b828054828255906000526020600020908101928215612155579160200282018281111561215557825182559160200191906001019061213a565b5b8082111561216157600081556001016121a0565b8035610400816140cd565b60008083601f8401126121d0578182fd5b50813567ffffffffffffffff8111156121e7578182fd5b602083019150836020808302850101111561220157600080fd5b9250929050565b600082601f830112612218578081fd5b8151602061222d612228836137f1565b6137c7565b8281528181019085830183850287018401881015612249578586fd5b855b858110156122675781518452928401929084019060010161224b565b5090979650505050505050565b8035610400816140e2565b60008083601f840112612290578182fd5b50813567ffffffffffffffff8111156122a7578182fd5b60208301915083602082850101111561220157600080fd5b8051610400816140cd565b80516007811061040057600080fd5b600060e082840312156122ea578081fd5b50919050565b8035610400816140f0565b60006020828403121561230c578081fd5b8135612317816140cd565b9392505050565b60006020828403121561232f578081fd5b8151612317816140cd565b60008060008060008060008060a0898b031215612355578384fd5b8835612360816140cd565b97506020890135612370816140cd565b9650604089013567ffffffffffffffff8082111561238c578586fd5b6123988c838d016121bf565b909850965060608b01359150808211156123b0578586fd5b6123bc8c838d016121bf565b909650945060808b01359150808211156123d4578384fd5b506123e18b828c0161227f565b999c989b5096995094979396929594505050565b60008060008060008060a0878903121561240d578384fd5b8635612418816140cd565b95506020870135612428816140cd565b94506040870135935060608701359250608087013567ffffffffffffffff811115612451578283fd5b61245d89828a0161227f565b979a9699509497509295939492505050565b60008060408385031215612481578182fd5b825161248c816140cd565b602084015190925061249d816140cd565b809150509250929050565b6000806000606084860312156124bc578081fd5b83356124c7816140cd565b925060208401359150604084013567ffffffffffffffff8111156124e9578182fd5b6124f5868287016122d9565b9150509250925092565b60008060208385031215612511578182fd5b823567ffffffffffffffff811115612527578283fd5b612533858286016121bf565b90969095509350505050565b60006020808385031215612551578182fd5b823567ffffffffffffffff811115612567578283fd5b8301601f81018513612577578283fd5b8035612585612228826137f1565b81815283810190838501858402850186018910156125a1578687fd5b8694505b838510156125c35780358352600194909401939185019185016125a5565b50979650505050505050565b6000602082840312156125e0578081fd5b8151612317816140e2565b6000602082840312156125fc578081fd5b5035919050565b600060208284031215612614578081fd5b5051919050565b60006020828403121561262c578081fd5b81356001600160e01b031981168114612317578182fd5b600060208284031215612654578081fd5b815167ffffffffffffffff81111561266a578182fd5b8201601f8101841361267a578182fd5b805161268861222882613815565b81815285602083850101111561269c578384fd5b6126ad826020830160208601613b3d565b95945050505050565b6000602082840312156126c7578081fd5b815167ffffffffffffffff808211156126de578283fd5b9083019060c082860312156126f1578283fd5b60405160c08101818110838211171561270c5761270c613bf8565b604052612718836122bf565b8152602083015160208201526040830151604082015260608301516060820152608083015182811115612749578485fd5b61275587828601612208565b60808301525061276760a084016122ca565b60a082015295945050505050565b600060208284031215612786578081fd5b813567ffffffffffffffff81111561279c578182fd5b6127a8848285016122d9565b949350505050565b6000806000606084860312156127c4578081fd5b83356127cf816140f0565b925060208401359150604084013567ffffffffffffffff8111156127f1578182fd5b8401601f81018613612801578182fd5b803561280f61222882613815565b818152876020838501011115612823578384fd5b8160208401602083013783602083830101528093505050509250925092565b6001600160a01b03169052565b818352602080840193600091908185020181018584845b8781101561289c57828403895261287d82886138ee565b612888868284612a10565b9a87019a9550505090840190600101612866565b5091979650505050505050565b6000815180845260208085018081965082840281019150828601855b8581101561289c5782840389526128dd848351612a5d565b988501989350908401906001016128c5565b6000815480845260208085018081965082840281019150858552828520855b8581101561289c5782840389526129258483612a97565b9885019893506001918201910161290e565b60008284526020808501945084818502860184845b87811015612267578383038952813560de1988360301811261296c578687fd5b87018035845260e086820135612981816140e2565b61298d88870182612ac9565b50604061299b818401612274565b6129a782880182612ac9565b505060606129b68184016122f0565b6129c282880182612d6b565b50506080828101359086015260a0808301359086015260c06129e681840184613936565b935082828801526129fa8388018583612acf565b9c89019c9650505092860192505060010161294c565b60008284527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831115612a41578081fd5b6020830280836020870137939093016020019283525090919050565b6000815180845260208085019450808401835b83811015612a8c57815187529582019590820190600101612a70565b509495945050505050565b6000815480845260208085019450838352808320835b83811015612a8c57815487529582019560019182019101612aad565b15159052565b60008284528282602086013780602084860101526020601f19601f85011685010190509392505050565b60008151808452612b11816020860160208601613b3d565b601f01601f19169290920160200192915050565b60008154612b3281613b69565b808552602060018381168015612b4f5760018114612b6357612b91565b60ff19851688840152604088019550612b91565b866000528260002060005b85811015612b895781548a8201860152908301908401612b6e565b890184019650505b505050505092915050565b60078110612bba57634e487b7160e01b600052602160045260246000fd5b9052565b6000610100612bd584612bd0856121b4565b612842565b602083013560208501526040830135604085015260608301356060850152612c0060808401846138ee565b826080870152612c138387018284612a10565b92505050612c2460a08401846138ee565b85830360a0870152612c37838284612a10565b92505050612c4860c08401846138ee565b85830360c0870152612c5b83828461284f565b92505050612c6c60e0840184613936565b85830360e0870152611aef838284612acf565b6000610100612c9284612bd085546139e7565b600183015460208501526002830154604085015260038301546060850152806080850152612cc581850160048501612a97565b905083810360a0850152612cdc8160058501612a97565b905083810360c0850152612cf381600685016128ef565b905083810360e08501526127a88160078501612b25565b60006001600160a01b03825416835260018201546020840152600282015460408401526003820154606084015260c06080840152612d4e60c0840160048401612a97565b60ff600584015416612d6360a0860182612b9c565b509392505050565b60ff169052565b6001600160a01b0391909116815260200190565b60006001600160a01b038516825260606020830152612da86060830185612c7f565b8281036040840152611aef8185612d0a565b60208082528251828201819052600091906040908185019080840286018301878501865b83811015612e5e57603f19898403018552815160c06001600160a01b0382511685528882015189860152878201518886015260608083015181870152506080808301518282880152612e3283880182612a5d565b9250505060a0808301519250612e4a81870184612b9c565b509588019593505090860190600101612dde565b509098975050505050505050565b60006040808301818452808654808352606092508286019150602083818302880101898752818720875b84811015612f2557605f198a840301865260e082548452600183015460ff612ec2878701828416612ac9565b612ed38b8701828460081c16612ac9565b612ee48a8701828460101c16612d6b565b505060028301546080850152600383015460a08501528060c0850152612f0f81850160048501612b25565b9685019693505060059190910190600101612e96565b5050960196909652509295945050505050565b901515815260200190565b90815260200190565b6001600160e01b031991909116815260200190565b6000602082526123176020830184612af9565b600060a0820190506001600160a01b0387168252856020830152846040830152836060830152611aef6080830184612b9c565b60006001600160a01b038089168352808816602084015280871660408401525084606083015260c06080830152612fe160c0830185612af9565b82810360a0840152610100612ff7828651612842565b602085015160208301526040850151604083015260608501516060830152608085015181608084015261302c82840182612a5d565b91505060a085015182820360a08401526130468282612a5d565b91505060c085015182820360c084015261306082826128a9565b91505060e085015182820360e084015261307a8282612af9565b9b9a5050505050505050505050565b60208082526014908201527f43757272656e7420736f6c766520616374697665000000000000000000000000604082015260600190565b6020808252600a908201527f4f6e6c794b656570657200000000000000000000000000000000000000000000604082015260600190565b60208082526010908201527f536f6c76657220686173206368696c6400000000000000000000000000000000604082015260600190565b60208082526011908201527f506f727420696e76616c6964207665722e000000000000000000000000000000604082015260600190565b60208082526016908201527f436f6e646974696f6e206e6f7420457865637574656400000000000000000000604082015260600190565b6020808252600c908201527f4f6e6c7920666163746f72790000000000000000000000000000000000000000604082015260600190565b6020808252600b908201527f4f6e6c79204b6565706572000000000000000000000000000000000000000000604082015260600190565b60208082526015908201527f54696d656c6f636b207374696c6c206c6f636b65640000000000000000000000604082015260600190565b6020808252600f908201527f696e676573747320696e76616c69640000000000000000000000000000000000604082015260600190565b60208082526018908201527f4e6f74204172626974726174696f6e5265717565737465640000000000000000604082015260600190565b6020808252600f908201527f4f6e6c792061726269747261746f720000000000000000000000000000000000604082015260600190565b6020808252600e908201527f4b656570657220696e76616c6964000000000000000000000000000000000000604082015260600190565b60208082526014908201527f4f7574636f6d65206e6f742070726f706f736564000000000000000000000000604082015260600190565b60208082526013908201527f4e6f74204f7574636f6d6550726f706f73656400000000000000000000000000604082015260600190565b60208082526014908201527f506f72742076657273696f6e20696e76616c6964000000000000000000000000604082015260600190565b60208082526016908201527f4e6f74204172626974726174696f6e50656e64696e6700000000000000000000604082015260600190565b60208082526012908201527f4f6e6c79206b65657065722f706172656e740000000000000000000000000000604082015260600190565b6020808252600e908201527f547261636b696e67496420736574000000000000000000000000000000000000604082015260600190565b60208082526013908201527f496e67657374206e6f7420646566657272656400000000000000000000000000604082015260600190565b6020808252600d908201527f6e6f7420496e6974696174656400000000000000000000000000000000000000604082015260600190565b6000608082526134e86080830187612c7f565b6001600160a01b0395861660208401529390941660408201526060015292915050565b6000848252604060208301526126ad604083018486612a10565b60006040820184835260206040818501528185518084526060860191508287019350845b8181101561226757845183529383019391830191600101613549565b600060a0825261357860a0830188612d0a565b828103602084015261358a8188612c7f565b6001600160a01b039690961660408401525050606081019290925260809091015292915050565b6000604082526135c46040830185612d0a565b90508260208301529392505050565b60006060825284356135e4816140cd565b6135f16060840182612842565b506135fe602086016121b4565b61360b6080840182612842565b50613618604086016121b4565b61362560a0840182612842565b50606085013560c083015261363d6080860186613936565b60e08085015261365261014085018284612acf565b91505061366260a08701876138ee565b605f19808685030161010087015261367b848385612937565b935061368a60c08a018a61397b565b9250808685030161012087015250506136a38282612bbe565b925050506136b46020830185612842565b826040830152949350505050565b9182526001600160a01b0316602082015260400190565b9485526001600160a01b03938416602086015291831660408501529091166060830152608082015260a00190565b6000808335601e1984360301811261371d578283fd5b83018035915067ffffffffffffffff821115613737578283fd5b602090810192508102360382131561220157600080fd5b6000808335601e19843603018112613764578283fd5b83018035915067ffffffffffffffff82111561377e578283fd5b60200191503681900382131561220157600080fd5b6000823560fe198336030181126137a8578182fd5b9190910192915050565b6000823560de198336030181126137a8578182fd5b60405181810167ffffffffffffffff811182821017156137e9576137e9613bf8565b604052919050565b600067ffffffffffffffff82111561380b5761380b613bf8565b5060209081020190565b600067ffffffffffffffff82111561382f5761382f613bf8565b50601f01601f191660200190565b60009081526020902090565b60208410801561389f57601f841160018114613870576138698685613b9e565b8355613899565b6138798361383d565b61388e6020601f8801048201600183016139f3565b506138998684613c7f565b50611ac0565b8160005260206000206020601f8701048101601f871680156138c9576138c9816000198401613c0e565b506138dc6020601f8801048301826139f3565b50506001856002021782555050505050565b6000808335601e19843603018112613904578283fd5b830160208101925035905067ffffffffffffffff81111561392457600080fd5b60208102360383131561220157600080fd5b6000808335601e1984360301811261394c578283fd5b830160208101925035905067ffffffffffffffff81111561396c57600080fd5b80360383131561220157600080fd5b6000823560fe19833603018112613990578182fd5b90910192915050565b600082198211156139ac576139ac613be2565b500190565b60008160001904831182151516156139cb576139cb613be2565b500290565b6000828210156139e2576139e2613be2565b500390565b6001600160a01b031690565b5b8181101561058f57600081556001016139f4565b613a128382613c42565b818160005260208060002060005b86811015613a3c57833582559282019260019182019101613a20565b50505050505050565b67ffffffffffffffff831115613a5d57613a5d613bf8565b613a678154613b69565b600080601f8611601f841181811715613a8657613a838661383d565b92505b8015613ab5576020601f89010483016020891015613aa15750825b613ab36020601f8801048501826139f3565b505b508060018114613ae157600094508715613ad0578387013594505b613ada8886613b9e565b8655613b33565b601f198816945082845b86811015613b0b5788860135825560209586019560019092019101613aeb565b5088861015613b2857878501356000196008601f8c16021c191681555b506001600289020186555b5050505050505050565b60005b83811015613b58578181015183820152602001613b40565b83811115610b1a5750506000910152565b600281046001821680613b7d57607f821691505b602082108114156122ea57634e487b7160e01b600052602260045260246000fd5b600019600883021c191660029091021790565b6000600019821415613bc557613bc5613be2565b5060010190565b634e487b7160e01b600052600060045260246000fd5b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b8054600019836020036008021c1681555050565b60008135613c2f816140e2565b92915050565b60008135613c2f816140f0565b68010000000000000000821115613c5b57613c5b613bf8565b80548282558083101561094557816000526020600020610b1a8282018583016139f3565b806000526020600020613c93838254613b9e565b9091556000905550565b6001600160a01b03821673ffffffffffffffffffffffffffffffffffffffff198254161781555050565b8135613cd2816140cd565b613cdc8183613c9d565b506001602080840135828401556040840135600284015560608401356003840155613d0a6080850185613707565b613d18818360048801613a08565b5050613d2760a0850185613707565b613d35818360058801613a08565b505060068301613d4860c0860186613707565b68010000000000000000811115613d6157613d61613bf8565b825481845580821015613d9c5760008481528581208381019083015b80821015613d9857613d8f8383613c42565b90880190613d7d565b5050505b5081613da78461383d565b93506000805b83811015613ddc57613dbf8386613707565b613dcb8183868b614005565b505094870194918601918701613dad565b5050505050505050613df160e083018361374e565b610b1a818360078601613a45565b8135613e0a816140cd565b613e148183613c9d565b506001602080840135613e26816140cd565b613e3281848601613c9d565b5060026040850135613e43816140cd565b613e4f81838701613c9d565b5060036060860135818601556004613e6a608088018861374e565b613e778183858b01613a45565b50506005808701613e8b60a08a018a613707565b68010000000000000000811115613ea457613ea4613bf8565b825481845580821015613f6c577f33333333333333333333333333333333333333333333333333333333333333338082118b1615613ee457613ee4613be2565b8083118b1615613ef657613ef6613be2565b506000848152898120838702810190878402015b80821015613f6857613f1d8384846140ae565b828d830155613f2f83848d85016140ae565b613f3c83848c85016140ae565b8882018054613f4a81613b69565b8015613f5c57613f5c86828486613849565b50505090870190613f0a565b5050505b50819650613f798361383d565b9550600094508492505b80831015613fb057613f9f613f9888846137b2565b868861401e565b958701959483019491880191613f83565b50505050505050505061058f613fc960c0840184613793565b60068301613cc7565b805461ff00191691151560081b61ff0016919091179055565b805462ff00008360101b1662ff0000198216178255505050565b811561401357614013613bcc565b610b1a848483613a08565b811561402c5761402c613bcc565b82358155600181016020840135614042816140e2565b815490151560ff1660ff199190911617815561406961406360408601613c22565b82613fd2565b61407e61407860608601613c35565b82613feb565b506080830135600282015560a083013560038201556140a060c084018461374e565b611ac0818360048601613a45565b805460088302600019811b8086831b1681198416178455505050505050565b6001600160a01b038116811461179657600080fd5b801515811461179657600080fd5b60ff8116811461179657600080fdfea2646970667358221220ad837f4e010afb2997cdaad9476dbf138b3b3991264130585152e855380aa9ab64736f6c63430008000033";

export class BasicSolverV1__factory extends ContractFactory {
  constructor(
    linkLibraryAddresses: BasicSolverV1LibraryAddresses,
    signer?: Signer
  ) {
    super(
      _abi,
      BasicSolverV1__factory.linkBytecode(linkLibraryAddresses),
      signer
    );
  }

  static linkBytecode(
    linkLibraryAddresses: BasicSolverV1LibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$94d7d2f22770e4b0d1a2b99fb2812308e2\\$__", "g"),
      linkLibraryAddresses["__$94d7d2f22770e4b0d1a2b99fb2812308e2$__"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BasicSolverV1> {
    return super.deploy(overrides || {}) as Promise<BasicSolverV1>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BasicSolverV1 {
    return super.attach(address) as BasicSolverV1;
  }
  connect(signer: Signer): BasicSolverV1__factory {
    return super.connect(signer) as BasicSolverV1__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BasicSolverV1Interface {
    return new utils.Interface(_abi) as BasicSolverV1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BasicSolverV1 {
    return new Contract(address, _abi, signerOrProvider) as BasicSolverV1;
  }
}

export interface BasicSolverV1LibraryAddresses {
  ["__$94d7d2f22770e4b0d1a2b99fb2812308e2$__"]: string;
}
