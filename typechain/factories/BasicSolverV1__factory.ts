/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BasicSolverV1, BasicSolverV1Interface } from "../BasicSolverV1";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_key",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "addData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "addressFromChainIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "payouts",
        type: "uint256[]",
      },
    ],
    name: "arbitrate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "arbitrateNull",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "arbitrationPending",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "arbitrationRequested",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "chainChild",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "chainIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "chainParent",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "conditions",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "collateralToken",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "questionId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "parentCollectionId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "conditionId",
        type: "bytes32",
      },
      {
        internalType: "enum SolverLib.Status",
        name: "status",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "config",
    outputs: [
      {
        internalType: "contract Solver",
        name: "implementation",
        type: "address",
      },
      {
        internalType: "address",
        name: "keeper",
        type: "address",
      },
      {
        internalType: "address",
        name: "arbitrator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "timelockSeconds",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "contract IERC20",
            name: "collateralToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "outcomeSlots",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "parentCollectionIndexSet",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountSlot",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "partition",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "recipientAddressSlots",
            type: "uint256[]",
          },
          {
            internalType: "uint256[][]",
            name: "recipientAmountSlots",
            type: "uint256[][]",
          },
          {
            internalType: "string",
            name: "conditionURI",
            type: "string",
          },
        ],
        internalType: "struct SolverLib.ConditionBase",
        name: "conditionBase",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "confirmPayouts",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract Solver",
            name: "implementation",
            type: "address",
          },
          {
            internalType: "address",
            name: "keeper",
            type: "address",
          },
          {
            internalType: "address",
            name: "arbitrator",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "timelockSeconds",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "executions",
                type: "uint256",
              },
              {
                internalType: "enum SolverLib.IngestType",
                name: "ingestType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "key",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "solverIndex",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct SolverLib.Ingest[]",
            name: "ingests",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "contract IERC20",
                name: "collateralToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "outcomeSlots",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "parentCollectionIndexSet",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountSlot",
                type: "uint256",
              },
              {
                internalType: "uint256[]",
                name: "partition",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "recipientAddressSlots",
                type: "uint256[]",
              },
              {
                internalType: "uint256[][]",
                name: "recipientAmountSlots",
                type: "uint256[][]",
              },
              {
                internalType: "string",
                name: "conditionURI",
                type: "string",
              },
            ],
            internalType: "struct SolverLib.ConditionBase",
            name: "conditionBase",
            type: "tuple",
          },
        ],
        internalType: "struct SolverLib.Config",
        name: "_config",
        type: "tuple",
      },
    ],
    name: "deployChild",
    outputs: [
      {
        internalType: "contract Solver",
        name: "_solver",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "executeSolve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "token",
        type: "uint256",
      },
    ],
    name: "getCTBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getConditions",
    outputs: [
      {
        components: [
          {
            internalType: "contract IERC20",
            name: "collateralToken",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "questionId",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "parentCollectionId",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "conditionId",
            type: "bytes32",
          },
          {
            internalType: "uint256[]",
            name: "payouts",
            type: "uint256[]",
          },
          {
            internalType: "enum SolverLib.Status",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct SolverLib.Condition[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_key",
        type: "uint256",
      },
    ],
    name: "getOutput",
    outputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_slot",
        type: "uint256",
      },
    ],
    name: "handleCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "ingestsValid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_chainParent",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_chainIndex",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "contract Solver",
            name: "implementation",
            type: "address",
          },
          {
            internalType: "address",
            name: "keeper",
            type: "address",
          },
          {
            internalType: "address",
            name: "arbitrator",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "timelockSeconds",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "executions",
                type: "uint256",
              },
              {
                internalType: "enum SolverLib.IngestType",
                name: "ingestType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "key",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "solverIndex",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct SolverLib.Ingest[]",
            name: "ingests",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "contract IERC20",
                name: "collateralToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "outcomeSlots",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "parentCollectionIndexSet",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountSlot",
                type: "uint256",
              },
              {
                internalType: "uint256[]",
                name: "partition",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "recipientAddressSlots",
                type: "uint256[]",
              },
              {
                internalType: "uint256[][]",
                name: "recipientAmountSlots",
                type: "uint256[][]",
              },
              {
                internalType: "string",
                name: "conditionURI",
                type: "string",
              },
            ],
            internalType: "struct SolverLib.ConditionBase",
            name: "conditionBase",
            type: "tuple",
          },
        ],
        internalType: "struct SolverLib.Config",
        name: "_solverConfig",
        type: "tuple",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "parentPositionId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "prepareSolve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_payouts",
        type: "uint256[]",
      },
    ],
    name: "proposePayouts",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_collateralToken",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_parentCollectionId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_conditionId",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "_indexSets",
        type: "uint256[]",
      },
    ],
    name: "redeemPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_slot",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_chainIndex",
        type: "uint256",
      },
    ],
    name: "registerCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_trackingId",
        type: "bytes32",
      },
    ],
    name: "setTrackingId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "timelock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "trackingId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061477c806100206000396000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c806379502c551161010f578063a9747026116100a2578063d33219b411610071578063d33219b41461041a578063d8b6231614610422578063ea8221a914610435578063f23a6e611461043d576101e5565b8063a9747026146103c1578063b992db0f146103d4578063bc197c81146103e7578063c247bcb314610407576101e5565b806387dfee57116100de57806387dfee571461038057806399992506146103935780639f9ecd5c1461039b578063a072d7b0146103ae576101e5565b806379502c55146103365780637c1236271461035057806380b204b71461036557806380c2dde214610378576101e5565b806326eff66a116101875780634dab5e69116101565780634dab5e69146102f55780634e46f2231461030857806355dd978b1461031b5780635d46fd0c14610323576101e5565b806326eff66a146102a55780633837b05e146102ba57806348cbb2fc146102da5780634a77234e146102e2576101e5565b80630d8d3975116101c35780630d8d39751461023b57806317861f871461024e578063187825591461026e57806326c5000714610281576101e5565b806301ffc9a7146101ea57806307c068b6146102135780630d06101a14610228575b600080fd5b6101fd6101f8366004612b3e565b610450565b60405161020a91906135b7565b60405180910390f35b610226610221366004612b26565b610496565b005b610226610236366004612b26565b6105de565b610226610249366004612b26565b610603565b61026161025c366004612b26565b610731565b60405161020a91906135e0565b61022661027c366004612bd9565b610801565b61029461028f366004612b26565b6108bc565b60405161020a95949392919061362d565b6102ad61090a565b60405161020a91906135c2565b6102cd6102c8366004612b26565b610910565b60405161020a91906133ec565b6102ad6109f2565b6102266102f0366004612b26565b6109f8565b610226610303366004612b26565b610af2565b610226610316366004612b26565b610bcc565b6102cd610ca6565b610226610331366004612aaf565b610cb5565b61033e610de4565b60405161020a96959493929190613660565b6103586110b3565b60405161020a919061345f565b610226610373366004612d53565b6111e2565b6102cd611327565b61022661038e366004612d9d565b61133b565b6101fd611496565b6102cd6103a9366004612d00565b611543565b6102266103bc366004612b26565b61163b565b6102266103cf366004612eb8565b611980565b6102266103e2366004612b26565b6119ea565b6103fa6103f5366004612941565b611d05565b60405161020a91906135cb565b6102ad610415366004612b26565b611d32565b6102ad611dd5565b610226610430366004612e39565b611ddb565b6102ad611e13565b6103fa61044b3660046129fc565b611e19565b60006001600160e01b031982167f4e2312e000000000000000000000000000000000000000000000000000000000148061048e575061048e82611e45565b90505b919050565b6003546001600160a01b031633146104c95760405162461bcd60e51b81526004016104c0906139fc565b60405180910390fd5b6003600f82815481106104ec57634e487b7160e01b600052603260045260246000fd5b600091825260209091206006918202016005015460ff169081111561052157634e487b7160e01b600052602160045260246000fd5b1461053e5760405162461bcd60e51b81526004016104c090613931565b73__$94d7d2f22770e4b0d1a2b99fb2812308e2$__63ec7ac2f0600f838154811061057957634e487b7160e01b600052603260045260246000fd5b90600052602060002090600602016040518263ffffffff1660e01b81526004016105a391906135c2565b60006040518083038186803b1580156105bb57600080fd5b505af41580156105cf573d6000803e3d6000fd5b505050506105db611e77565b50565b601654156105fe5760405162461bcd60e51b81526004016104c090613b46565b601655565b60145442116106245760405162461bcd60e51b81526004016104c0906138c3565b6002600f828154811061064757634e487b7160e01b600052603260045260246000fd5b600091825260209091206006918202016005015460ff169081111561067c57634e487b7160e01b600052602160045260246000fd5b146106995760405162461bcd60e51b81526004016104c090613a6a565b73__$94d7d2f22770e4b0d1a2b99fb2812308e2$__63696d4661600f83815481106106d457634e487b7160e01b600052603260045260246000fd5b90600052602060002090600602016040518263ffffffff1660e01b81526004016106fe91906135c2565b60006040518083038186803b15801561071657600080fd5b505af415801561072a573d6000803e3d6000fd5b5050505050565b600f546000828152601a6020526040902054606091146107635760405162461bcd60e51b81526004016104c0906139c5565b6000828152601960205260409020805461077c90614226565b80601f01602080910402602001604051908101604052809291908181526020018280546107a890614226565b80156107f55780601f106107ca576101008083540402835291602001916107f5565b820191906000526020600020905b8154815290600101906020018083116107d857829003601f168201915b50505050509050919050565b6002546001600160a01b0316331461082b5760405162461bcd60e51b81526004016104c09061388c565b6040517f01b7037c000000000000000000000000000000000000000000000000000000008152735fbdb2315678afecb367f032d93f642f64180aa3906301b7037c9061088390889088908890889088906004016135f3565b600060405180830381600087803b15801561089d57600080fd5b505af11580156108b1573d6000803e3d6000fd5b505050505050505050565b600f81815481106108cc57600080fd5b6000918252602090912060069091020180546001820154600283015460038401546005909401546001600160a01b0390931694509092909160ff1685565b60155481565b6000601354821415610923575030610491565b6013548210156109b857601154604051631c1bd82f60e11b81526101009091046001600160a01b031690633837b05e906109619085906004016135c2565b60206040518083038186803b15801561097957600080fd5b505afa15801561098d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b19190612925565b9050610491565b60135482111561049157601254604051631c1bd82f60e11b81526001600160a01b0390911690633837b05e906109619085906004016135c2565b60165481565b60115460ff1615610a4c576002546001600160a01b0316331480610a2b575060115461010090046001600160a01b031633145b610a475760405162461bcd60e51b81526004016104c090613b0f565b610a5a565b6011805460ff191660011790555b610a62611e94565b610a6a611fff565b6012546001600160a01b0316156105db576012546040517f4a77234e0000000000000000000000000000000000000000000000000000000081526001600160a01b0390911690634a77234e90610ac49084906004016135c2565b600060405180830381600087803b158015610ade57600080fd5b505af115801561072a573d6000803e3d6000fd5b6003546001600160a01b03163314610b1c5760405162461bcd60e51b81526004016104c0906139fc565b6002600f8281548110610b3f57634e487b7160e01b600052603260045260246000fd5b600091825260209091206006918202016005015460ff1690811115610b7457634e487b7160e01b600052602160045260246000fd5b14610b915760405162461bcd60e51b81526004016104c090613aa1565b73__$94d7d2f22770e4b0d1a2b99fb2812308e2$__6324b28602600f838154811061057957634e487b7160e01b600052603260045260246000fd5b6003546001600160a01b03163314610bf65760405162461bcd60e51b81526004016104c0906139fc565b6004600f8281548110610c1957634e487b7160e01b600052603260045260246000fd5b600091825260209091206006918202016005015460ff1690811115610c4e57634e487b7160e01b600052602160045260246000fd5b14610c6b5760405162461bcd60e51b81526004016104c090613ad8565b73__$94d7d2f22770e4b0d1a2b99fb2812308e2$__6359111fb5600f838154811061057957634e487b7160e01b600052603260045260246000fd5b6012546001600160a01b031681565b600054610100900460ff1680610cce575060005460ff16155b610cea5760405162461bcd60e51b81526004016104c090613968565b600054610100900460ff16158015610d15576000805460ff1961ff0019909116610100171660011790555b3373e7f1725e7734ce288f8367e1bb143e90bb3f051214610d485760405162461bcd60e51b81526004016104c090613855565b6000610d5a6040840160208501612902565b6001600160a01b03161415610d815760405162461bcd60e51b81526004016104c090613a33565b601180547fffffffffffffffffffffff0000000000000000000000000000000000000000ff166101006001600160a01b038716021790556013839055816001610dca82826144a5565b50508015610dde576000805461ff00191690555b50505050565b60018054600254600354600454600580546001600160a01b039586169694861695909316939192610e1490614226565b80601f0160208091040260200160405190810160405280929190818152602001828054610e4090614226565b8015610e8d5780601f10610e6257610100808354040283529160200191610e8d565b820191906000526020600020905b815481529060010190602001808311610e7057829003601f168201915b505060408051610100810182526006870180546001600160a01b03168252600788015460208084019190915260088901548385015260098901546060840152600a89018054855181840281018401909652808652989998939750919550608087019450909190830182828015610f2257602002820191906000526020600020905b815481526020019060010190808311610f0e575b5050505050815260200160058201805480602002602001604051908101604052809291908181526020018280548015610f7a57602002820191906000526020600020905b815481526020019060010190808311610f66575b5050505050815260200160068201805480602002602001604051908101604052809291908181526020016000905b828210156110145760008481526020908190208301805460408051828502810185019091528181529283018282801561100057602002820191906000526020600020905b815481526020019060010190808311610fec575b505050505081526020019060010190610fa8565b50505050815260200160078201805461102c90614226565b80601f016020809104026020016040519081016040528092919081815260200182805461105890614226565b80156110a55780601f1061107a576101008083540402835291602001916110a5565b820191906000526020600020905b81548152906001019060200180831161108857829003601f168201915b505050505081525050905086565b6060600f805480602002602001604051908101604052809291908181526020016000905b828210156111d95760008481526020908190206040805160c0810182526006860290920180546001600160a01b03168352600181015483850152600281015483830152600381015460608401526004810180548351818702810187019094528084529394919360808601939283018282801561117257602002820191906000526020600020905b81548152602001906001019080831161115e575b5050509183525050600582015460209091019060ff1660068111156111a757634e487b7160e01b600052602160045260246000fd5b60068111156111c657634e487b7160e01b600052602160045260246000fd5b81525050815260200190600101906110d7565b50505050905090565b6002546001600160a01b0316331461120c5760405162461bcd60e51b81526004016104c09061388c565b6001600f848154811061122f57634e487b7160e01b600052603260045260246000fd5b600091825260209091206006918202016005015460ff169081111561126457634e487b7160e01b600052602160045260246000fd5b146112815760405162461bcd60e51b81526004016104c0906137e7565b73__$94d7d2f22770e4b0d1a2b99fb2812308e2$__636a0a24f1600f85815481106112bc57634e487b7160e01b600052603260045260246000fd5b906000526020600020906006020184846040518463ffffffff1660e01b81526004016112ea93929190613c21565b60006040518083038186803b15801561130257600080fd5b505af4158015611316573d6000803e3d6000fd5b50505050611322611e77565b505050565b60115461010090046001600160a01b031681565b6003546001600160a01b031633146113655760405162461bcd60e51b81526004016104c0906139fc565b6004600f838154811061138857634e487b7160e01b600052603260045260246000fd5b600091825260209091206006918202016005015460ff16908111156113bd57634e487b7160e01b600052602160045260246000fd5b146113da5760405162461bcd60e51b81526004016104c090613ad8565b60145442116113fb5760405162461bcd60e51b81526004016104c0906138c3565b73__$94d7d2f22770e4b0d1a2b99fb2812308e2$__6311ca1ac0600f848154811061143657634e487b7160e01b600052603260045260246000fd5b9060005260206000209060060201836040518363ffffffff1660e01b8152600401611462929190613c3b565b60006040518083038186803b15801561147a57600080fd5b505af415801561148e573d6000803e3d6000fd5b505050505050565b600f546040517f5cc1f6b500000000000000000000000000000000000000000000000000000000815260009173__$94d7d2f22770e4b0d1a2b99fb2812308e2$__91635cc1f6b5916114ee9160069190600401613511565b60206040518083038186803b15801561150657600080fd5b505af415801561151a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061153e9190612b06565b905090565b6012546000906001600160a01b03161561156f5760405162461bcd60e51b81526004016104c0906137b0565b6013546040517f4dd0aa4900000000000000000000000000000000000000000000000000000000815273__$94d7d2f22770e4b0d1a2b99fb2812308e2$__91634dd0aa49916115c5918691309190600401613cc7565b604080518083038186803b1580156115dc57600080fd5b505af41580156115f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116149190612a76565b601280546001600160a01b0319166001600160a01b03939093169290921790915592915050565b600033826040516020016116509291906133ca565b60408051601f19818403018152918152815160209283012060008181526018909352912054600680549293506116b692909190811061169f57634e487b7160e01b600052603260045260246000fd5b906000526020600020906005020160030154610910565b6001600160a01b0316336001600160a01b0316146116e65760405162461bcd60e51b81526004016104c09061381e565b60008181526018602052604081205460068054909190811061171857634e487b7160e01b600052603260045260246000fd5b600091825260209091206001600590920201015460ff16600281111561174e57634e487b7160e01b600052602160045260246000fd5b1461176b5760405162461bcd60e51b81526004016104c090613779565b60008181526018602052604090205460068054909190811061179d57634e487b7160e01b600052603260045260246000fd5b6000918252602082206005909102018054916117b88361426e565b90915550506000818152601860205260409020546006805461196e929081106117f157634e487b7160e01b600052603260045260246000fd5b906000526020600020906005020160020154336001600160a01b03166317861f87600160050160176001016000878152602001908152602001600020548154811061184c57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060050201600401805461186890614226565b80601f016020809104026020016040519081016040528092919081815260200182805461189490614226565b80156118e15780601f106118b6576101008083540402835291602001916118e1565b820191906000526020600020905b8154815290600101906020018083116118c457829003601f168201915b50505050508060200190518101906118f99190612d3b565b6040518263ffffffff1660e01b815260040161191591906135c2565b60006040518083038186803b15801561192d57600080fd5b505afa158015611941573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526119699190810190612b66565b6123b8565b60009081526018602052604081205550565b61198981610910565b6001600160a01b0316336001600160a01b0316146119b95760405162461bcd60e51b81526004016104c09061381e565b5060009081526017602090815260408220805460018101825590835291200180546001600160a01b03191633179055565b6000600f8281548110611a0d57634e487b7160e01b600052603260045260246000fd5b600091825260209091206006918202016005015460ff1690811115611a4257634e487b7160e01b600052602160045260246000fd5b14611a5f5760405162461bcd60e51b81526004016104c090613bb4565b611a67611496565b611a835760405162461bcd60e51b81526004016104c0906138fa565b6001600f8281548110611aa657634e487b7160e01b600052603260045260246000fd5b906000526020600020906006020160050160006101000a81548160ff02191690836006811115611ae657634e487b7160e01b600052602160045260246000fd5b021790555073__$94d7d2f22770e4b0d1a2b99fb2812308e2$__631e85323f601160019054906101000a90046001600160a01b03166001600601600f8581548110611b4157634e487b7160e01b600052603260045260246000fd5b60009182526020808320600a54845260199091526040909220805460069092029092019190611b6f90614226565b80601f0160208091040260200160405190810160405280929190818152602001828054611b9b90614226565b8015611be85780601f10611bbd57610100808354040283529160200191611be8565b820191906000526020600020905b815481529060010190602001808311611bcb57829003601f168201915b5050505050806020019051810190611c009190612d3b565b6040518563ffffffff1660e01b8152600401611c1f9493929190613400565b60006040518083038186803b158015611c3757600080fd5b505af4158015611c4b573d6000803e3d6000fd5b5050505073__$94d7d2f22770e4b0d1a2b99fb2812308e2$__6336696828600f8381548110611c8a57634e487b7160e01b600052603260045260246000fd5b906000526020600020906006020160016006013060196016546040518663ffffffff1660e01b8152600401611cc3959493929190613c7b565b60006040518083038186803b158015611cdb57600080fd5b505af4158015611cef573d6000803e3d6000fd5b50505050611cfc816105db565b6105db8161243b565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b6040517efdd58e000000000000000000000000000000000000000000000000000000008152600090735fbdb2315678afecb367f032d93f642f64180aa39062fdd58e90611d859030908690600401613446565b60206040518083038186803b158015611d9d57600080fd5b505afa158015611db1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048e9190612d3b565b60145481565b6002546001600160a01b03163314611e055760405162461bcd60e51b81526004016104c090613742565b611e0f82826123b8565b5050565b60135481565b7ff23a6e61000000000000000000000000000000000000000000000000000000005b9695505050505050565b6001600160e01b031981167f01ffc9a70000000000000000000000000000000000000000000000000000000014919050565b600454611e8590600161406e565b611e8f9042614056565b601455565b601154600f80546040517f5069a07c000000000000000000000000000000000000000000000000000000008152919273__$94d7d2f22770e4b0d1a2b99fb2812308e2$__92635069a07c92611f00926007926101009091046001600160a01b0316913091600401613beb565b60006040518083038186803b158015611f1857600080fd5b505af4158015611f2c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611f549190810190612c41565b8154600180820184556000938452602093849020835160069093020180546001600160a01b0319166001600160a01b03909316929092178255828401519082015560408201516002820155606082015160038201556080820151805192939192611fc492600485019201906126fe565b5060a082015160058201805460ff19166001836006811115611ff657634e487b7160e01b600052602160045260246000fd5b02179055505050565b60005b6006548110156105db576000600680548390811061203057634e487b7160e01b600052603260045260246000fd5b600091825260209091206001600590920201015460ff16600281111561206657634e487b7160e01b600052602160045260246000fd5b146120aa576120a56001600501828154811061209257634e487b7160e01b600052603260045260246000fd5b9060005260206000209060050201612524565b6123a6565b6000306001600160a01b0316633837b05e600160050184815481106120df57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060050201600301546040518263ffffffff1660e01b815260040161210d91906135c2565b60206040518083038186803b15801561212557600080fd5b505afa158015612139573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061215d9190612925565b90508160176001016000836001600501868154811061218c57634e487b7160e01b600052603260045260246000fd5b906000526020600020906005020160040180546121a890614226565b80601f01602080910402602001604051908101604052809291908181526020018280546121d490614226565b80156122215780601f106121f657610100808354040283529160200191612221565b820191906000526020600020905b81548152906001019060200180831161220457829003601f168201915b50505050508060200190518101906122399190612d3b565b60405160200161224a9291906133ca565b60405160208183030381529060405280519060200120815260200190815260200160002081905550806001600160a01b031663a9747026600160050184815481106122a557634e487b7160e01b600052603260045260246000fd5b906000526020600020906005020160040180546122c190614226565b80601f01602080910402602001604051908101604052809291908181526020018280546122ed90614226565b801561233a5780601f1061230f5761010080835404028352916020019161233a565b820191906000526020600020905b81548152906001019060200180831161231d57829003601f168201915b50505050508060200190518101906123529190612d3b565b6013546040518363ffffffff1660e01b8152600401612372929190613db6565b600060405180830381600087803b15801561238c57600080fd5b505af11580156123a0573d6000803e3d6000fd5b50505050505b806123b08161426e565b915050612002565b600f546123c79060019061408d565b6000838152601a6020526040902054146123f35760405162461bcd60e51b81526004016104c090613b7d565b6000828152601a6020526040812080549161240d8361426e565b90915550506000828152601960209081526040909120825161243192840190612749565b50611e0f8261258f565b6012546001600160a01b0316158015906124d65750601260009054906101000a90046001600160a01b03166001600160a01b031663999925066040518163ffffffff1660e01b815260040160206040518083038186803b15801561249e57600080fd5b505afa1580156124b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124d69190612b06565b156105db576012546040517fb992db0f0000000000000000000000000000000000000000000000000000000081526001600160a01b039091169063b992db0f90610ac49084906004016135c2565b6105db816002015473__$94d7d2f22770e4b0d1a2b99fb2812308e2$__63b3d73707846040518263ffffffff1660e01b815260040161256391906135c2565b60006040518083038186803b15801561257b57600080fd5b505af4158015611941573d6000803e3d6000fd5b60005b600082815260176020526040902054811015611e0f5760008281526017602052604081208054839081106125d657634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b0316146126ec57600082815260176020526040902080548290811061261e57634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546040517fa072d7b00000000000000000000000000000000000000000000000000000000081526001600160a01b039091169063a072d7b0906126709085906004016135c2565b600060405180830381600087803b15801561268a57600080fd5b505af115801561269e573d6000803e3d6000fd5b50505060008381526017602052604090208054909150829081106126d257634e487b7160e01b600052603260045260246000fd5b600091825260209091200180546001600160a01b03191690555b806126f68161426e565b915050612592565b828054828255906000526020600020908101928215612739579160200282015b8281111561273957825182559160200191906001019061271e565b506127459291506127bc565b5090565b82805461275590614226565b90600052602060002090601f0160209004810192826127775760008555612739565b82601f1061279057805160ff1916838001178555612739565b82800160010185558215612739579182018281111561273957825182559160200191906001019061271e565b5b8082111561274557600081556001016127bd565b803561049181614724565b60008083601f8401126127ed578182fd5b50813567ffffffffffffffff811115612804578182fd5b602083019150836020808302850101111561281e57600080fd5b9250929050565b600082601f830112612835578081fd5b8151602061284a61284583613eae565b613e84565b8281528181019085830183850287018401881015612866578586fd5b855b8581101561288457815184529284019290840190600101612868565b5090979650505050505050565b60008083601f8401126128a2578182fd5b50813567ffffffffffffffff8111156128b9578182fd5b60208301915083602082850101111561281e57600080fd5b805161049181614724565b80516007811061049157600080fd5b600060e082840312156128fc578081fd5b50919050565b600060208284031215612913578081fd5b813561291e81614724565b9392505050565b600060208284031215612936578081fd5b815161291e81614724565b60008060008060008060008060a0898b03121561295c578384fd5b883561296781614724565b9750602089013561297781614724565b9650604089013567ffffffffffffffff80821115612993578586fd5b61299f8c838d016127dc565b909850965060608b01359150808211156129b7578586fd5b6129c38c838d016127dc565b909650945060808b01359150808211156129db578384fd5b506129e88b828c01612891565b999c989b5096995094979396929594505050565b60008060008060008060a08789031215612a14578384fd5b8635612a1f81614724565b95506020870135612a2f81614724565b94506040870135935060608701359250608087013567ffffffffffffffff811115612a58578283fd5b612a6489828a01612891565b979a9699509497509295939492505050565b60008060408385031215612a88578182fd5b8251612a9381614724565b6020840151909250612aa481614724565b809150509250929050565b600080600060608486031215612ac3578081fd5b8335612ace81614724565b925060208401359150604084013567ffffffffffffffff811115612af0578182fd5b612afc868287016128eb565b9150509250925092565b600060208284031215612b17578081fd5b8151801515811461291e578182fd5b600060208284031215612b37578081fd5b5035919050565b600060208284031215612b4f578081fd5b81356001600160e01b03198116811461291e578182fd5b600060208284031215612b77578081fd5b815167ffffffffffffffff811115612b8d578182fd5b8201601f81018413612b9d578182fd5b8051612bab61284582613ed2565b818152856020838501011115612bbf578384fd5b612bd08260208301602086016141fa565b95945050505050565b600080600080600060808688031215612bf0578283fd5b8535612bfb81614724565b94506020860135935060408601359250606086013567ffffffffffffffff811115612c24578182fd5b612c30888289016127dc565b969995985093965092949392505050565b600060208284031215612c52578081fd5b815167ffffffffffffffff80821115612c69578283fd5b9083019060c08286031215612c7c578283fd5b60405160c081018181108382111715612c9757612c976142cb565b604052612ca3836128d1565b8152602083015160208201526040830151604082015260608301516060820152608083015182811115612cd4578485fd5b612ce087828601612825565b608083015250612cf260a084016128dc565b60a082015295945050505050565b600060208284031215612d11578081fd5b813567ffffffffffffffff811115612d27578182fd5b612d33848285016128eb565b949350505050565b600060208284031215612d4c578081fd5b5051919050565b600080600060408486031215612d67578081fd5b83359250602084013567ffffffffffffffff811115612d84578182fd5b612d90868287016127dc565b9497909650939450505050565b60008060408385031215612daf578182fd5b8235915060208084013567ffffffffffffffff811115612dcd578283fd5b8401601f81018613612ddd578283fd5b8035612deb61284582613eae565b81815283810190838501858402850186018a1015612e07578687fd5b8694505b83851015612e29578035835260019490940193918501918501612e0b565b5080955050505050509250929050565b60008060408385031215612e4b578182fd5b82359150602083013567ffffffffffffffff811115612e68578182fd5b8301601f81018513612e78578182fd5b8035612e8661284582613ed2565b818152866020838501011115612e9a578384fd5b81602084016020830137908101602001929092525090939092509050565b60008060408385031215612eca578182fd5b50508035926020909101359150565b6001600160a01b03169052565b818352602080840193600091908185020181018584845b87811015612f33578284038952612f148288613fab565b612f1f868284613073565b9a87019a9550505090840190600101612efd565b5091979650505050505050565b6000815180845260208085018081965082840281019150828601855b85811015612f33578284038952612f748483516130c0565b98850198935090840190600101612f5c565b6000815480845260208085018081965082840281019150858552828520855b85811015612f33578284038952612fbc84836130fa565b98850198935060019182019101612fa5565b818352602080840193600091908185020181018584845b87811015612f335782840389528135609e19883603018112613005578687fd5b87018035855260a08682013561301a81614739565b613026888801826131f9565b506040828101359087015260608083013590870152608061304981840184613ff3565b9350828289015261305d838901858361312c565b9c89019c97505050928601925050600101612fe5565b60008284527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8311156130a4578081fd5b6020830280836020870137939093016020019283525090919050565b6000815180845260208085019450808401835b838110156130ef578151875295820195908201906001016130d3565b509495945050505050565b6000815480845260208085019450838352808320835b838110156130ef57815487529582019560019182019101613110565b60008284528282602086013780602084860101526020601f19601f85011685010190509392505050565b6000815180845261316e8160208601602086016141fa565b601f01601f19169290920160200192915050565b6000815461318f81614226565b8085526020600183811680156131ac57600181146131c0576131ee565b60ff198516888401526040880195506131ee565b866000528260002060005b858110156131e65781548a82018601529083019084016131cb565b890184019650505b505050505092915050565b60038110613209576132096142b5565b9052565b60078110613209576132096142b5565b60006101006132348461322f856127d1565b612ed9565b60208301356020850152604083013560408501526060830135606085015261325f6080840184613fab565b8260808701526132728387018284613073565b9250505061328360a0840184613fab565b85830360a0870152613296838284613073565b925050506132a760c0840184613fab565b85830360c08701526132ba838284612ee6565b925050506132cb60e0840184613ff3565b85830360e0870152611e3b83828461312c565b60006101006132f18461322f85546140a4565b600183015460208501526002830154604085015260038301546060850152806080850152613324818501600485016130fa565b905083810360a085015261333b81600585016130fa565b905083810360c08501526133528160068501612f86565b905083810360e0850152612d338160078501613182565b60006001600160a01b03825416835260018201546020840152600282015460408401526003820154606084015260c060808401526133ad60c08401600484016130fa565b60ff6005840154166133c260a086018261320d565b509392505050565b60609290921b6bffffffffffffffffffffffff19168252601482015260340190565b6001600160a01b0391909116815260200190565b60006001600160a01b03861682526080602083015261342260808301866132de565b82810360408401526134348186613369565b91505082606083015295945050505050565b6001600160a01b03929092168252602082015260400190565b60208082528251828201819052600091906040908185019080840286018301878501865b8381101561350357603f19898403018552815160c06001600160a01b03825116855288820151898601528782015188860152606080830151818701525060808083015182828801526134d7838801826130c0565b9250505060a08083015192506134ef8187018461320d565b509588019593505090860190600101613483565b509098975050505050505050565b60006040808301818452808654808352606092508286019150602083818302880101898752818720875b848110156135a457605f198a840301865260a08254845260ff600184015416613566868601826131f9565b5060028301548985015260038301548885015280608085015261358e81850160048501613182565b968501969350506005919091019060010161353b565b5050960196909652509295945050505050565b901515815260200190565b90815260200190565b6001600160e01b031991909116815260200190565b60006020825261291e6020830184613156565b60006001600160a01b038716825285602083015284604083015260806060830152613622608083018486613073565b979650505050505050565b600060a0820190506001600160a01b0387168252856020830152846040830152836060830152611e3b608083018461320d565b60006001600160a01b038089168352808816602084015280871660408401525084606083015260c0608083015261369a60c0830185613156565b82810360a08401526101006136b0828651612ed9565b60208501516020830152604085015160408301526060850151606083015260808501518160808401526136e5828401826130c0565b91505060a085015182820360a08401526136ff82826130c0565b91505060c085015182820360c08401526137198282612f40565b91505060e085015182820360e08401526137338282613156565b9b9a5050505050505050505050565b6020808252600a908201527f4f6e6c794b656570657200000000000000000000000000000000000000000000604082015260600190565b60208082526013908201527f496e67657374206e6f742043616c6c6261636b00000000000000000000000000604082015260600190565b60208082526010908201527f536f6c76657220686173206368696c6400000000000000000000000000000000604082015260600190565b60208082526016908201527f436f6e646974696f6e206e6f7420457865637574656400000000000000000000604082015260600190565b60208082526015908201527f6d73672e73656e646572206e6f7420736f6c7665720000000000000000000000604082015260600190565b6020808252600c908201527f4f6e6c7920666163746f72790000000000000000000000000000000000000000604082015260600190565b6020808252600b908201527f4f6e6c79204b6565706572000000000000000000000000000000000000000000604082015260600190565b60208082526015908201527f54696d656c6f636b207374696c6c206c6f636b65640000000000000000000000604082015260600190565b6020808252600f908201527f696e676573747320696e76616c69640000000000000000000000000000000000604082015260600190565b60208082526018908201527f4e6f74204172626974726174696f6e5265717565737465640000000000000000604082015260600190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201527f647920696e697469616c697a6564000000000000000000000000000000000000606082015260800190565b60208082526011908201527f536c6f7420696e76616c6964207665722e000000000000000000000000000000604082015260600190565b6020808252600f908201527f4f6e6c792061726269747261746f720000000000000000000000000000000000604082015260600190565b6020808252600e908201527f4b656570657220696e76616c6964000000000000000000000000000000000000604082015260600190565b60208082526014908201527f4f7574636f6d65206e6f742070726f706f736564000000000000000000000000604082015260600190565b60208082526013908201527f4e6f74204f7574636f6d6550726f706f73656400000000000000000000000000604082015260600190565b60208082526016908201527f4e6f74204172626974726174696f6e50656e64696e6700000000000000000000604082015260600190565b60208082526012908201527f4f6e6c79206b65657065722f706172656e740000000000000000000000000000604082015260600190565b6020808252600e908201527f547261636b696e67496420736574000000000000000000000000000000000000604082015260600190565b60208082526014908201527f536c6f742076657273696f6e20696e76616c6964000000000000000000000000604082015260600190565b6020808252600d908201527f6e6f7420496e6974696174656400000000000000000000000000000000000000604082015260600190565b600060808252613bfe60808301876132de565b6001600160a01b0395861660208401529390941660408201526060015292915050565b600084825260406020830152612bd0604083018486613073565b60006040820184835260206040818501528185518084526060860191508287019350845b8181101561288457845183529383019391830191600101613c5f565b600060a08252613c8e60a0830188613369565b8281036020840152613ca081886132de565b6001600160a01b039690961660408401525050606081019290925260809091015292915050565b6000606082528435613cd881614724565b613ce56060840182612ed9565b50613cf2602086016127d1565b613cff6080840182612ed9565b50613d0c604086016127d1565b613d1960a0840182612ed9565b50606085013560c0830152613d316080860186613ff3565b60e080850152613d466101408501828461312c565b915050613d5660a0870187613fab565b605f198086850301610100870152613d6f848385612fce565b9350613d7e60c08a018a614038565b925080868503016101208701525050613d97828261321d565b92505050613da86020830185612ed9565b826040830152949350505050565b918252602082015260400190565b6000808335601e19843603018112613dda578283fd5b83018035915067ffffffffffffffff821115613df4578283fd5b602090810192508102360382131561281e57600080fd5b6000808335601e19843603018112613e21578283fd5b83018035915067ffffffffffffffff821115613e3b578283fd5b60200191503681900382131561281e57600080fd5b6000823560fe19833603018112613e65578182fd5b9190910192915050565b60008235609e19833603018112613e65578182fd5b60405181810167ffffffffffffffff81118282101715613ea657613ea66142cb565b604052919050565b600067ffffffffffffffff821115613ec857613ec86142cb565b5060209081020190565b600067ffffffffffffffff821115613eec57613eec6142cb565b50601f01601f191660200190565b60009081526020902090565b602084108015613f5c57601f841160018114613f2d57613f26868561425b565b8355613f56565b613f3683613efa565b613f4b6020601f8801048201600183016140b0565b50613f568684614332565b5061072a565b8160005260206000206020601f8701048101601f87168015613f8657613f868160001984016142e1565b50613f996020601f8801048301826140b0565b50506001856002021782555050505050565b6000808335601e19843603018112613fc1578283fd5b830160208101925035905067ffffffffffffffff811115613fe157600080fd5b60208102360383131561281e57600080fd5b6000808335601e19843603018112614009578283fd5b830160208101925035905067ffffffffffffffff81111561402957600080fd5b80360383131561281e57600080fd5b6000823560fe1983360301811261404d578182fd5b90910192915050565b600082198211156140695761406961429f565b500190565b60008160001904831182151516156140885761408861429f565b500290565b60008282101561409f5761409f61429f565b500390565b6001600160a01b031690565b5b81811015611e0f57600081556001016140b1565b6140cf83826142f5565b818160005260208060002060005b868110156140f9578335825592820192600191820191016140dd565b50505050505050565b67ffffffffffffffff83111561411a5761411a6142cb565b6141248154614226565b600080601f8611601f8411818117156141435761414086613efa565b92505b8015614172576020601f8901048301602089101561415e5750825b6141706020601f8801048501826140b0565b505b50806001811461419e5760009450871561418d578387013594505b614197888661425b565b86556141f0565b601f198816945082845b868110156141c857888601358255602095860195600190920191016141a8565b50888610156141e557878501356000196008601f8c16021c191681555b506001600289020186555b5050505050505050565b60005b838110156142155781810151838201526020016141fd565b83811115610dde5750506000910152565b60028104600182168061423a57607f821691505b602082108114156128fc57634e487b7160e01b600052602260045260246000fd5b600019600883021c191660029091021790565b60006000198214156142825761428261429f565b5060010190565b634e487b7160e01b600052600060045260246000fd5b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b8054600019836020036008021c1681555050565b6801000000000000000082111561430e5761430e6142cb565b80548282558083101561132257816000526020600020610dde8282018583016140b0565b80600052602060002061434683825461425b565b9091556000905550565b6001600160a01b0382166001600160a01b03198254161781555050565b813561437881614724565b6143828183614350565b5060016020808401358284015560408401356002840155606084013560038401556143b06080850185613dc4565b6143be8183600488016140c5565b50506143cd60a0850185613dc4565b6143db8183600588016140c5565b5050600683016143ee60c0860186613dc4565b68010000000000000000811115614407576144076142cb565b8254818455808210156144425760008481528581208381019083015b8082101561443e5761443583836142f5565b90880190614423565b5050505b508161444d84613efa565b93506000805b83811015614482576144658386613dc4565b6144718183868b614678565b505094870194918601918701614453565b505050505050505061449760e0830183613e0b565b610dde818360078601614102565b81356144b081614724565b6144ba8183614350565b5060016020808401356144cc81614724565b6144d881848601614350565b50600260408501356144e981614724565b6144f581838701614350565b50600360608601358186015560046145106080880188613e0b565b61451d8183858b01614102565b5050600580870161453160a08a018a613dc4565b6801000000000000000081111561454a5761454a6142cb565b825481845580821015614612577f33333333333333333333333333333333333333333333333333333333333333338082118b161561458a5761458a61429f565b8083118b161561459c5761459c61429f565b506000848152898120838702810190878402015b8082101561460e576145c3838484614705565b828d8301556145d583848d8501614705565b6145e283848c8501614705565b88820180546145f081614226565b80156146025761460286828486613f06565b505050908701906145b0565b5050505b5081965061461f83613efa565b9550600094508492505b808310156146565761464561463e8884613e6f565b8688614691565b958701959483019491880191614629565b505050505050505050611e0f61466f60c0840184613e50565b6006830161436d565b811561468657614686614289565b610dde8484836140c5565b811561469f5761469f614289565b823581556001810160208401356146b581614739565b600381106146c5576146c56142b5565b60ff1982541660ff82168117835550505060408301356002820155606083013560038201556146f76080840184613e0b565b61072a818360048601614102565b805460088302600019811b8086831b1681198416178455505050505050565b6001600160a01b03811681146105db57600080fd5b600381106105db57600080fdfea2646970667358221220fa9f4aa33aff37492bc7fef316f11f6fc4481217a2eaa034099caa0d6abd16f464736f6c63430008000033";

export class BasicSolverV1__factory extends ContractFactory {
  constructor(
    linkLibraryAddresses: BasicSolverV1LibraryAddresses,
    signer?: Signer
  ) {
    super(
      _abi,
      BasicSolverV1__factory.linkBytecode(linkLibraryAddresses),
      signer
    );
  }

  static linkBytecode(
    linkLibraryAddresses: BasicSolverV1LibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$94d7d2f22770e4b0d1a2b99fb2812308e2\\$__", "g"),
      linkLibraryAddresses["__$94d7d2f22770e4b0d1a2b99fb2812308e2$__"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BasicSolverV1> {
    return super.deploy(overrides || {}) as Promise<BasicSolverV1>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BasicSolverV1 {
    return super.attach(address) as BasicSolverV1;
  }
  connect(signer: Signer): BasicSolverV1__factory {
    return super.connect(signer) as BasicSolverV1__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BasicSolverV1Interface {
    return new utils.Interface(_abi) as BasicSolverV1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BasicSolverV1 {
    return new Contract(address, _abi, signerOrProvider) as BasicSolverV1;
  }
}

export interface BasicSolverV1LibraryAddresses {
  ["__$94d7d2f22770e4b0d1a2b99fb2812308e2$__"]: string;
}
