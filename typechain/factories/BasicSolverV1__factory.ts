/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BasicSolverV1, BasicSolverV1Interface } from "../BasicSolverV1";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "chainChild",
        type: "address",
      },
    ],
    name: "DeployedChild",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "solver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "solveIndex",
        type: "uint256",
      },
    ],
    name: "PreparedSolve",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_slot",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "addData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "addressFromChainIndex",
    outputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "payouts",
        type: "uint256[]",
      },
    ],
    name: "arbitrate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "arbitrateNull",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "arbitrationPending",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "arbitrationRequested",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "chainChild",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "chainIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "chainParent",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "collateralBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "conditions",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "collateralToken",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "questionId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "parentCollectionId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "conditionId",
        type: "bytes32",
      },
      {
        internalType: "enum SolverLib.Status",
        name: "status",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "config",
    outputs: [
      {
        internalType: "contract Solver",
        name: "implementation",
        type: "address",
      },
      {
        internalType: "address",
        name: "keeper",
        type: "address",
      },
      {
        internalType: "address",
        name: "arbitrator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "timelockSeconds",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "contract IERC20",
            name: "collateralToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "outcomeSlots",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "parentCollectionIndexSet",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountSlot",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "partition",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "recipientAddressSlots",
            type: "uint256[]",
          },
          {
            internalType: "uint256[][]",
            name: "recipientAmountSlots",
            type: "uint256[][]",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "digest",
                type: "bytes32",
              },
              {
                internalType: "uint8",
                name: "hashFunction",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "size",
                type: "uint8",
              },
            ],
            internalType: "struct SolverLib.Multihash[]",
            name: "outcomeURIs",
            type: "tuple[]",
          },
        ],
        internalType: "struct SolverLib.ConditionBase",
        name: "conditionBase",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "confirmPayouts",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract Solver",
            name: "implementation",
            type: "address",
          },
          {
            internalType: "address",
            name: "keeper",
            type: "address",
          },
          {
            internalType: "address",
            name: "arbitrator",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "timelockSeconds",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "executions",
                type: "uint256",
              },
              {
                internalType: "enum SolverLib.IngestType",
                name: "ingestType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "slot",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "solverIndex",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct SolverLib.Ingest[]",
            name: "ingests",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "contract IERC20",
                name: "collateralToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "outcomeSlots",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "parentCollectionIndexSet",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountSlot",
                type: "uint256",
              },
              {
                internalType: "uint256[]",
                name: "partition",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "recipientAddressSlots",
                type: "uint256[]",
              },
              {
                internalType: "uint256[][]",
                name: "recipientAmountSlots",
                type: "uint256[][]",
              },
              {
                components: [
                  {
                    internalType: "bytes32",
                    name: "digest",
                    type: "bytes32",
                  },
                  {
                    internalType: "uint8",
                    name: "hashFunction",
                    type: "uint8",
                  },
                  {
                    internalType: "uint8",
                    name: "size",
                    type: "uint8",
                  },
                ],
                internalType: "struct SolverLib.Multihash[]",
                name: "outcomeURIs",
                type: "tuple[]",
              },
            ],
            internalType: "struct SolverLib.ConditionBase",
            name: "conditionBase",
            type: "tuple",
          },
        ],
        internalType: "struct SolverLib.Config",
        name: "_config",
        type: "tuple",
      },
    ],
    name: "deployChild",
    outputs: [
      {
        internalType: "contract Solver",
        name: "_solver",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "executeSolve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_slot",
        type: "uint256",
      },
    ],
    name: "getCallbackOutput",
    outputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getConditions",
    outputs: [
      {
        components: [
          {
            internalType: "contract IERC20",
            name: "collateralToken",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "questionId",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "parentCollectionId",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "conditionId",
            type: "bytes32",
          },
          {
            internalType: "uint256[]",
            name: "payouts",
            type: "uint256[]",
          },
          {
            internalType: "enum SolverLib.Status",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct SolverLib.Condition[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_slot",
        type: "uint256",
      },
    ],
    name: "getData",
    outputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "slot",
        type: "uint256",
      },
    ],
    name: "getOutgoingCallbacks",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_slot",
        type: "uint256",
      },
    ],
    name: "handleCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "ingestsValid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_chainParent",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_chainIndex",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "contract Solver",
            name: "implementation",
            type: "address",
          },
          {
            internalType: "address",
            name: "keeper",
            type: "address",
          },
          {
            internalType: "address",
            name: "arbitrator",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "timelockSeconds",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "executions",
                type: "uint256",
              },
              {
                internalType: "enum SolverLib.IngestType",
                name: "ingestType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "slot",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "solverIndex",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct SolverLib.Ingest[]",
            name: "ingests",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "contract IERC20",
                name: "collateralToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "outcomeSlots",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "parentCollectionIndexSet",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountSlot",
                type: "uint256",
              },
              {
                internalType: "uint256[]",
                name: "partition",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "recipientAddressSlots",
                type: "uint256[]",
              },
              {
                internalType: "uint256[][]",
                name: "recipientAmountSlots",
                type: "uint256[][]",
              },
              {
                components: [
                  {
                    internalType: "bytes32",
                    name: "digest",
                    type: "bytes32",
                  },
                  {
                    internalType: "uint8",
                    name: "hashFunction",
                    type: "uint8",
                  },
                  {
                    internalType: "uint8",
                    name: "size",
                    type: "uint8",
                  },
                ],
                internalType: "struct SolverLib.Multihash[]",
                name: "outcomeURIs",
                type: "tuple[]",
              },
            ],
            internalType: "struct SolverLib.ConditionBase",
            name: "conditionBase",
            type: "tuple",
          },
        ],
        internalType: "struct SolverLib.Config",
        name: "_solverConfig",
        type: "tuple",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "prepareSolve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_payouts",
        type: "uint256[]",
      },
    ],
    name: "proposePayouts",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_collateralToken",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_parentCollectionId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_conditionId",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "_indexSets",
        type: "uint256[]",
      },
    ],
    name: "redeemPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_slot",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_chainIndex",
        type: "uint256",
      },
    ],
    name: "registerOutgoingCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_trackingId",
        type: "bytes32",
      },
    ],
    name: "setTrackingId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "timelocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "trackingId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uiURI",
    outputs: [
      {
        internalType: "bytes32",
        name: "digest",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "hashFunction",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "size",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50614f56806100206000396000f3fe608060405234801561001057600080fd5b506004361061020b5760003560e01c80634e46f2231161012a57806399992506116100bd578063bc197c811161008c578063d8b6231611610071578063d8b623161461048a578063ea8221a91461049d578063f23a6e61146104a55761020b565b8063bc197c8114610462578063c98c05b7146104825761020b565b80639999250614610421578063a072d7b014610429578063a5682cb01461043c578063b992db0f1461044f5761020b565b806380b204b7116100f957806380b204b7146103e057806380c2dde2146103f357806387c0b374146103fb57806387dfee571461040e5761020b565b80634e46f2231461039657806355dd978b146103a957806379502c55146103b15780637c123627146103cb5761020b565b806336fcf48c116101a2578063499f5af311610171578063499f5af31461034a5780634a77234e1461035d5780634dab5e69146103705780634dd82880146103835761020b565b806336fcf48c146102eb5780633837b05e146103025780633ee8b6741461032257806348cbb2fc146103425761020b565b80630d7e149f116101de5780630d7e149f146102815780630d8d3975146102a157806318782559146102b457806326c50007146102c75761020b565b80630178fe3f1461021057806301ffc9a71461023957806307c068b6146102595780630d06101a1461026e575b600080fd5b61022361021e366004612eb2565b6104b8565b6040516102309190613ab4565b60405180910390f35b61024c610247366004612eca565b61055a565b6040516102309190613a72565b61026c610267366004612eb2565b6105a0565b005b61026c61027c366004612eb2565b6106e9565b61029461028f366004612eb2565b61070e565b6040516102309190613a7d565b61026c6102af366004612eb2565b61072f565b61026c6102c2366004612f65565b610886565b6102da6102d5366004612eb2565b610941565b604051610230959493929190613b01565b6102f361098f565b60405161023093929190613a86565b610315610310366004612eb2565b6109a4565b60405161023091906137f4565b610335610330366004612eb2565b610ad2565b6040516102309190613867565b610294610b3d565b61026c610358366004612e3b565b610b43565b61026c61036b366004612eb2565b610c56565b61026c61037e366004612eb2565b610f5d565b610223610391366004612eb2565b611037565b61026c6103a4366004612eb2565b611082565b61031561115c565b6103b961116b565b60405161023096959493929190613b34565b6103d3611427565b60405161023091906138b4565b61026c6103ee3660046130df565b611556565b61031561169c565b61026c610409366004613244565b6116ab565b61026c61041c366004613129565b6117b6565b61024c61193a565b61026c610437366004612eb2565b6119e7565b61031561044a36600461308c565b611d39565b61026c61045d366004612eb2565b611e93565b610475610470366004612ccd565b6121ae565b6040516102309190613a9f565b6102946121db565b61026c6104983660046131c5565b612275565b6102946122cb565b6104756104b3366004612d88565b6122d1565b6000818152601b602052604090208054606091906104d590614990565b80601f016020809104026020016040519081016040528092919081815260200182805461050190614990565b801561054e5780601f106105235761010080835404028352916020019161054e565b820191906000526020600020905b81548152906001019060200180831161053157829003601f168201915b50505050509050919050565b60006001600160e01b031982167f4e2312e00000000000000000000000000000000000000000000000000000000014806105985750610598826122fd565b90505b919050565b6005546001600160a01b031633146105d35760405162461bcd60e51b81526004016105ca90613f07565b60405180910390fd5b6003601182815481106105f657634e487b7160e01b600052603260045260246000fd5b600091825260209091206006918202016005015460ff169081111561062b57634e487b7160e01b600052602160045260246000fd5b146106485760405162461bcd60e51b81526004016105ca90613e3c565b73__$94d7d2f22770e4b0d1a2b99fb2812308e2$__63ec7ac2f06011838154811061068357634e487b7160e01b600052603260045260246000fd5b90600052602060002090600602016040518263ffffffff1660e01b81526004016106ad9190613a7d565b60006040518083038186803b1580156106c557600080fd5b505af41580156106d9573d6000803e3d6000fd5b505050506106e68161232f565b50565b601654156107095760405162461bcd60e51b81526004016105ca906140f2565b601655565b6015818154811061071e57600080fd5b600091825260209091200154905081565b6015818154811061075057634e487b7160e01b600052603260045260246000fd5b906000526020600020015442116107795760405162461bcd60e51b81526004016105ca90613dce565b60026011828154811061079c57634e487b7160e01b600052603260045260246000fd5b600091825260209091206006918202016005015460ff16908111156107d157634e487b7160e01b600052602160045260246000fd5b146107ee5760405162461bcd60e51b81526004016105ca90613f75565b73__$94d7d2f22770e4b0d1a2b99fb2812308e2$__63696d46616011838154811061082957634e487b7160e01b600052603260045260246000fd5b90600052602060002090600602016040518263ffffffff1660e01b81526004016108539190613a7d565b60006040518083038186803b15801561086b57600080fd5b505af415801561087f573d6000803e3d6000fd5b5050505050565b6004546001600160a01b031633146108b05760405162461bcd60e51b81526004016105ca90613d97565b6040517f01b7037c000000000000000000000000000000000000000000000000000000008152735fbdb2315678afecb367f032d93f642f64180aa3906301b7037c906109089088908890889088908890600401613ac7565b600060405180830381600087803b15801561092257600080fd5b505af1158015610936573d6000803e3d6000fd5b505050505050505050565b6011818154811061095157600080fd5b6000918252602090912060069091020180546001820154600283015460038401546005909401546001600160a01b0390931694509092909160ff1685565b60015460025460ff8082169161010090041683565b60006014548214156109b757503061059b565b601454821015610a4857601254604051631c1bd82f60e11b81526001600160a01b0390911690633837b05e906109f1908590600401613a7d565b60206040518083038186803b158015610a0957600080fd5b505afa158015610a1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a419190612cb1565b905061059b565b60145482111561059b57601354604051631c1bd82f60e11b81526001600160a01b0390911690633837b05e90610a82908590600401613a7d565b60206040518083038186803b158015610a9a57600080fd5b505afa158015610aae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105989190612cb1565b60008181526019602090815260409182902080548351818402810184019094528084526060939283018282801561054e57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610b145750505050509050919050565b60165481565b600054610100900460ff1680610b5c575060005460ff16155b610b785760405162461bcd60e51b81526004016105ca90613e73565b600054610100900460ff16158015610ba3576000805460ff1961ff0019909116610100171660011790555b3373e7f1725e7734ce288f8367e1bb143e90bb3f051214610bd65760405162461bcd60e51b81526004016105ca90613d60565b6000610be86040840160208501612c8e565b6001600160a01b03161415610c0f5760405162461bcd60e51b81526004016105ca90613f3e565b601280546001600160a01b0319166001600160a01b0386161790556014839055816003610c3c8282614c28565b50508015610c50576000805461ff00191690555b50505050565b60115415610c9d576004546001600160a01b0316331480610c8157506012546001600160a01b031633145b610c9d5760405162461bcd60e51b81526004016105ca906140bb565b6011548114610cbe5760405162461bcd60e51b81526004016105ca90613d29565b60185415610cde5760405162461bcd60e51b81526004016105ca90613fe3565b60175415610cfe5760405162461bcd60e51b81526004016105ca90614018565b601254601180546040517f62dae736000000000000000000000000000000000000000000000000000000008152919273__$94d7d2f22770e4b0d1a2b99fb2812308e2$__926362dae73692610d65926009926001600160a01b0390911691906004016141ce565b60006040518083038186803b158015610d7d57600080fd5b505af4158015610d91573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610db99190810190612fcd565b8154600180820184556000938452602093849020835160069093020180546001600160a01b0319166001600160a01b03909316929092178255828401519082015560408201516002820155606082015160038201556080820151805192939192610e299260048501920190612a8a565b5060a082015160058201805460ff19166001836006811115610e5b57634e487b7160e01b600052602160045260246000fd5b0217905550506015805460018101825560009182527f55f448fdea98c4d29eb340757ef0a66cd03dbb9538908a6a81d96026b71ec475015550610e9c612377565b7f152ec8ae15d347b2d2a8f0858caa29bcaaa0906749a1f43e08bfe799834602403082604051610ecd92919061384e565b60405180910390a16013546001600160a01b0316156106e6576013546040517f4a77234e0000000000000000000000000000000000000000000000000000000081526001600160a01b0390911690634a77234e90610f2f908490600401613a7d565b600060405180830381600087803b158015610f4957600080fd5b505af115801561087f573d6000803e3d6000fd5b6005546001600160a01b03163314610f875760405162461bcd60e51b81526004016105ca90613f07565b600260118281548110610faa57634e487b7160e01b600052603260045260246000fd5b600091825260209091206006918202016005015460ff1690811115610fdf57634e487b7160e01b600052602160045260246000fd5b14610ffc5760405162461bcd60e51b81526004016105ca90613fac565b73__$94d7d2f22770e4b0d1a2b99fb2812308e2$__6324b286026011838154811061068357634e487b7160e01b600052603260045260246000fd5b6011546000828152601c6020526040902054606091146110695760405162461bcd60e51b81526004016105ca90613ed0565b6000828152601b6020526040902080546104d590614990565b6005546001600160a01b031633146110ac5760405162461bcd60e51b81526004016105ca90613f07565b6004601182815481106110cf57634e487b7160e01b600052603260045260246000fd5b600091825260209091206006918202016005015460ff169081111561110457634e487b7160e01b600052602160045260246000fd5b146111215760405162461bcd60e51b81526004016105ca9061404d565b73__$94d7d2f22770e4b0d1a2b99fb2812308e2$__6359111fb56011838154811061068357634e487b7160e01b600052603260045260246000fd5b6013546001600160a01b031681565b60038054600454600554600654600780546001600160a01b03958616969486169590931693919261119b90614990565b80601f01602080910402602001604051908101604052809291908181526020018280546111c790614990565b80156112145780601f106111e957610100808354040283529160200191611214565b820191906000526020600020905b8154815290600101906020018083116111f757829003601f168201915b505060408051610100810182526006870180546001600160a01b03168252600788015460208084019190915260088901548385015260098901546060840152600a890180548551818402810184019096528086529899989397509195506080870194509091908301828280156112a957602002820191906000526020600020905b815481526020019060010190808311611295575b505050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561130157602002820191906000526020600020905b8154815260200190600101908083116112ed575b5050505050815260200160068201805480602002602001604051908101604052809291908181526020016000905b8282101561139b5760008481526020908190208301805460408051828502810185019091528181529283018282801561138757602002820191906000526020600020905b815481526020019060010190808311611373575b50505050508152602001906001019061132f565b50505050815260200160078201805480602002602001604051908101604052809291908181526020016000905b8282101561141a57600084815260209081902060408051606081018252600286029092018054835260019081015460ff80821685870152610100909104169183019190915290835290920191016113c8565b5050505081525050905086565b60606011805480602002602001604051908101604052809291908181526020016000905b8282101561154d5760008481526020908190206040805160c0810182526006860290920180546001600160a01b0316835260018101548385015260028101548383015260038101546060840152600481018054835181870281018701909452808452939491936080860193928301828280156114e657602002820191906000526020600020905b8154815260200190600101908083116114d2575b5050509183525050600582015460209091019060ff16600681111561151b57634e487b7160e01b600052602160045260246000fd5b600681111561153a57634e487b7160e01b600052602160045260246000fd5b815250508152602001906001019061144b565b50505050905090565b6004546001600160a01b031633146115805760405162461bcd60e51b81526004016105ca90613d97565b6001601184815481106115a357634e487b7160e01b600052603260045260246000fd5b600091825260209091206006918202016005015460ff16908111156115d857634e487b7160e01b600052602160045260246000fd5b146115f55760405162461bcd60e51b81526004016105ca90613cbb565b73__$94d7d2f22770e4b0d1a2b99fb2812308e2$__636a0a24f16011858154811061163057634e487b7160e01b600052603260045260246000fd5b906000526020600020906006020184846040518463ffffffff1660e01b815260040161165e939291906141fc565b60006040518083038186803b15801561167657600080fd5b505af415801561168a573d6000803e3d6000fd5b505050506116978361232f565b505050565b6012546001600160a01b031681565b6116b4816109a4565b6001600160a01b0316336001600160a01b0316146116e45760405162461bcd60e51b81526004016105ca90613cf2565b6000828152601c60205260409020541580159061171057506011546000838152601c6020526040902054145b1561176f57604051630a072d7b60e41b8152339063a072d7b090611738908590600401613a7d565b600060405180830381600087803b15801561175257600080fd5b505af1158015611766573d6000803e3d6000fd5b505050506117b2565b6000828152601960209081526040822080546001810182559083529082200180546001600160a01b0319163317905560188054916117ac836149d8565b91905055505b5050565b6005546001600160a01b031633146117e05760405162461bcd60e51b81526004016105ca90613f07565b60046011838154811061180357634e487b7160e01b600052603260045260246000fd5b600091825260209091206006918202016005015460ff169081111561183857634e487b7160e01b600052602160045260246000fd5b146118555760405162461bcd60e51b81526004016105ca9061404d565b6015828154811061187657634e487b7160e01b600052603260045260246000fd5b9060005260206000200154421161189f5760405162461bcd60e51b81526004016105ca90613dce565b73__$94d7d2f22770e4b0d1a2b99fb2812308e2$__6311ca1ac0601184815481106118da57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060060201836040518363ffffffff1660e01b8152600401611906929190614216565b60006040518083038186803b15801561191e57600080fd5b505af4158015611932573d6000803e3d6000fd5b505050505050565b6011546040517f5cc1f6b500000000000000000000000000000000000000000000000000000000815260009173__$94d7d2f22770e4b0d1a2b99fb2812308e2$__91635cc1f6b5916119929160089190600401613966565b60206040518083038186803b1580156119aa57600080fd5b505af41580156119be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119e29190612e92565b905090565b600033826040516020016119fc9291906137d2565b60408051601f1981840301815291815281516020928301206000818152601a90935291205460088054929350611a62929091908110611a4b57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060050201600301546109a4565b6001600160a01b0316336001600160a01b031614611a925760405162461bcd60e51b81526004016105ca90613cf2565b6000818152601a6020526040812054600880549091908110611ac457634e487b7160e01b600052603260045260246000fd5b600091825260209091206001600590920201015460ff166002811115611afa57634e487b7160e01b600052602160045260246000fd5b14611b175760405162461bcd60e51b81526004016105ca90613c4d565b6000818152601a6020526040902054600880549091908110611b4957634e487b7160e01b600052603260045260246000fd5b600091825260208220600590910201805491611b64836149d8565b90915550506000818152601a602052604090205460088054611d1a92908110611b9d57634e487b7160e01b600052603260045260246000fd5b906000526020600020906005020160020154336001600160a01b0316634dd828806003600501601760030160008781526020019081526020016000205481548110611bf857634e487b7160e01b600052603260045260246000fd5b90600052602060002090600502016004018054611c1490614990565b80601f0160208091040260200160405190810160405280929190818152602001828054611c4090614990565b8015611c8d5780601f10611c6257610100808354040283529160200191611c8d565b820191906000526020600020905b815481529060010190602001808311611c7057829003601f168201915b5050505050806020019051810190611ca591906130c7565b6040518263ffffffff1660e01b8152600401611cc19190613a7d565b60006040518083038186803b158015611cd957600080fd5b505afa158015611ced573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611d159190810190612ef2565b612627565b6000818152601a6020526040812081905560178054916117ac83614979565b6004546000906001600160a01b03163314611d665760405162461bcd60e51b81526004016105ca90614084565b6013546001600160a01b031615611d8f5760405162461bcd60e51b81526004016105ca90613c84565b6014546040517f4dd0aa4900000000000000000000000000000000000000000000000000000000815273__$94d7d2f22770e4b0d1a2b99fb2812308e2$__91634dd0aa4991611de59186913091906004016142a2565b604080518083038186803b158015611dfc57600080fd5b505af4158015611e10573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e349190612e02565b601380546001600160a01b0319166001600160a01b0393841617908190556040519193507fbd2e7fbdc9b1c19997e58c63e6ea1b5a02acd8dd9fd5d76f4bb18634f7155e8092611e86929116906137f4565b60405180910390a1919050565b600060118281548110611eb657634e487b7160e01b600052603260045260246000fd5b600091825260209091206006918202016005015460ff1690811115611eeb57634e487b7160e01b600052602160045260246000fd5b14611f085760405162461bcd60e51b81526004016105ca90614197565b611f1061193a565b1515600114611f315760405162461bcd60e51b81526004016105ca90613e05565b600160118281548110611f5457634e487b7160e01b600052603260045260246000fd5b906000526020600020906006020160050160006101000a81548160ff02191690836006811115611f9457634e487b7160e01b600052602160045260246000fd5b02179055506012546011805473__$94d7d2f22770e4b0d1a2b99fb2812308e2$__92631e85323f926001600160a01b03909116916009919086908110611fea57634e487b7160e01b600052603260045260246000fd5b60009182526020808320600c548452601b909152604090922080546006909202909201919061201890614990565b80601f016020809104026020016040519081016040528092919081815260200182805461204490614990565b80156120915780601f1061206657610100808354040283529160200191612091565b820191906000526020600020905b81548152906001019060200180831161207457829003601f168201915b50505050508060200190518101906120a991906130c7565b6040518563ffffffff1660e01b81526004016120c89493929190613808565b60006040518083038186803b1580156120e057600080fd5b505af41580156120f4573d6000803e3d6000fd5b5050505073__$94d7d2f22770e4b0d1a2b99fb2812308e2$__63366968286011838154811061213357634e487b7160e01b600052603260045260246000fd5b9060005260206000209060060201600360060130601b6016546040518663ffffffff1660e01b815260040161216c959493929190614256565b60006040518083038186803b15801561218457600080fd5b505af4158015612198573d6000803e3d6000fd5b505050506121a5816106e6565b6106e6816126aa565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b6009546040517f70a082310000000000000000000000000000000000000000000000000000000081526000916001600160a01b0316906370a08231906122259030906004016137f4565b60206040518083038186803b15801561223d57600080fd5b505afa158015612251573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119e291906130c7565b6004546001600160a01b0316331461229f5760405162461bcd60e51b81526004016105ca90613c16565b6008548210156122c15760405162461bcd60e51b81526004016105ca90614129565b6117b28282612627565b60145481565b7ff23a6e61000000000000000000000000000000000000000000000000000000005b9695505050505050565b6001600160e01b031981167f01ffc9a70000000000000000000000000000000000000000000000000000000014919050565b60065461233d9060016146d8565b61234790426146c0565b6015828154811061236857634e487b7160e01b600052603260045260246000fd5b60009182526020909120015550565b60005b6008548110156106e657600060088054839081106123a857634e487b7160e01b600052603260045260246000fd5b600091825260209091206001600590920201015460ff1660028111156123de57634e487b7160e01b600052602160045260246000fd5b146124225761241d6003600501828154811061240a57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060050201612793565b612615565b6000306001600160a01b0316633837b05e6003600501848154811061245757634e487b7160e01b600052603260045260246000fd5b9060005260206000209060050201600301546040518263ffffffff1660e01b81526004016124859190613a7d565b60206040518083038186803b15801561249d57600080fd5b505afa1580156124b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124d59190612cb1565b90506124e181836127fe565b806001600160a01b03166387c0b3746003600501848154811061251457634e487b7160e01b600052603260045260246000fd5b9060005260206000209060050201600401805461253090614990565b80601f016020809104026020016040519081016040528092919081815260200182805461255c90614990565b80156125a95780601f1061257e576101008083540402835291602001916125a9565b820191906000526020600020905b81548152906001019060200180831161258c57829003601f168201915b50505050508060200190518101906125c191906130c7565b6014546040518363ffffffff1660e01b81526004016125e1929190614391565b600060405180830381600087803b1580156125fb57600080fd5b505af115801561260f573d6000803e3d6000fd5b50505050505b8061261f816149d8565b91505061237a565b601154612636906001906146f7565b6000838152601c6020526040902054146126625760405162461bcd60e51b81526004016105ca90614160565b6000828152601c6020526040812080549161267c836149d8565b90915550506000828152601b6020908152604090912082516126a092840190612ad5565b506117b282612922565b6013546001600160a01b0316158015906127455750601360009054906101000a90046001600160a01b03166001600160a01b031663999925066040518163ffffffff1660e01b815260040160206040518083038186803b15801561270d57600080fd5b505afa158015612721573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127459190612e92565b156106e6576013546040517fb992db0f0000000000000000000000000000000000000000000000000000000081526001600160a01b039091169063b992db0f90610f2f908490600401613a7d565b6106e6816002015473__$94d7d2f22770e4b0d1a2b99fb2812308e2$__63b3d73707846040518263ffffffff1660e01b81526004016127d29190613a7d565b60006040518083038186803b1580156127ea57600080fd5b505af4158015611ced573d6000803e3d6000fd5b8060176003016000846003600501858154811061282b57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060050201600401805461284790614990565b80601f016020809104026020016040519081016040528092919081815260200182805461287390614990565b80156128c05780601f10612895576101008083540402835291602001916128c0565b820191906000526020600020905b8154815290600101906020018083116128a357829003601f168201915b50505050508060200190518101906128d891906130c7565b6040516020016128e99291906137d2565b60408051601f1981840301815291815281516020928301208352908201929092520160009081209190915560178054916117ac836149d8565b60005b6000828152601960205260409020548110156117b257600082815260196020526040812080548390811061296957634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b031614612a785760008281526019602052604090208054829081106129b157634e487b7160e01b600052603260045260246000fd5b600091825260209091200154604051630a072d7b60e41b81526001600160a01b039091169063a072d7b0906129ea908590600401613a7d565b600060405180830381600087803b158015612a0457600080fd5b505af1158015612a18573d6000803e3d6000fd5b5050506000838152601960205260409020805490915082908110612a4c57634e487b7160e01b600052603260045260246000fd5b6000918252602082200180546001600160a01b03191690556018805491612a7283614979565b91905055505b80612a82816149d8565b915050612925565b828054828255906000526020600020908101928215612ac5579160200282015b82811115612ac5578251825591602001919060010190612aaa565b50612ad1929150612b48565b5090565b828054612ae190614990565b90600052602060002090601f016020900481019282612b035760008555612ac5565b82601f10612b1c57805160ff1916838001178555612ac5565b82800160010185558215612ac55791820182811115612ac5578251825591602001919060010190612aaa565b5b80821115612ad15760008155600101612b49565b803561059b81614eef565b60008083601f840112612b79578182fd5b50813567ffffffffffffffff811115612b90578182fd5b6020830191508360208083028501011115612baa57600080fd5b9250929050565b600082601f830112612bc1578081fd5b81516020612bd6612bd1836144d0565b6144a6565b8281528181019085830183850287018401881015612bf2578586fd5b855b85811015612c1057815184529284019290840190600101612bf4565b5090979650505050505050565b60008083601f840112612c2e578182fd5b50813567ffffffffffffffff811115612c45578182fd5b602083019150836020828501011115612baa57600080fd5b805161059b81614eef565b80516007811061059b57600080fd5b600060e08284031215612c88578081fd5b50919050565b600060208284031215612c9f578081fd5b8135612caa81614eef565b9392505050565b600060208284031215612cc2578081fd5b8151612caa81614eef565b60008060008060008060008060a0898b031215612ce8578384fd5b8835612cf381614eef565b97506020890135612d0381614eef565b9650604089013567ffffffffffffffff80821115612d1f578586fd5b612d2b8c838d01612b68565b909850965060608b0135915080821115612d43578586fd5b612d4f8c838d01612b68565b909650945060808b0135915080821115612d67578384fd5b50612d748b828c01612c1d565b999c989b5096995094979396929594505050565b60008060008060008060a08789031215612da0578384fd5b8635612dab81614eef565b95506020870135612dbb81614eef565b94506040870135935060608701359250608087013567ffffffffffffffff811115612de4578283fd5b612df089828a01612c1d565b979a9699509497509295939492505050565b60008060408385031215612e14578182fd5b8251612e1f81614eef565b6020840151909250612e3081614eef565b809150509250929050565b600080600060608486031215612e4f578081fd5b8335612e5a81614eef565b925060208401359150604084013567ffffffffffffffff811115612e7c578182fd5b612e8886828701612c77565b9150509250925092565b600060208284031215612ea3578081fd5b81518015158114612caa578182fd5b600060208284031215612ec3578081fd5b5035919050565b600060208284031215612edb578081fd5b81356001600160e01b031981168114612caa578182fd5b600060208284031215612f03578081fd5b815167ffffffffffffffff811115612f19578182fd5b8201601f81018413612f29578182fd5b8051612f37612bd1826144f4565b818152856020838501011115612f4b578384fd5b612f5c82602083016020860161494d565b95945050505050565b600080600080600060808688031215612f7c578283fd5b8535612f8781614eef565b94506020860135935060408601359250606086013567ffffffffffffffff811115612fb0578182fd5b612fbc88828901612b68565b969995985093965092949392505050565b600060208284031215612fde578081fd5b815167ffffffffffffffff80821115612ff5578283fd5b9083019060c08286031215613008578283fd5b60405160c08101818110838211171561302357613023614a35565b60405261302f83612c5d565b8152602083015160208201526040830151604082015260608301516060820152608083015182811115613060578485fd5b61306c87828601612bb1565b60808301525061307e60a08401612c68565b60a082015295945050505050565b60006020828403121561309d578081fd5b813567ffffffffffffffff8111156130b3578182fd5b6130bf84828501612c77565b949350505050565b6000602082840312156130d8578081fd5b5051919050565b6000806000604084860312156130f3578081fd5b83359250602084013567ffffffffffffffff811115613110578182fd5b61311c86828701612b68565b9497909650939450505050565b6000806040838503121561313b578182fd5b8235915060208084013567ffffffffffffffff811115613159578283fd5b8401601f81018613613169578283fd5b8035613177612bd1826144d0565b81815283810190838501858402850186018a1015613193578687fd5b8694505b838510156131b5578035835260019490940193918501918501613197565b5080955050505050509250929050565b600080604083850312156131d7578182fd5b82359150602083013567ffffffffffffffff8111156131f4578182fd5b8301601f81018513613204578182fd5b8035613212612bd1826144f4565b818152866020838501011115613226578384fd5b81602084016020830137908101602001929092525090939092509050565b60008060408385031215613256578182fd5b50508035926020909101359150565b6001600160a01b03169052565b818352602080840193600091908185020181018584845b878110156132bf5782840389526132a082886145cd565b6132ab8682846134fd565b9a87019a9550505090840190600101613289565b5091979650505050505050565b6000815180845260208085018081965082840281019150828601855b858110156132bf57828403895261330084835161354a565b988501989350908401906001016132e8565b6000815480845260208085018081965082840281019150858552828520855b858110156132bf5782840389526133488483613579565b98850198935060019182019101613331565b818352602080840193600091908185020181018584845b878110156132bf5782840389528135609e19883603018112613391578687fd5b87018035855260a0868201356133a681614f04565b6133b288880182613601565b50604082810135908701526060808301359087015260806133d58184018461465d565b935082828901526133e983890185836135ab565b9c89019c97505050928601925050600101613371565b60008284526020808501945082825b8581101561345857813587528282013561342781614f11565b60ff908116888501526040908382013561344081614f11565b1690880152606096870196919091019060010161340e565b509495945050505050565b6000815180845260208085019450808401835b83811015613458578151805188528381015160ff908116858a0152604091820151169088015260609096019590820190600101613476565b6000815480845260208085019450838352808320835b83811015613458578154875260018083015460ff808216868b015260089190911c166040890152606090970196600290920191016134c4565b60008284527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83111561352e578081fd5b6020830280836020870137939093016020019283525090919050565b6000815180845260208085019450808401835b838110156134585781518752958201959082019060010161355d565b6000815480845260208085019450838352808320835b838110156134585781548752958201956001918201910161358f565b60008284528282602086013780602084860101526020601f19601f85011685010190509392505050565b600081518084526135ed81602086016020860161494d565b601f01601f19169290920160200192915050565b6003811061361157613611614a1f565b9052565b6007811061361157613611614a1f565b600061010061363c8461363785612b5d565b613265565b60208301356020850152604083013560408501526060830135606085015261366760808401846145cd565b82608087015261367a83870182846134fd565b9250505061368b60a08401846145cd565b85830360a087015261369e8382846134fd565b925050506136af60c08401846145cd565b85830360c08701526136c2838284613272565b925050506136d360e0840184614615565b85830360e08701526122f38382846133ff565b60006101006136f984613637855461470e565b60018301546020850152600283015460408501526003830154606085015280608085015261372c81850160048501613579565b905083810360a08501526137438160058501613579565b905083810360c085015261375a8160068501613312565b905083810360e08501526130bf81600785016134ae565b60006001600160a01b03825416835260018201546020840152600282015460408401526003820154606084015260c060808401526137b560c0840160048401613579565b60ff6005840154166137ca60a0860182613615565b509392505050565b60609290921b6bffffffffffffffffffffffff19168252601482015260340190565b6001600160a01b0391909116815260200190565b60006001600160a01b03861682526080602083015261382a60808301866136e6565b828103604084015261383c8186613771565b91505082606083015295945050505050565b6001600160a01b03929092168252602082015260400190565b6020808252825182820181905260009190848201906040850190845b818110156138a85783516001600160a01b031683529284019291840191600101613883565b50909695505050505050565b60208082528251828201819052600091906040908185019080840286018301878501865b8381101561395857603f19898403018552815160c06001600160a01b038251168552888201518986015287820151888601526060808301518187015250608080830151828288015261392c8388018261354a565b9250505060a080830151925061394481870184613615565b5095880195935050908601906001016138d8565b509098975050505050505050565b60006040808301818452808654808352606086019150602092506060838202870101888652838620865b83811015613a5f57605f1989840301855260a082548452600160ff81850154166139bc89870182613601565b5060028401548986015260038401546060860152600484018260808701528a81546139e681614990565b94880185905260c0948185168015613a055760018114613a1957613a44565b60ff1983168a88015260e08a019350613a44565b848f528c8f208f5b83811015613a3c5781548c82018a0152908701908e01613a21565b8b0188019450505b50505097890197955050506005929092019150600101613990565b5050929095019590955295945050505050565b901515815260200190565b90815260200190565b92835260ff918216602084015216604082015260600190565b6001600160e01b031991909116815260200190565b600060208252612caa60208301846135d5565b60006001600160a01b038716825285602083015284604083015260806060830152613af66080830184866134fd565b979650505050505050565b600060a0820190506001600160a01b03871682528560208301528460408301528360608301526122f36080830184613615565b60006001600160a01b038089168352808816602084015280871660408401525084606083015260c06080830152613b6e60c08301856135d5565b82810360a0840152610100613b84828651613265565b6020850151602083015260408501516040830152606085015160608301526080850151816080840152613bb98284018261354a565b91505060a085015182820360a0840152613bd3828261354a565b91505060c085015182820360c0840152613bed82826132cc565b91505060e085015182820360e0840152613c078282613463565b9b9a5050505050505050505050565b6020808252600a908201527f4f6e6c794b656570657200000000000000000000000000000000000000000000604082015260600190565b60208082526013908201527f496e67657374206e6f742043616c6c6261636b00000000000000000000000000604082015260600190565b60208082526010908201527f536f6c76657220686173206368696c6400000000000000000000000000000000604082015260600190565b60208082526016908201527f436f6e646974696f6e206e6f7420457865637574656400000000000000000000604082015260600190565b60208082526015908201527f6d73672e73656e646572206e6f7420736f6c7665720000000000000000000000604082015260600190565b60208082526018908201527f496e76616c696420696e64657820746f20707265706172650000000000000000604082015260600190565b6020808252600c908201527f4f6e6c7920666163746f72790000000000000000000000000000000000000000604082015260600190565b6020808252600b908201527f4f6e6c79204b6565706572000000000000000000000000000000000000000000604082015260600190565b60208082526015908201527f54696d656c6f636b207374696c6c206c6f636b65640000000000000000000000604082015260600190565b6020808252600f908201527f696e676573747320696e76616c69640000000000000000000000000000000000604082015260600190565b60208082526018908201527f4e6f74204172626974726174696f6e5265717565737465640000000000000000604082015260600190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201527f647920696e697469616c697a6564000000000000000000000000000000000000606082015260800190565b60208082526011908201527f536c6f7420696e76616c6964207665722e000000000000000000000000000000604082015260600190565b6020808252600f908201527f4f6e6c792061726269747261746f720000000000000000000000000000000000604082015260600190565b6020808252600e908201527f4b656570657220696e76616c6964000000000000000000000000000000000000604082015260600190565b60208082526014908201527f4f7574636f6d65206e6f742070726f706f736564000000000000000000000000604082015260600190565b60208082526013908201527f4e6f74204f7574636f6d6550726f706f73656400000000000000000000000000604082015260600190565b6020808252818101527f46756c66696c6c206f7574676f696e672063616c6c6261636b73206669727374604082015260600190565b6020808252818101527f46756c66696c6c20696e636f6d696e672063616c6c6261636b73206669727374604082015260600190565b60208082526016908201527f4e6f74204172626974726174696f6e50656e64696e6700000000000000000000604082015260600190565b6020808252600b908201527f4f6e6c79206b6565706572000000000000000000000000000000000000000000604082015260600190565b60208082526012908201527f4f6e6c79206b65657065722f706172656e740000000000000000000000000000604082015260600190565b6020808252600e908201527f547261636b696e67496420736574000000000000000000000000000000000000604082015260600190565b60208082526017908201527f536c6f7420726573657276656420627920696e67657374000000000000000000604082015260600190565b60208082526014908201527f536c6f742076657273696f6e20696e76616c6964000000000000000000000000604082015260600190565b6020808252600d908201527f6e6f7420496e6974696174656400000000000000000000000000000000000000604082015260600190565b6000606082526141e160608301866136e6565b6001600160a01b039490941660208301525060400152919050565b600084825260406020830152612f5c6040830184866134fd565b60006040820184835260206040818501528185518084526060860191508287019350845b81811015612c105784518352938301939183019160010161423a565b600060a0825261426960a0830188613771565b828103602084015261427b81886136e6565b6001600160a01b039690961660408401525050606081019290925260809091015292915050565b60006060825284356142b381614eef565b6142c06060840182613265565b506142cd60208601612b5d565b6142da6080840182613265565b506142e760408601612b5d565b6142f460a0840182613265565b50606085013560c083015261430c608086018661465d565b60e080850152614321610140850182846135ab565b91505061433160a08701876145cd565b605f19808685030161010087015261434a84838561335a565b935061435960c08a018a6146a2565b9250808685030161012087015250506143728282613625565b925050506143836020830185613265565b826040830152949350505050565b918252602082015260400190565b6000808335601e198436030181126143b5578283fd5b83018035915067ffffffffffffffff8211156143cf578283fd5b6020908101925081023603821315612baa57600080fd5b6000808335601e198436030181126143fc578283fd5b83018035915067ffffffffffffffff821115614416578283fd5b6020019150606081023603821315612baa57600080fd5b6000808335601e19843603018112614443578283fd5b83018035915067ffffffffffffffff82111561445d578283fd5b602001915036819003821315612baa57600080fd5b6000823560fe19833603018112614487578182fd5b9190910192915050565b60008235609e19833603018112614487578182fd5b60405181810167ffffffffffffffff811182821017156144c8576144c8614a35565b604052919050565b600067ffffffffffffffff8211156144ea576144ea614a35565b5060209081020190565b600067ffffffffffffffff82111561450e5761450e614a35565b50601f01601f191660200190565b60009081526020902090565b60208410801561457e57601f84116001811461454f5761454886856149c5565b8355614578565b6145588361451c565b61456d6020601f88010482016001830161471a565b506145788684614a9c565b5061087f565b8160005260206000206020601f8701048101601f871680156145a8576145a8816000198401614a4b565b506145bb6020601f88010483018261471a565b50506001856002021782555050505050565b6000808335601e198436030181126145e3578283fd5b830160208101925035905067ffffffffffffffff81111561460357600080fd5b602081023603831315612baa57600080fd5b6000808335601e1984360301811261462b578283fd5b830160208101925035905067ffffffffffffffff81111561464b57600080fd5b606081023603831315612baa57600080fd5b6000808335601e19843603018112614673578283fd5b830160208101925035905067ffffffffffffffff81111561469357600080fd5b803603831315612baa57600080fd5b6000823560fe198336030181126146b7578182fd5b90910192915050565b600082198211156146d3576146d3614a09565b500190565b60008160001904831182151516156146f2576146f2614a09565b500290565b60008282101561470957614709614a09565b500390565b6001600160a01b031690565b5b818110156117b2576000815560010161471b565b6801000000000000000083111561474857614748614a35565b8054838255808410156147e0577f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600181831181161561478a5761478a614a09565b600282871182161561479e5761479e614a09565b600085815260208120909350878202810190828602015b808210156147da576147c985868454614aba565b8255848483015582820191506147b5565b50505050505b50816147eb8261451c565b6000805b8681101561481857614802848385614e94565b60609390930192600292909201916001016147ef565b50505050505050565b61482b8382614a5f565b818160005260208060002060005b8681101561481857833582559282019260019182019101614839565b67ffffffffffffffff83111561486d5761486d614a35565b6148778154614990565b600080601f8611601f841181811715614896576148938661451c565b92505b80156148c5576020601f890104830160208910156148b15750825b6148c36020601f88010485018261471a565b505b5080600181146148f1576000945087156148e0578387013594505b6148ea88866149c5565b8655614943565b601f198816945082845b8681101561491b57888601358255602095860195600190920191016148fb565b508886101561493857878501356000196008601f8c16021c191681555b506001600289020186555b5050505050505050565b60005b83811015614968578181015183820152602001614950565b83811115610c505750506000910152565b60008161498857614988614a09565b506000190190565b6002810460018216806149a457607f821691505b60208210811415612c8857634e487b7160e01b600052602260045260246000fd5b600019600883021c191660029091021790565b60006000198214156149ec576149ec614a09565b5060010190565b634e487b7160e01b600052600060045260246000fd5b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b8054600019836020036008021c1681555050565b68010000000000000000821115614a7857614a78614a35565b80548282558083101561169757816000526020600020610c5082820185830161471a565b806000526020600020614ab08382546149c5565b9091556000905550565b60089190910291821b60001990921b9182169119161790565b6001600160a01b0382166001600160a01b03198254161781555050565b8135614afb81614eef565b614b058183614ad3565b506001602080840135828401556040840135600284015560608401356003840155614b33608085018561439f565b614b41818360048801614821565b5050614b5060a085018561439f565b614b5e818360058801614821565b505060068301614b7160c086018661439f565b68010000000000000000811115614b8a57614b8a614a35565b825481845580821015614bc55760008481528581208381019083015b80821015614bc157614bb88383614a5f565b90880190614ba6565b5050505b5081614bd08461451c565b93506000805b83811015614c0557614be8838661439f565b614bf48183868b614e07565b505094870194918601918701614bd6565b5050505050505050614c1a60e08301836143e6565b610c5081836007860161472f565b8135614c3381614eef565b614c3d8183614ad3565b506001602080840135614c4f81614eef565b614c5b81848601614ad3565b5060026040850135614c6c81614eef565b614c7881838701614ad3565b5060036060860135818601556004614c93608088018861442d565b614ca08183858b01614855565b50506005808701614cb460a08a018a61439f565b68010000000000000000811115614ccd57614ccd614a35565b825481845580821015614da1577f33333333333333333333333333333333333333333333333333333333333333338082118b1615614d0d57614d0d614a09565b8083118b1615614d1f57614d1f614a09565b506000848152898120838702810190878402015b80821015614d9d57614d4783848454614aba565b8255828d8301558a8201614d5d84858354614aba565b815550898201614d6f84858354614aba565b90558189018054614d7f81614990565b8015614d9157614d9186828486614528565b50505090870190614d33565b5050505b50819650614dae8361451c565b9550600094508492505b80831015614de557614dd4614dcd8884614491565b8688614e20565b958701959483019491880191614db8565b5050505050505050506117b2614dfe60c0840184614472565b60068301614af0565b8115614e1557614e156149f3565b610c50848483614821565b8115614e2e57614e2e6149f3565b82358155600181016020840135614e4481614f04565b60038110614e5457614e54614a1f565b60ff1982541660ff8216811783555050506040830135600282015560608301356003820155614e86608084018461442d565b61087f818360048601614855565b8115614ea257614ea26149f3565b82358155600181016020840135614eb881614f11565b815460ff191660ff91909116178082556040850135614ed681614f11565b61ff008160081b1661ff00198316178355505050505050565b6001600160a01b03811681146106e657600080fd5b600381106106e657600080fd5b60ff811681146106e657600080fdfea2646970667358221220846094ddad90196ccba70c57193d60e3354ac67cee6b4d15258a69a4a2c5190e64736f6c63430008000033";

export class BasicSolverV1__factory extends ContractFactory {
  constructor(
    linkLibraryAddresses: BasicSolverV1LibraryAddresses,
    signer?: Signer
  ) {
    super(
      _abi,
      BasicSolverV1__factory.linkBytecode(linkLibraryAddresses),
      signer
    );
  }

  static linkBytecode(
    linkLibraryAddresses: BasicSolverV1LibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$94d7d2f22770e4b0d1a2b99fb2812308e2\\$__", "g"),
      linkLibraryAddresses["__$94d7d2f22770e4b0d1a2b99fb2812308e2$__"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BasicSolverV1> {
    return super.deploy(overrides || {}) as Promise<BasicSolverV1>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BasicSolverV1 {
    return super.attach(address) as BasicSolverV1;
  }
  connect(signer: Signer): BasicSolverV1__factory {
    return super.connect(signer) as BasicSolverV1__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BasicSolverV1Interface {
    return new utils.Interface(_abi) as BasicSolverV1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BasicSolverV1 {
    return new Contract(address, _abi, signerOrProvider) as BasicSolverV1;
  }
}

export interface BasicSolverV1LibraryAddresses {
  ["__$94d7d2f22770e4b0d1a2b99fb2812308e2$__"]: string;
}
