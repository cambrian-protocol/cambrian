/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SolverLib, SolverLibInterface } from "../SolverLib";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_this",
        type: "address",
      },
      {
        internalType: "address",
        name: "chainParent",
        type: "address",
      },
      {
        internalType: "address",
        name: "chainChild",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chainIndex",
        type: "uint256",
      },
    ],
    name: "addressFromChainIndex",
    outputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IERC20",
            name: "collateralToken",
            type: "IERC20",
          },
          {
            internalType: "bytes32",
            name: "questionId",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "parentCollectionId",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "conditionId",
            type: "bytes32",
          },
          {
            internalType: "uint256[]",
            name: "payouts",
            type: "uint256[]",
          },
          {
            internalType: "enum SolverLib.Status",
            name: "status",
            type: "SolverLib.Status",
          },
        ],
        internalType: "struct SolverLib.Condition",
        name: "condition",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "partition",
        type: "uint256",
      },
    ],
    name: "getCollectionId",
    outputs: [
      {
        internalType: "bytes32",
        name: "collectionId",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IERC20",
            name: "collateralToken",
            type: "IERC20",
          },
          {
            internalType: "bytes32",
            name: "questionId",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "parentCollectionId",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "conditionId",
            type: "bytes32",
          },
          {
            internalType: "uint256[]",
            name: "payouts",
            type: "uint256[]",
          },
          {
            internalType: "enum SolverLib.Status",
            name: "status",
            type: "SolverLib.Status",
          },
        ],
        internalType: "struct SolverLib.Condition",
        name: "condition",
        type: "tuple",
      },
      {
        internalType: "contract IERC20",
        name: "collateralToken",
        type: "IERC20",
      },
      {
        internalType: "uint256",
        name: "partition",
        type: "uint256",
      },
    ],
    name: "getPositionId",
    outputs: [
      {
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "executions",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isDeferred",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isConstant",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "dataType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "key",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "solverIndex",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct SolverLib.Ingest[]",
        name: "ingests",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "conditionVer",
        type: "uint256",
      },
    ],
    name: "ingestsValid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x61241761003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106101255760003560e01c806366662585116100bc5780639fa61fa31161008b578063b89c10e711610070578063b89c10e714610303578063ec7ac2f014610323578063f060d0b61461034357610125565b80639fa61fa3146102d0578063b1adb6f6146102f057610125565b80636666258514610250578063696d4661146102705780636a0a24f114610290578063764d6736146102b057610125565b80634dd0aa49116100f85780634dd0aa49146101ac5780635069a07c146101e357806359111fb5146102105780635cc1f6b51461023057610125565b806311ca1ac01461012a57806324b286021461014c578063366968281461016c57806348cc49d51461018c575b600080fd5b81801561013657600080fd5b5061014a610145366004611932565b610370565b005b81801561015857600080fd5b5061014a6101673660046118d0565b61038e565b81801561017857600080fd5b5061014a6101873660046117b0565b6103a8565b81801561019857600080fd5b5061014a6101a7366004611932565b61092d565b8180156101b857600080fd5b506101cc6101c7366004611977565b6109a0565b6040516101da929190611ee4565b60405180910390f35b8180156101ef57600080fd5b506102036101fe366004611748565b610a45565b6040516101da919061212e565b81801561021c57600080fd5b5061014a61022b3660046118d0565b610c9e565b61024361023e3660046116ae565b610cb4565b6040516101da9190612007565b81801561025c57600080fd5b5061014a61026b36600461163b565b610d22565b81801561027c57600080fd5b5061014a61028b3660046118d0565b610e71565b81801561029c57600080fd5b5061014a6102ab3660046118e8565b610e8c565b6102c36102be366004611878565b610eaf565b6040516101da9190612012565b6102e36102de3660046119f1565b610fc6565b6040516101da9190611e51565b6102c36102fe366004611835565b611096565b81801561030f57600080fd5b5061014a61031e3660046118d0565b61112c565b81801561032f57600080fd5b5061014a61033e3660046118d0565b6111a0565b81801561034f57600080fd5b5061036361035e3660046119c2565b6111b6565b6040516101da91906120a2565b6005828101805460ff1916909117905561038a828261092d565b5050565b6005810180546003919060ff19166001835b021790555050565b60006103b760808601866121bc565b905067ffffffffffffffff8111156103df57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610408578160200160208202803683370190505b509050600061041a60a08701876121bc565b905067ffffffffffffffff81111561044257634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561047557816020015b60608152602001906001900390816104605790505b50905060005b61048860808801886121bc565b905081101561051e576104e161049d89612336565b6104aa60208a018a61172c565b6104b760808b018b6121bc565b858181106104d557634e487b7160e01b600052603260045260246000fd5b90506020020135610eaf565b83828151811061050157634e487b7160e01b600052603260045260246000fd5b60209081029190910101528061051681612377565b91505061047b565b5060005b61052f60a08801886121bc565b90508110156107615761054560808801886121bc565b905067ffffffffffffffff81111561056d57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610596578160200160208202803683370190505b508282815181106105b757634e487b7160e01b600052603260045260246000fd5b602002602001018190525060005b6105d260808901896121bc565b905081101561074e578560006105eb60c08b018b6121bc565b8481811061060957634e487b7160e01b600052603260045260246000fd5b905060200281019061061b91906121bc565b8581811061063957634e487b7160e01b600052603260045260246000fd5b905060200201358152602001908152602001600020805461065990612342565b80601f016020809104026020016040519081016040528092919081815260200182805461068590612342565b80156106d25780601f106106a7576101008083540402835291602001916106d2565b820191906000526020600020905b8154815290600101906020018083116106b557829003601f168201915b50505050508060200190518101906106ea9190611714565b83838151811061070a57634e487b7160e01b600052603260045260246000fd5b6020026020010151828151811061073157634e487b7160e01b600052603260045260246000fd5b60209081029190910101528061074681612377565b9150506105c5565b508061075981612377565b915050610522565b5060005b61077260a08801886121bc565b905081101561092357735fbdb2315678afecb367f032d93f642f64180aa3632eb2c2d6878760006107a660a08d018d6121bc565b878181106107c457634e487b7160e01b600052603260045260246000fd5b90506020020135815260200190815260200160002080546107e490612342565b80601f016020809104026020016040519081016040528092919081815260200182805461081090612342565b801561085d5780601f106108325761010080835404028352916020019161085d565b820191906000526020600020905b81548152906001019060200180831161084057829003601f168201915b5050505050806020019051810190610875919061161f565b8686868151811061089657634e487b7160e01b600052603260045260246000fd5b6020026020010151896040516020016108af9190612012565b6040516020818303038152906040526040518663ffffffff1660e01b81526004016108de959493929190611e65565b600060405180830381600087803b1580156108f857600080fd5b505af115801561090c573d6000803e3d6000fd5b50505050808061091b90612377565b915050610765565b5050505050505050565b6001820154604051633124a62b60e21b8152735fbdb2315678afecb367f032d93f642f64180aa39163c49298ac9161096a9190859060040161201b565b600060405180830381600087803b15801561098457600080fd5b505af1158015610998573d6000803e3d6000fd5b505050505050565b60008073e7f1725e7734ce288f8367e1bb143e90bb3f051263e4445ce6856109c986600161231e565b886040518463ffffffff1660e01b81526004016109e893929190611f17565b602060405180830381600087803b158015610a0257600080fd5b505af1158015610a16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3a919061161f565b958695509350505050565b610a4d6113a4565b610a5a60e0860186612203565b8484604051602001610a6f9493929190611e1e565b60408051601f198184030181529190528051602091820120908201526001600160a01b038416610aa55760006040820152610b43565b604080517f68e014c50000000000000000000000000000000000000000000000000000000081526001600160a01b038616916368e014c591610aed9189013590600401612012565b60206040518083038186803b158015610b0557600080fd5b505afa158015610b19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3d9190611714565b60408201525b6020808201516040517f852c6ae2000000000000000000000000000000000000000000000000000000008152735fbdb2315678afecb367f032d93f642f64180aa39263852c6ae292610b9d9288928b013590600401611ec3565b60206040518083038186803b158015610bb557600080fd5b505afa158015610bc9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bed9190611714565b6060820152610bff602086018661172c565b6001600160a01b031681526020808201516040517fd96ee754000000000000000000000000000000000000000000000000000000008152735fbdb2315678afecb367f032d93f642f64180aa39263d96ee75492610c649288928b013590600401611ec3565b600060405180830381600087803b158015610c7e57600080fd5b505af1158015610c92573d6000803e3d6000fd5b50505050949350505050565b6005810180546002919060ff19166001836103a0565b6000805b83811015610d155782858583818110610ce157634e487b7160e01b600052603260045260246000fd5b9050602002810190610cf39190612248565b3514610d03576000915050610d1b565b80610d0d81612377565b915050610cb8565b50600190505b9392505050565b6001600160a01b038316610dd657610d3d602083018361172c565b6001600160a01b031663095ea7b3735fbdb2315678afecb367f032d93f642f64180aa384606001356040518363ffffffff1660e01b8152600401610d82929190611efe565b602060405180830381600087803b158015610d9c57600080fd5b505af1158015610db0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd491906116f8565b505b735fbdb2315678afecb367f032d93f642f64180aa36372ce4275610dfd602085018561172c565b60408401356060850135610e1460808801886121bc565b88606001356040518763ffffffff1660e01b8152600401610e3a969594939291906120b5565b600060405180830381600087803b158015610e5457600080fd5b505af1158015610e68573d6000803e3d6000fd5b50505050505050565b60058101805460ff19166006179055610e898161112c565b50565b60058301805460ff19166002179055610ea96004840183836113d6565b50505050565b6040808401516060850151915163856296f760e01b8152600092735fbdb2315678afecb367f032d93f642f64180aa39283926339dd7530928892859263856296f792610f0092918b9060040161208c565b60206040518083038186803b158015610f1857600080fd5b505afa158015610f2c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f509190611714565b6040518363ffffffff1660e01b8152600401610f6d929190611efe565b60206040518083038186803b158015610f8557600080fd5b505afa158015610f99573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fbd9190611714565b95945050505050565b600081861415610fd7575083610fbd565b8186101561106257604051631c1bd82f60e11b81526001600160a01b03851690633837b05e9061100b908990600401612012565b60206040518083038186803b15801561102357600080fd5b505afa158015611037573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105b919061161f565b9050610fbd565b81861115610fbd57604051631c1bd82f60e11b81526001600160a01b03841690633837b05e9061100b908990600401612012565b6040805163856296f760e01b8152600091735fbdb2315678afecb367f032d93f642f64180aa39163856296f7916110dc919087013590606088013590879060040161208c565b60206040518083038186803b1580156110f457600080fd5b505afa158015611108573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1b9190611714565b6001810154604051633124a62b60e21b8152735fbdb2315678afecb367f032d93f642f64180aa39163c49298ac9161116b91906004808701910161203c565b600060405180830381600087803b15801561118557600080fd5b505af1158015611199573d6000803e3d6000fd5b5050505050565b6005810180546004919060ff19166001836103a0565b81546060908360006111c783612377565b90915550506001830154610100900460ff1661130e576003830154604051631c1bd82f60e11b81526000916001600160a01b03851691633837b05e9161120f91600401612012565b60206040518083038186803b15801561122757600080fd5b505afa15801561123b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061125f919061161f565b9050600080826001600160a01b03168660040160405161127f9190611d83565b600060405180830381855afa9150503d80600081146112ba576040519150601f19603f3d011682016040523d82523d6000602084013e6112bf565b606091505b509150915081611304576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112fb906120f7565b60405180910390fd5b925061139e915050565b82600401805461131d90612342565b80601f016020809104026020016040519081016040528092919081815260200182805461134990612342565b80156113965780601f1061136b57610100808354040283529160200191611396565b820191906000526020600020905b81548152906001019060200180831161137957829003601f168201915b505050505090505b92915050565b6040805160c081018252600080825260208201819052918101829052606080820183905260808201529060a082015290565b828054828255906000526020600020908101928215611411579160200282015b828111156114115782358255916020019190600101906113f6565b5061141d929150611421565b5090565b5b8082111561141d5760008155600101611422565b8035611441816123be565b919050565b60008083601f840112611457578182fd5b50813567ffffffffffffffff81111561146e578182fd5b602083019150836020808302850101111561148857600080fd5b9250929050565b600082601f83011261149f578081fd5b8135602067ffffffffffffffff808311156114bc576114bc6123a8565b818302604051838282010181811084821117156114db576114db6123a8565b604052848152838101925086840182880185018910156114f9578687fd5b8692505b8583101561151b5780358452928401926001929092019184016114fd565b50979650505050505050565b8035611441816123d3565b80356007811061144157600080fd5b60006101008284031215611553578081fd5b50919050565b600060c08284031215611553578081fd5b600060c0828403121561157b578081fd5b60405160c0810167ffffffffffffffff828210818311171561159f5761159f6123a8565b816040528293506115af85611436565b835260208501356020840152604085013560408401526060850135606084015260808501359150808211156115e357600080fd5b506115f08582860161148f565b60808301525061160260a08401611532565b60a08201525092915050565b803560ff8116811461144157600080fd5b600060208284031215611630578081fd5b8151610d1b816123be565b60008060006060848603121561164f578182fd5b833561165a816123be565b9250602084013567ffffffffffffffff80821115611676578384fd5b61168287838801611541565b93506040860135915080821115611697578283fd5b506116a486828701611559565b9150509250925092565b6000806000604084860312156116c2578283fd5b833567ffffffffffffffff8111156116d8578384fd5b6116e486828701611446565b909790965060209590950135949350505050565b600060208284031215611709578081fd5b8151610d1b816123d3565b600060208284031215611725578081fd5b5051919050565b60006020828403121561173d578081fd5b8135610d1b816123be565b6000806000806080858703121561175d578182fd5b843567ffffffffffffffff811115611773578283fd5b61177f87828801611541565b9450506020850135611790816123be565b925060408501356117a0816123be565b9396929550929360600135925050565b600080600080600060a086880312156117c7578283fd5b853567ffffffffffffffff808211156117de578485fd5b6117ea89838a01611559565b965060208801359150808211156117ff578485fd5b5061180c88828901611541565b945050604086013561181d816123be565b94979396509394606081013594506080013592915050565b60008060408385031215611847578182fd5b823567ffffffffffffffff81111561185d578283fd5b61186985828601611559565b95602094909401359450505050565b60008060006060848603121561188c578081fd5b833567ffffffffffffffff8111156118a2578182fd5b6118ae8682870161156a565b93505060208401356118bf816123be565b929592945050506040919091013590565b6000602082840312156118e1578081fd5b5035919050565b6000806000604084860312156118fc578081fd5b83359250602084013567ffffffffffffffff811115611919578182fd5b61192586828701611446565b9497909650939450505050565b60008060408385031215611944578182fd5b82359150602083013567ffffffffffffffff811115611961578182fd5b61196d8582860161148f565b9150509250929050565b60008060006060848603121561198b578081fd5b833567ffffffffffffffff8111156119a1578182fd5b840160e081870312156119b2578182fd5b925060208401356118bf816123be565b600080604083850312156119d4578182fd5b8235915060208301356119e6816123be565b809150509250929050565b600080600080600060a08688031215611a08578283fd5b853594506020860135611a1a816123be565b93506040860135611a2a816123be565b92506060860135611a3a816123be565b949793965091946080013592915050565b6001600160a01b03169052565b818352602080840193600091908185020181018584845b87811015611aa5578284038952611a868288612273565b611a91868284611b8d565b9a87019a9550505090840190600101611a6f565b5091979650505050505050565b818352602080840193600091908185020181018584845b87811015611aa5578284038952813560de19883603018112611ae9578687fd5b87018035855260e086820135611afe816123d3565b611b0a88880182611c14565b506040611b18818401611527565b611b2482890182611c14565b50506060611b3381840161160e565b611b3f82890182611d7c565b50506080828101359087015260a0808301359087015260c0611b63818401846122bb565b93508282890152611b778389018583611c1a565b9c89019c97505050928601925050600101611ac9565b60008284527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831115611bbe578081fd5b6020830280836020870137939093016020019283525090919050565b6000815180845260208085019450808401835b83811015611c0957815187529582019590820190600101611bed565b509495945050505050565b15159052565b60008284528282602086013780602084860101526020601f19601f85011685010190509392505050565b60008151808452815b81811015611c6957602081850181015186830182015201611c4d565b81811115611c7a5782602083870101525b50601f01601f19169290920160200192915050565b60078110611cad57634e487b7160e01b600052602160045260246000fd5b9052565b6000610100611cc884611cc385611436565b611a4b565b602083013560208501526040830135604085015260608301356060850152611cf36080840184612273565b826080870152611d068387018284611b8d565b92505050611d1760a0840184612273565b85830360a0870152611d2a838284611b8d565b92505050611d3b60c0840184612273565b85830360c0870152611d4e838284611a58565b92505050611d5f60e08401846122bb565b85830360e0870152611d72838284611c1a565b9695505050505050565b60ff169052565b8154600090819060028104600180831680611d9f57607f831692505b6020808410821415611dbf57634e487b7160e01b87526022600452602487fd5b818015611dd35760018114611de457611e10565b60ff19861689528489019650611e10565b611ded8a612267565b885b86811015611e085781548b820152908501908301611def565b505084890196505b509498975050505050505050565b6000848683375060609290921b6bffffffffffffffffffffffff1916919092019081526014810191909152603401919050565b6001600160a01b0391909116815260200190565b60006001600160a01b03808816835280871660208401525060a06040830152611e9160a0830186611bda565b8281036060840152611ea38186611bda565b90508281036080840152611eb78185611c44565b98975050505050505050565b6001600160a01b039390931683526020830191909152604082015260600190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b03929092168252602082015260400190565b60006001600160a01b0385168252836020830152606060408301528235611f3d816123be565b611f4a6060840182611a4b565b50611f5760208401611436565b611f646080840182611a4b565b50611f7160408401611436565b611f7e60a0840182611a4b565b50606083013560c0830152611f9660808401846122bb565b60e080850152611fab61014085018284611c1a565b915050611fbb60a0850185612273565b605f198086850301610100870152611fd4848385611ab2565b9350611fe360c0880188612300565b925080868503016101208701525050611ffc8282611cb1565b979650505050505050565b901515815260200190565b90815260200190565b6000838252604060208301526120346040830184611bda565b949350505050565b60006040820184835260206040818501528185548084526060860191508685528285209350845b8181101561207f57845483526001948501949284019201612063565b5090979650505050505050565b9283526020830191909152604082015260600190565b600060208252610d1b6020830184611c44565b60006001600160a01b038816825286602083015285604083015260a060608301526120e460a083018587611b8d565b9050826080830152979650505050505050565b60208082526018908201527f496e676573742073746174696363616c6c206661696c65640000000000000000604082015260600190565b6000602080835260e083016001600160a01b03855116828501528185015160408501526040850151606085015260608501516080850152608085015160c060a08601528181518084526101008701915084830193508592505b808310156121a75783518252928401926001929092019190840190612187565b5060a08701519350611d7260c0870185611c8f565b6000808335601e198436030181126121d2578283fd5b83018035915067ffffffffffffffff8211156121ec578283fd5b602090810192508102360382131561148857600080fd5b6000808335601e19843603018112612219578283fd5b83018035915067ffffffffffffffff821115612233578283fd5b60200191503681900382131561148857600080fd5b6000823560de1983360301811261225d578182fd5b9190910192915050565b60009081526020902090565b6000808335601e19843603018112612289578283fd5b830160208101925035905067ffffffffffffffff8111156122a957600080fd5b60208102360383131561148857600080fd5b6000808335601e198436030181126122d1578283fd5b830160208101925035905067ffffffffffffffff8111156122f157600080fd5b80360383131561148857600080fd5b6000823560fe19833603018112612315578182fd5b90910192915050565b6000821982111561233157612331612392565b500190565b600061139e368361156a565b60028104600182168061235657607f821691505b6020821081141561155357634e487b7160e01b600052602260045260246000fd5b600060001982141561238b5761238b612392565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610e8957600080fd5b8015158114610e8957600080fdfea2646970667358221220a242c9028001237a78fd5d610b66f39ef08d0f3b9f2229b00717b78e972e86ee64736f6c63430008000033";

export class SolverLib__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SolverLib> {
    return super.deploy(overrides || {}) as Promise<SolverLib>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SolverLib {
    return super.attach(address) as SolverLib;
  }
  connect(signer: Signer): SolverLib__factory {
    return super.connect(signer) as SolverLib__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SolverLibInterface {
    return new utils.Interface(_abi) as SolverLibInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SolverLib {
    return new Contract(address, _abi, signerOrProvider) as SolverLib;
  }
}
