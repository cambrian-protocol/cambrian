/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SolverLib, SolverLibInterface } from "../SolverLib";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_this",
        type: "address",
      },
      {
        internalType: "address",
        name: "chainParent",
        type: "address",
      },
      {
        internalType: "address",
        name: "chainChild",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chainIndex",
        type: "uint256",
      },
    ],
    name: "addressFromChainIndex",
    outputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IERC20",
            name: "collateralToken",
            type: "IERC20",
          },
          {
            internalType: "bytes32",
            name: "questionId",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "parentCollectionId",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "conditionId",
            type: "bytes32",
          },
          {
            internalType: "uint256[]",
            name: "payouts",
            type: "uint256[]",
          },
          {
            internalType: "enum SolverLib.Status",
            name: "status",
            type: "SolverLib.Status",
          },
        ],
        internalType: "struct SolverLib.Condition",
        name: "condition",
        type: "tuple",
      },
      {
        internalType: "contract IERC20",
        name: "collateralToken",
        type: "IERC20",
      },
      {
        internalType: "contract IConditionalTokens",
        name: "ct",
        type: "IConditionalTokens",
      },
      {
        internalType: "uint256",
        name: "partition",
        type: "uint256",
      },
    ],
    name: "getPositionId",
    outputs: [
      {
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "executions",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isDeferred",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isConstant",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "port",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "key",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "solverIndex",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct SolverLib.Ingest[]",
        name: "ingests",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "conditionVer",
        type: "uint256",
      },
    ],
    name: "ingestsValid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x61157961003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100875760003560e01c806396aac0a61161006557806396aac0a6146101045780639fa61fa314610124578063dffa696f14610144578063f060d0b61461016457610087565b80633ed7c7171461008c5780635cc1f6b5146100c257806365697f7a146100e2575b600080fd5b81801561009857600080fd5b506100ac6100a7366004610e41565b610191565b6040516100b99190611341565b60405180910390f35b6100d56100d0366004610d94565b6103ba565b6040516100b9919061125a565b8180156100ee57600080fd5b506101026100fd366004610f10565b610475565b005b610117610112366004610fc1565b610780565b6040516100b99190611265565b61013761013236600461104d565b610890565b6040516100b991906111e2565b81801561015057600080fd5b5061010261015f366004610ec0565b610960565b81801561017057600080fd5b5061018461017f366004611029565b6109d5565b6040516100b991906112de565b610199610bc3565b6101a660c087018761143d565b85856040516020016101bb94939291906111af565b60408051601f198184030181529190528051602091820120908201526001600160a01b0385166101f15760006040820152610290565b6040517f84dbd3910000000000000000000000000000000000000000000000000000000081526001600160a01b038616906384dbd3919061023a9060208a013590600401611265565b60206040518083038186803b15801561025257600080fd5b505afa158015610266573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028a9190610e29565b60408201525b60208101516040517f852c6ae20000000000000000000000000000000000000000000000000000000081526001600160a01b0384169163852c6ae2916102dd9188918b3590600401611239565b60206040518083038186803b1580156102f557600080fd5b505afa158015610309573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032d9190610e29565b606082015260208101516040517fd96ee7540000000000000000000000000000000000000000000000000000000081526001600160a01b0384169163d96ee7549161037f9188918b3590600401611239565b600060405180830381600087803b15801561039957600080fd5b505af11580156103ad573d6000803e3d6000fd5b5050505095945050505050565b6000805b83811015610468578484828181106103e657634e487b7160e01b600052603260045260246000fd5b90506020028101906103f89190611482565b610409906040810190602001610e09565b801561044757508285858381811061043157634e487b7160e01b600052603260045260246000fd5b90506020028101906104439190611482565b3514155b1561045657600091505061046e565b80610460816114ee565b9150506103be565b50600190505b9392505050565b60005b6104856060860186611427565b90508110156107765760006104d561049c8a6114ad565b89896104ab60608b018b611427565b878181106104c957634e487b7160e01b600052603260045260246000fd5b90506020020135610780565b905060005b6104e760808801886113d9565b90508110156107615760006104ff60a08901896113d9565b8581811061051d57634e487b7160e01b600052603260045260246000fd5b905060200281019061052f9190611427565b8381811061054d57634e487b7160e01b600052603260045260246000fd5b90506020020135111561074f576001600160a01b03881663f242432a8787600061057a60808d018d6113d9565b8981811061059857634e487b7160e01b600052603260045260246000fd5b90506020028101906105aa9190611427565b878181106105c857634e487b7160e01b600052603260045260246000fd5b90506020020135815260200190815260200160002080546105e8906114b9565b80601f0160208091040260200160405190810160405280929190818152602001828054610614906114b9565b80156106615780601f1061063657610100808354040283529160200191610661565b820191906000526020600020905b81548152906001019060200180831161064457829003601f168201915b50505050508060200190518101906106799190610d78565b8561068760a08d018d6113d9565b898181106106a557634e487b7160e01b600052603260045260246000fd5b90506020028101906106b79190611427565b878181106106d557634e487b7160e01b600052603260045260246000fd5b90506020020135896040516020016106ed9190611265565b6040516020818303038152906040526040518663ffffffff1660e01b815260040161071c9594939291906111f6565b600060405180830381600087803b15801561073657600080fd5b505af115801561074a573d6000803e3d6000fd5b505050505b80610759816114ee565b9150506104da565b5050808061076e906114ee565b915050610478565b5050505050505050565b6000826001600160a01b03166339dd753085856001600160a01b031663856296f789604001518a60600151886040518463ffffffff1660e01b81526004016107ca939291906112c8565b60206040518083038186803b1580156107e257600080fd5b505afa1580156107f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081a9190610e29565b6040518363ffffffff1660e01b81526004016108379291906112f1565b60206040518083038186803b15801561084f57600080fd5b505afa158015610863573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108879190610e29565b95945050505050565b6000818614156108a1575083610887565b8186101561092c57604051631c1bd82f60e11b81526001600160a01b03851690633837b05e906108d5908990600401611265565b60206040518083038186803b1580156108ed57600080fd5b505afa158015610901573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109259190610d78565b9050610887565b8186111561088757604051631c1bd82f60e11b81526001600160a01b03841690633837b05e906108d5908990600401611265565b6001600160a01b03811663c49298ac60208401356109816080860186611427565b6040518463ffffffff1660e01b815260040161099f9392919061126e565b600060405180830381600087803b1580156109b957600080fd5b505af11580156109cd573d6000803e3d6000fd5b505050505050565b81546060908360006109e6836114ee565b90915550506001830154610100900460ff16610b2d576003830154604051631c1bd82f60e11b81526000916001600160a01b03851691633837b05e91610a2e91600401611265565b60206040518083038186803b158015610a4657600080fd5b505afa158015610a5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7e9190610d78565b9050600080826001600160a01b031686600401604051610a9e9190611114565b600060405180830381855afa9150503d8060008114610ad9576040519150601f19603f3d011682016040523d82523d6000602084013e610ade565b606091505b509150915081610b23576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1a9061130a565b60405180910390fd5b9250610bbd915050565b826004018054610b3c906114b9565b80601f0160208091040260200160405190810160405280929190818152602001828054610b68906114b9565b8015610bb55780601f10610b8a57610100808354040283529160200191610bb5565b820191906000526020600020905b815481529060010190602001808311610b9857829003601f168201915b505050505090505b92915050565b6040805160c081018252600080825260208201819052918101829052606080820183905260808201529060a082015290565b600082601f830112610c05578081fd5b8135602067ffffffffffffffff80831115610c2257610c22611515565b81830260405183828201018181108482111715610c4157610c41611515565b60405284815283810192508684018288018501891015610c5f578687fd5b8692505b85831015610c81578035845292840192600192909201918401610c63565b50979650505050505050565b8035610c988161152b565b919050565b803560078110610c9857600080fd5b600060e08284031215610cbd578081fd5b50919050565b600060c08284031215610cbd578081fd5b600060c08284031215610ce5578081fd5b60405160c0810167ffffffffffffffff8282108183111715610d0957610d09611515565b81604052829350610d1985610c8d565b83526020850135602084015260408501356040840152606085013560608401526080850135915080821115610d4d57600080fd5b50610d5a85828601610bf5565b608083015250610d6c60a08401610c9d565b60a08201525092915050565b600060208284031215610d89578081fd5b815161046e8161152b565b600080600060408486031215610da8578182fd5b833567ffffffffffffffff80821115610dbf578384fd5b818601915086601f830112610dd2578384fd5b813581811115610de0578485fd5b8760208083028501011115610df3578485fd5b6020928301989097509590910135949350505050565b600060208284031215610e1a578081fd5b8135801515811461046e578182fd5b600060208284031215610e3a578081fd5b5051919050565b600080600080600060a08688031215610e58578081fd5b853567ffffffffffffffff811115610e6e578182fd5b610e7a88828901610cac565b9550506020860135610e8b8161152b565b93506040860135610e9b8161152b565b9250606086013591506080860135610eb28161152b565b809150509295509295909350565b60008060408385031215610ed2578182fd5b823567ffffffffffffffff811115610ee8578283fd5b610ef485828601610cc3565b9250506020830135610f058161152b565b809150509250929050565b600080600080600080600060e0888a031215610f2a578182fd5b873567ffffffffffffffff80821115610f41578384fd5b610f4d8b838c01610cc3565b985060208a01359150610f5f8261152b565b909650604089013590610f718261152b565b90955060608901359080821115610f86578384fd5b50610f938a828b01610cac565b9450506080880135610fa48161152b565b9699959850939692959460a0840135945060c09093013592915050565b60008060008060808587031215610fd6578182fd5b843567ffffffffffffffff811115610fec578283fd5b610ff887828801610cd4565b94505060208501356110098161152b565b925060408501356110198161152b565b9396929550929360600135925050565b6000806040838503121561103b578182fd5b823591506020830135610f058161152b565b600080600080600060a08688031215611064578283fd5b8535945060208601356110768161152b565b935060408601356110868161152b565b925060608601356110968161152b565b949793965091946080013592915050565b60008151808452815b818110156110cc576020818501810151868301820152016110b0565b818111156110dd5782602083870101525b50601f01601f19169290920160200192915050565b6007811061111057634e487b7160e01b600052602160045260246000fd5b9052565b815460009081906002810460018083168061113057607f831692505b602080841082141561115057634e487b7160e01b87526022600452602487fd5b8180156111645760018114611175576111a1565b60ff198616895284890196506111a1565b61117e8a6114a1565b885b868110156111995781548b820152908501908301611180565b505084890196505b509498975050505050505050565b6000848683375060609290921b6bffffffffffffffffffffffff1916919092019081526014810191909152603401919050565b6001600160a01b0391909116815260200190565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261122e60a08301846110a7565b979650505050505050565b6001600160a01b039390931683526020830191909152604082015260600190565b901515815260200190565b90815260200190565b6000848252604060208301528260408301527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8311156112ac578081fd5b6020830280856060850137919091016060019081529392505050565b9283526020830191909152604082015260600190565b60006020825261046e60208301846110a7565b6001600160a01b03929092168252602082015260400190565b60208082526018908201527f496e676573742073746174696363616c6c206661696c65640000000000000000604082015260600190565b6000602080835260e083016001600160a01b03855116828501528185015160408501526040850151606085015260608501516080850152608085015160c060a08601528181518084526101008701915084830193508592505b808310156113ba578351825292840192600192909201919084019061139a565b5060a087015193506113cf60c08701856110f2565b9695505050505050565b6000808335601e198436030181126113ef578283fd5b83018035915067ffffffffffffffff821115611409578283fd5b602090810192508102360382131561142057600080fd5b9250929050565b6000808335601e198436030181126113ef578182fd5b6000808335601e19843603018112611453578182fd5b83018035915067ffffffffffffffff82111561146d578283fd5b60200191503681900382131561142057600080fd5b6000823560de19833603018112611497578182fd5b9190910192915050565b60009081526020902090565b6000610bbd3683610cd4565b6002810460018216806114cd57607f821691505b60208210811415610cbd57634e487b7160e01b600052602260045260246000fd5b600060001982141561150e57634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461154057600080fd5b5056fea2646970667358221220e41e5dceb08e9bf003b01b4b68a080d5fdd8784993e147375121dc2f672b28aa64736f6c63430008000033";

export class SolverLib__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SolverLib> {
    return super.deploy(overrides || {}) as Promise<SolverLib>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SolverLib {
    return super.attach(address) as SolverLib;
  }
  connect(signer: Signer): SolverLib__factory {
    return super.connect(signer) as SolverLib__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SolverLibInterface {
    return new utils.Interface(_abi) as SolverLibInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SolverLib {
    return new Contract(address, _abi, signerOrProvider) as SolverLib;
  }
}
