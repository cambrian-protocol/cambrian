/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SolverLib, SolverLibInterface } from "../SolverLib";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_this",
        type: "address",
      },
      {
        internalType: "address",
        name: "chainParent",
        type: "address",
      },
      {
        internalType: "address",
        name: "chainChild",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chainIndex",
        type: "uint256",
      },
    ],
    name: "addressFromChainIndex",
    outputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "questionId",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "parentCollectionId",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "conditionId",
            type: "bytes32",
          },
          {
            internalType: "uint256[]",
            name: "payouts",
            type: "uint256[]",
          },
          {
            internalType: "enum SolverLib.Status",
            name: "status",
            type: "SolverLib.Status",
          },
        ],
        internalType: "struct SolverLib.Condition",
        name: "condition",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "partition",
        type: "uint256",
      },
    ],
    name: "getCanonCollectionId",
    outputs: [
      {
        internalType: "bytes32",
        name: "collectionId",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "questionId",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "parentCollectionId",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "conditionId",
            type: "bytes32",
          },
          {
            internalType: "uint256[]",
            name: "payouts",
            type: "uint256[]",
          },
          {
            internalType: "enum SolverLib.Status",
            name: "status",
            type: "SolverLib.Status",
          },
        ],
        internalType: "struct SolverLib.Condition",
        name: "condition",
        type: "tuple",
      },
      {
        internalType: "contract IERC20",
        name: "collateralToken",
        type: "IERC20",
      },
      {
        internalType: "uint256",
        name: "partition",
        type: "uint256",
      },
    ],
    name: "getPositionId",
    outputs: [
      {
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "executions",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isDeferred",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isConstant",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "port",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "key",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "solverIndex",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct SolverLib.Ingest[]",
        name: "ingests",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "conditionVer",
        type: "uint256",
      },
    ],
    name: "ingestsValid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x6125e061003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061015b5760003560e01c80635cc1f6b5116100d75780637a00026d1161008b578063b89c10e711610070578063b89c10e714610386578063ec7ac2f0146103a6578063f060d0b6146103c65761015b565b80637a00026d146103465780639fa61fa3146103665761015b565b8063696d4661116100bc578063696d4661146102f35780636a0a24f114610313578063764d6736146103335761015b565b80635cc1f6b5146102b357806366662585146102d35761015b565b8063443112931161012e5780634dd0aa49116101135780634dd0aa49146102385780635069a07c1461026657806359111fb5146102935761015b565b806344311293146101eb57806348cc49d5146102185761015b565b80630bc1c42a1461016057806311ca1ac01461018957806324b28602146101ab57806336696828146101cb575b600080fd5b61017361016e366004611923565b6103e6565b6040516101809190612184565b60405180910390f35b81801561019557600080fd5b506101a96101a4366004611a20565b610482565b005b8180156101b757600080fd5b506101a96101c63660046119be565b61049f565b8180156101d757600080fd5b506101a96101e636600461189e565b6104b9565b8180156101f757600080fd5b5061020b61020636600461175f565b6107d8565b6040516101809190612226565b81801561022457600080fd5b506101a9610233366004611a20565b610a3c565b81801561024457600080fd5b50610258610253366004611a65565b610aa4565b60405161018092919061203e565b81801561027257600080fd5b50610286610281366004611836565b610b49565b60405161018091906122e9565b81801561029f57600080fd5b506101a96102ae3660046119be565b610d87565b6102c66102c1366004611780565b610d9d565b6040516101809190612179565b8180156102df57600080fd5b506101a96102ee3660046116ec565b610e56565b8180156102ff57600080fd5b506101a961030e3660046119be565b610fa5565b81801561031f57600080fd5b506101a961032e3660046119d6565b610fc0565b610173610341366004611966565b610fe3565b81801561035257600080fd5b506101a961036136600461175f565b6110fb565b610379610374366004611aca565b611156565b6040516101809190611fc6565b81801561039257600080fd5b506101a96103a13660046119be565b611226565b8180156103b257600080fd5b506101a96103c13660046119be565b611298565b8180156103d257600080fd5b5061020b6103e1366004611a9b565b6112ab565b6040805163856296f760e01b8152600091735fbdb2315678afecb367f032d93f642f64180aa39163856296f79161042b91602088013591880135908790600401612210565b60206040518083038186803b15801561044357600080fd5b505afa158015610457573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047b9190611802565b9392505050565b60048201805460ff1916600517905561049b8282610a3c565b5050565b6004810180546003919060ff19166001835b021790555050565b60005b6104c96080860186612363565b90508110156107d05760006105246104e0886124d3565b6104ed602089018961181a565b6104fa60808a018a612363565b8681811061051857634e487b7160e01b600052603260045260246000fd5b90506020020135610fe3565b905060005b61053660a0880188612363565b90508110156107bb57600061054e60c0890189612363565b8581811061056c57634e487b7160e01b600052603260045260246000fd5b905060200281019061057e9190612363565b8381811061059c57634e487b7160e01b600052603260045260246000fd5b9050602002013511156107a957735fbdb2315678afecb367f032d93f642f64180aa363f242432a878760006105d460a08d018d612363565b898181106105f257634e487b7160e01b600052603260045260246000fd5b90506020028101906106049190612363565b8781811061062257634e487b7160e01b600052603260045260246000fd5b90506020020135815260200190815260200160002080546106429061250b565b80601f016020809104026020016040519081016040528092919081815260200182805461066e9061250b565b80156106bb5780601f10610690576101008083540402835291602001916106bb565b820191906000526020600020905b81548152906001019060200180831161069e57829003601f168201915b50505050508060200190518101906106d391906116d0565b856106e160c08d018d612363565b898181106106ff57634e487b7160e01b600052603260045260246000fd5b90506020028101906107119190612363565b8781811061072f57634e487b7160e01b600052603260045260246000fd5b90506020020135896040516020016107479190612184565b6040516020818303038152906040526040518663ffffffff1660e01b8152600401610776959493929190611fda565b600060405180830381600087803b15801561079057600080fd5b505af11580156107a4573d6000803e3d6000fd5b505050505b806107b381612540565b915050610529565b505080806107c890612540565b9150506104bc565b505050505050565b8154600160ff1990911681178084556040805160c08101825260ff8084161515825261010084041615156020820152620100009092046001600160a01b031690820152908301546060808301919091526002840154608083015260038401805491926000929091869160a0840191906108509061250b565b80601f016020809104026020016040519081016040528092919081815260200182805461087c9061250b565b80156108c95780601f1061089e576101008083540402835291602001916108c9565b820191906000526020600020905b8154815290600101906020018083116108ac57829003601f168201915b505050505081525050905080602001511561099c576060810151600090815260208490526040902080546108fc9061250b565b80601f01602080910402602001604051908101604052809291908181526020018280546109289061250b565b80156109755780601f1061094a57610100808354040283529160200191610975565b820191906000526020600020905b81548152906001019060200180831161095857829003601f168201915b505050505080602001905181019061098d91906116d0565b6001600160a01b031660408201525b60008082604001516001600160a01b031683608001518460a001516040516109c49190611edc565b60006040518083038185875af1925050503d8060008114610a01576040519150601f19603f3d011682016040523d82523d6000602084013e610a06565b606091505b509150915081610a315760405162461bcd60e51b8152600401610a289061227b565b60405180910390fd5b925050505b92915050565b8154604051633124a62b60e21b8152735fbdb2315678afecb367f032d93f642f64180aa39163c49298ac91610a769190859060040161218d565b600060405180830381600087803b158015610a9057600080fd5b505af11580156107d0573d6000803e3d6000fd5b60008073e7f1725e7734ce288f8367e1bb143e90bb3f051263a4bc29c885610acd8660016124bb565b886040518463ffffffff1660e01b8152600401610aec93929190612071565b602060405180830381600087803b158015610b0657600080fd5b505af1158015610b1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3e91906116d0565b958695509350505050565b610b51611475565b610b5e60e08601866123aa565b8484604051602001610b739493929190611f93565b60408051601f19818403018152919052805160209091012081526001600160a01b038416610ba75760006020820152610c45565b604080517f84dbd3910000000000000000000000000000000000000000000000000000000081526001600160a01b038616916384dbd39191610bef9189013590600401612184565b60206040518083038186803b158015610c0757600080fd5b505afa158015610c1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3f9190611802565b60208201525b80516040517f852c6ae2000000000000000000000000000000000000000000000000000000008152735fbdb2315678afecb367f032d93f642f64180aa39163852c6ae291610c9d91879160208b01359060040161201d565b60206040518083038186803b158015610cb557600080fd5b505afa158015610cc9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ced9190611802565b604080830191909152815190517fd96ee754000000000000000000000000000000000000000000000000000000008152735fbdb2315678afecb367f032d93f642f64180aa39163d96ee75491610d4d91879160208b01359060040161201d565b600060405180830381600087803b158015610d6757600080fd5b505af1158015610d7b573d6000803e3d6000fd5b50505050949350505050565b6004810180546002919060ff19166001836104b1565b6000805b83811015610e4b57848482818110610dc957634e487b7160e01b600052603260045260246000fd5b9050602002810190610ddb91906123ef565b610dec9060408101906020016117ca565b8015610e2a575082858583818110610e1457634e487b7160e01b600052603260045260246000fd5b9050602002810190610e2691906123ef565b3514155b15610e3957600091505061047b565b80610e4381612540565b915050610da1565b506001949350505050565b6001600160a01b038316610f0a57610e71602083018361181a565b6001600160a01b031663095ea7b3735fbdb2315678afecb367f032d93f642f64180aa384606001356040518363ffffffff1660e01b8152600401610eb6929190612058565b602060405180830381600087803b158015610ed057600080fd5b505af1158015610ee4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f0891906117e6565b505b735fbdb2315678afecb367f032d93f642f64180aa36372ce4275610f31602085018561181a565b60208401356040850135610f486080880188612363565b88606001356040518763ffffffff1660e01b8152600401610f6e96959493929190612239565b600060405180830381600087803b158015610f8857600080fd5b505af1158015610f9c573d6000803e3d6000fd5b50505050505050565b60048101805460ff19166006179055610fbd81611226565b50565b60048301805460ff19166002179055610fdd6003840183836114a0565b50505050565b6020830151604080850151905163856296f760e01b8152600092735fbdb2315678afecb367f032d93f642f64180aa39283926339dd7530928892859263856296f7926110359290918b90600401612210565b60206040518083038186803b15801561104d57600080fd5b505afa158015611061573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110859190611802565b6040518363ffffffff1660e01b81526004016110a2929190612058565b60206040518083038186803b1580156110ba57600080fd5b505afa1580156110ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110f29190611802565b95945050505050565b60005b82548110156111515761113e83828154811061112a57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060040201836107d8565b508061114981612540565b9150506110fe565b505050565b6000818614156111675750836110f2565b818610156111f257604051631c1bd82f60e11b81526001600160a01b03851690633837b05e9061119b908990600401612184565b60206040518083038186803b1580156111b357600080fd5b505afa1580156111c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111eb91906116d0565b90506110f2565b818611156110f257604051631c1bd82f60e11b81526001600160a01b03841690633837b05e9061119b908990600401612184565b8054604051633124a62b60e21b8152735fbdb2315678afecb367f032d93f642f64180aa39163c49298ac91611263919060038601906004016121cd565b600060405180830381600087803b15801561127d57600080fd5b505af1158015611291573d6000803e3d6000fd5b5050505050565b6004818101805460ff19166001836104b1565b81546060908360006112bc83612540565b90915550506001830154610100900460ff166113e0576003830154604051631c1bd82f60e11b81526000916001600160a01b03851691633837b05e9161130491600401612184565b60206040518083038186803b15801561131c57600080fd5b505afa158015611330573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061135491906116d0565b9050600080826001600160a01b0316866004016040516113749190611ef8565b600060405180830381855afa9150503d80600081146113af576040519150601f19603f3d011682016040523d82523d6000602084013e6113b4565b606091505b5091509150816113d65760405162461bcd60e51b8152600401610a28906122b2565b9250610a36915050565b8260040180546113ef9061250b565b80601f016020809104026020016040519081016040528092919081815260200182805461141b9061250b565b80156114685780601f1061143d57610100808354040283529160200191611468565b820191906000526020600020905b81548152906001019060200180831161144b57829003601f168201915b5050505050905092915050565b6040805160a08101825260008082526020820181905291810182905260608082015290608082015290565b8280548282559060005260206000209081019282156114db579160200282015b828111156114db5782358255916020019190600101906114c0565b506114e79291506114eb565b5090565b5b808211156114e757600081556001016114ec565b803561150b81612587565b919050565b60008083601f840112611521578182fd5b50813567ffffffffffffffff811115611538578182fd5b602083019150836020808302850101111561155257600080fd5b9250929050565b600082601f830112611569578081fd5b8135602067ffffffffffffffff8083111561158657611586612571565b818302604051838282010181811084821117156115a5576115a5612571565b604052848152838101925086840182880185018910156115c3578687fd5b8692505b858310156115e55780358452928401926001929092019184016115c7565b50979650505050505050565b803561150b8161259c565b6000610100828403121561160e578081fd5b50919050565b600060a0828403121561160e578081fd5b600060a08284031215611636578081fd5b60405160a0810167ffffffffffffffff828210818311171561165a5761165a612571565b81604052829350843583526020850135602084015260408501356040840152606085013591508082111561168d57600080fd5b5061169a85828601611559565b6060830152506080830135600781106116b257600080fd5b6080919091015292915050565b803560ff8116811461150b57600080fd5b6000602082840312156116e1578081fd5b815161047b81612587565b600080600060608486031215611700578182fd5b833561170b81612587565b9250602084013567ffffffffffffffff80821115611727578384fd5b611733878388016115fc565b93506040860135915080821115611748578283fd5b5061175586828701611614565b9150509250925092565b60008060408385031215611771578182fd5b50508035926020909101359150565b600080600060408486031215611794578081fd5b833567ffffffffffffffff8111156117aa578182fd5b6117b686828701611510565b909790965060209590950135949350505050565b6000602082840312156117db578081fd5b813561047b8161259c565b6000602082840312156117f7578081fd5b815161047b8161259c565b600060208284031215611813578081fd5b5051919050565b60006020828403121561182b578081fd5b813561047b81612587565b6000806000806080858703121561184b578182fd5b843567ffffffffffffffff811115611861578283fd5b61186d878288016115fc565b945050602085013561187e81612587565b9250604085013561188e81612587565b9396929550929360600135925050565b600080600080600060a086880312156118b5578283fd5b853567ffffffffffffffff808211156118cc578485fd5b6118d889838a01611614565b965060208801359150808211156118ed578485fd5b506118fa888289016115fc565b945050604086013561190b81612587565b94979396509394606081013594506080013592915050565b60008060408385031215611935578182fd5b823567ffffffffffffffff81111561194b578283fd5b61195785828601611614565b95602094909401359450505050565b60008060006060848603121561197a578081fd5b833567ffffffffffffffff811115611990578182fd5b61199c86828701611625565b93505060208401356119ad81612587565b929592945050506040919091013590565b6000602082840312156119cf578081fd5b5035919050565b6000806000604084860312156119ea578081fd5b83359250602084013567ffffffffffffffff811115611a07578182fd5b611a1386828701611510565b9497909650939450505050565b60008060408385031215611a32578182fd5b82359150602083013567ffffffffffffffff811115611a4f578182fd5b611a5b85828601611559565b9150509250929050565b600080600060608486031215611a79578081fd5b833567ffffffffffffffff811115611a8f578182fd5b61199c868287016115fc565b60008060408385031215611aad578182fd5b823591506020830135611abf81612587565b809150509250929050565b600080600080600060a08688031215611ae1578283fd5b853594506020860135611af381612587565b93506040860135611b0381612587565b92506060860135611b1381612587565b949793965091946080013592915050565b6001600160a01b03169052565b818352602080840193600091908185020181018584845b87811015611b7e578284038952611b5f8288612410565b611b6a868284611d3f565b9a87019a9550505090840190600101611b48565b5091979650505050505050565b8183526020808401936000918085028201810184845b87811015611c5357848303601f1901895281353688900360be19018112611bc6578687fd5b870160c08135611bd58161259c565b1515855281860135611be68161259c565b1515858701526040611bf9838201611500565b611c0582880182611b24565b5050606082810135908601526080808301359086015260a0611c2981840184612458565b93508282880152611c3d8388018583611d92565b9c88019c96505050928501925050600101611ba1565b5090979650505050505050565b8183526020808401936000918085028201810184845b87811015611c5357848303601f1901895281353688900360de19018112611c9b578687fd5b87018035845260e085820135611cb08161259c565b611cbc87870182611d8c565b506040611cca8184016115f1565b611cd682880182611d8c565b50506060611ce58184016116bf565b611cf182880182611ed5565b50506080828101359086015260a0808301359086015260c0611d1581840184612458565b93508282880152611d298388018583611d92565b9c88019c96505050928501925050600101611c76565b60008284527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831115611d70578081fd5b6020830280836020870137939093016020019283525090919050565b15159052565b60008284528282602086013780602084860101526020601f19601f85011685010190509392505050565b60008151808452611dd48160208601602086016124df565b601f01601f19169290920160200192915050565b60078110611e0657634e487b7160e01b600052602160045260246000fd5b9052565b6000610100611e2184611e1c85611500565b611b24565b602083013560208501526040830135604085015260608301356060850152611e4c6080840184612410565b826080870152611e5f8387018284611d3f565b92505050611e7060a0840184612410565b85830360a0870152611e83838284611b31565b92505050611e9460c0840184612410565b85830360c0870152611ea7838284611b31565b92505050611eb860e0840184612458565b85830360e0870152611ecb838284611d92565b9695505050505050565b60ff169052565b60008251611eee8184602087016124df565b9190910192915050565b8154600090819060028104600180831680611f1457607f831692505b6020808410821415611f3457634e487b7160e01b87526022600452602487fd5b818015611f485760018114611f5957611f85565b60ff19861689528489019650611f85565b611f628a612404565b885b86811015611f7d5781548b820152908501908301611f64565b505084890196505b509498975050505050505050565b6000848683375060609290921b6bffffffffffffffffffffffff1916919092019081526014810191909152603401919050565b6001600160a01b0391909116815260200190565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261201260a0830184611dbc565b979650505050505050565b6001600160a01b039390931683526020830191909152604082015260600190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b03929092168252602082015260400190565b60006001600160a01b03851682528360208301526060604083015261209c60608301611e1c85611500565b6120a860208401611500565b6120b56080840182611b24565b506120c260408401611500565b6120cf60a0840182611b24565b50606083013560c08301526120e76080840184612458565b6101008060e08601526120ff61016086018385611d92565b925061210e60a0870187612410565b9250605f19808786030183880152612127858584611c60565b945061213660c0890189612410565b945092508087860301610120880152612150858585611b8b565b945061215f60e089018961249d565b935080878603016101408801525050506120128282611e0a565b901515815260200190565b90815260200190565b60006040820184835260206040818501528185518084526060860191508287019350845b81811015611c53578451835293830193918301916001016121b1565b60006040820184835260206040818501528185548084526060860191508685528285209350845b81811015611c53578454835260019485019492840192016121f4565b9283526020830191909152604082015260600190565b60006020825261047b6020830184611dbc565b60006001600160a01b038816825286602083015285604083015260a0606083015261226860a083018587611d3f565b9050826080830152979650505050505050565b6020808252600c908201527f63616c6c206661696c7572650000000000000000000000000000000000000000604082015260600190565b60208082526018908201527f496e676573742073746174696363616c6c206661696c65640000000000000000604082015260600190565b6000602080835260c0830184518285015281850151604085015260408501516060850152606085015160a0608086015281815180845260e08701915084830193508592505b8083101561234e578351825292840192600192909201919084019061232e565b5060808701519350611ecb60a0870185611de8565b6000808335601e19843603018112612379578283fd5b83018035915067ffffffffffffffff821115612393578283fd5b602090810192508102360382131561155257600080fd5b6000808335601e198436030181126123c0578283fd5b83018035915067ffffffffffffffff8211156123da578283fd5b60200191503681900382131561155257600080fd5b6000823560de19833603018112611eee578182fd5b60009081526020902090565b6000808335601e19843603018112612426578283fd5b830160208101925035905067ffffffffffffffff81111561244657600080fd5b60208102360383131561155257600080fd5b6000808335601e1984360301811261246e578283fd5b830160208101925035905067ffffffffffffffff81111561248e57600080fd5b80360383131561155257600080fd5b6000823560fe198336030181126124b2578182fd5b90910192915050565b600082198211156124ce576124ce61255b565b500190565b6000610a363683611625565b60005b838110156124fa5781810151838201526020016124e2565b83811115610fdd5750506000910152565b60028104600182168061251f57607f821691505b6020821081141561160e57634e487b7160e01b600052602260045260246000fd5b60006000198214156125545761255461255b565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610fbd57600080fd5b8015158114610fbd57600080fdfea26469706673582212207acc3663126246a51e3d88d20647984e27ff6a210f725600d24ca6a5cf422d3364736f6c63430008000033";

export class SolverLib__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SolverLib> {
    return super.deploy(overrides || {}) as Promise<SolverLib>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SolverLib {
    return super.attach(address) as SolverLib;
  }
  connect(signer: Signer): SolverLib__factory {
    return super.connect(signer) as SolverLib__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SolverLibInterface {
    return new utils.Interface(_abi) as SolverLibInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SolverLib {
    return new Contract(address, _abi, signerOrProvider) as SolverLib;
  }
}
