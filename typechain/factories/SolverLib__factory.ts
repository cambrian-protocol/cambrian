/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SolverLib, SolverLibInterface } from "../SolverLib";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_this",
        type: "address",
      },
      {
        internalType: "address",
        name: "chainParent",
        type: "address",
      },
      {
        internalType: "address",
        name: "chainChild",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chainIndex",
        type: "uint256",
      },
    ],
    name: "addressFromChainIndex",
    outputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IERC20",
            name: "collateralToken",
            type: "IERC20",
          },
          {
            internalType: "bytes32",
            name: "questionId",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "parentCollectionId",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "conditionId",
            type: "bytes32",
          },
          {
            internalType: "uint256[]",
            name: "payouts",
            type: "uint256[]",
          },
          {
            internalType: "enum SolverLib.Status",
            name: "status",
            type: "SolverLib.Status",
          },
        ],
        internalType: "struct SolverLib.Condition",
        name: "condition",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "partition",
        type: "uint256",
      },
    ],
    name: "getCollectionId",
    outputs: [
      {
        internalType: "bytes32",
        name: "collectionId",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IERC20",
            name: "collateralToken",
            type: "IERC20",
          },
          {
            internalType: "bytes32",
            name: "questionId",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "parentCollectionId",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "conditionId",
            type: "bytes32",
          },
          {
            internalType: "uint256[]",
            name: "payouts",
            type: "uint256[]",
          },
          {
            internalType: "enum SolverLib.Status",
            name: "status",
            type: "SolverLib.Status",
          },
        ],
        internalType: "struct SolverLib.Condition",
        name: "condition",
        type: "tuple",
      },
      {
        internalType: "contract IERC20",
        name: "collateralToken",
        type: "IERC20",
      },
      {
        internalType: "uint256",
        name: "partition",
        type: "uint256",
      },
    ],
    name: "getPositionId",
    outputs: [
      {
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "executions",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isDeferred",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isConstant",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "dataType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "key",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "solverIndex",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct SolverLib.Ingest[]",
        name: "ingests",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "conditionVer",
        type: "uint256",
      },
    ],
    name: "ingestsValid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x6125c561003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106101255760003560e01c806366662585116100bc5780639fa61fa31161008b578063b89c10e711610070578063b89c10e714610303578063ec7ac2f014610323578063f060d0b61461034357610125565b80639fa61fa3146102d0578063b1adb6f6146102f057610125565b80636666258514610250578063696d4661146102705780636a0a24f114610290578063764d6736146102b057610125565b80634dd0aa49116100f85780634dd0aa49146101ac5780635069a07c146101e357806359111fb5146102105780635cc1f6b51461023057610125565b806311ca1ac01461012a57806324b286021461014c578063366968281461016c57806348cc49d51461018c575b600080fd5b81801561013657600080fd5b5061014a610145366004611a98565b610370565b005b81801561015857600080fd5b5061014a610167366004611a36565b61038e565b81801561017857600080fd5b5061014a610187366004611916565b6103a8565b81801561019857600080fd5b5061014a6101a7366004611a98565b61092d565b8180156101b857600080fd5b506101cc6101c7366004611add565b6109a0565b6040516101da929190612044565b60405180910390f35b8180156101ef57600080fd5b506102036101fe3660046118ae565b610a45565b6040516101da9190612281565b81801561021c57600080fd5b5061014a61022b366004611a36565b610caf565b61024361023e366004611814565b610cc5565b6040516101da9190612167565b81801561025c57600080fd5b5061014a61026b36600461168b565b610d33565b81801561027c57600080fd5b5061014a61028b366004611a36565b610e82565b81801561029c57600080fd5b5061014a6102ab366004611a4e565b610e9d565b6102c36102be36600461199b565b610ec0565b6040516101da9190612172565b6102e36102de366004611b57565b610fd7565b6040516101da9190611fb1565b6102c36102fe3660046119f3565b6110a7565b81801561030f57600080fd5b5061014a61031e366004611a36565b61113c565b81801561032f57600080fd5b5061014a61033e366004611a36565b6111b0565b81801561034f57600080fd5b5061036361035e366004611b28565b6111c6565b6040516101da91906121f5565b6005828101805460ff1916909117905561038a828261092d565b5050565b6005810180546003919060ff19166001835b021790555050565b60006103b7608086018661230f565b905067ffffffffffffffff8111156103df57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610408578160200160208202803683370190505b509050600061041a60a087018761230f565b905067ffffffffffffffff81111561044257634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561047557816020015b60608152602001906001900390816104605790505b50905060005b610488608088018861230f565b905081101561051e576104e161049d896124d7565b6104aa60208a018a611892565b6104b760808b018b61230f565b858181106104d557634e487b7160e01b600052603260045260246000fd5b90506020020135610ec0565b83828151811061050157634e487b7160e01b600052603260045260246000fd5b60209081029190910101528061051681612518565b91505061047b565b5060005b61052f60a088018861230f565b905081101561076157610545608088018861230f565b905067ffffffffffffffff81111561056d57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610596578160200160208202803683370190505b508282815181106105b757634e487b7160e01b600052603260045260246000fd5b602002602001018190525060005b6105d2608089018961230f565b905081101561074e578560006105eb60c08b018b61230f565b8481811061060957634e487b7160e01b600052603260045260246000fd5b905060200281019061061b919061230f565b8581811061063957634e487b7160e01b600052603260045260246000fd5b9050602002013581526020019081526020016000208054610659906124e3565b80601f0160208091040260200160405190810160405280929190818152602001828054610685906124e3565b80156106d25780601f106106a7576101008083540402835291602001916106d2565b820191906000526020600020905b8154815290600101906020018083116106b557829003601f168201915b50505050508060200190518101906106ea919061187a565b83838151811061070a57634e487b7160e01b600052603260045260246000fd5b6020026020010151828151811061073157634e487b7160e01b600052603260045260246000fd5b60209081029190910101528061074681612518565b9150506105c5565b508061075981612518565b915050610522565b5060005b61077260a088018861230f565b905081101561092357735fbdb2315678afecb367f032d93f642f64180aa3632eb2c2d6878760006107a660a08d018d61230f565b878181106107c457634e487b7160e01b600052603260045260246000fd5b90506020020135815260200190815260200160002080546107e4906124e3565b80601f0160208091040260200160405190810160405280929190818152602001828054610810906124e3565b801561085d5780601f106108325761010080835404028352916020019161085d565b820191906000526020600020905b81548152906001019060200180831161084057829003601f168201915b5050505050806020019051810190610875919061166f565b8686868151811061089657634e487b7160e01b600052603260045260246000fd5b6020026020010151896040516020016108af9190612172565b6040516020818303038152906040526040518663ffffffff1660e01b81526004016108de959493929190611fc5565b600060405180830381600087803b1580156108f857600080fd5b505af115801561090c573d6000803e3d6000fd5b50505050808061091b90612518565b915050610765565b5050505050505050565b6001820154604051633124a62b60e21b8152735fbdb2315678afecb367f032d93f642f64180aa39163c49298ac9161096a9190859060040161217b565b600060405180830381600087803b15801561098457600080fd5b505af1158015610998573d6000803e3d6000fd5b505050505050565b60008073e7f1725e7734ce288f8367e1bb143e90bb3f051263e4445ce6856109c98660016124bf565b886040518463ffffffff1660e01b81526004016109e893929190612077565b602060405180830381600087803b158015610a0257600080fd5b505af1158015610a16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3a919061166f565b958695509350505050565b610a4d6113b4565b610a5a60e0860186612356565b8484604051602001610a6f9493929190611f7e565b60408051601f198184030181529190528051602091820120908201526001600160a01b038416610aa55760006040820152610b54565b610b4e846001600160a01b0316637c1236276040518163ffffffff1660e01b815260040160006040518083038186803b158015610ae157600080fd5b505afa158015610af5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b1d91908101906116fe565b8381518110610b3c57634e487b7160e01b600052603260045260246000fd5b602002602001015186604001356110a7565b60408201525b6020808201516040517f852c6ae2000000000000000000000000000000000000000000000000000000008152735fbdb2315678afecb367f032d93f642f64180aa39263852c6ae292610bae9288928b013590600401612023565b60206040518083038186803b158015610bc657600080fd5b505afa158015610bda573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bfe919061187a565b6060820152610c106020860186611892565b6001600160a01b031681526020808201516040517fd96ee754000000000000000000000000000000000000000000000000000000008152735fbdb2315678afecb367f032d93f642f64180aa39263d96ee75492610c759288928b013590600401612023565b600060405180830381600087803b158015610c8f57600080fd5b505af1158015610ca3573d6000803e3d6000fd5b50505050949350505050565b6005810180546002919060ff19166001836103a0565b6000805b83811015610d265782858583818110610cf257634e487b7160e01b600052603260045260246000fd5b9050602002810190610d04919061239b565b3514610d14576000915050610d2c565b80610d1e81612518565b915050610cc9565b50600190505b9392505050565b6001600160a01b038316610de757610d4e6020830183611892565b6001600160a01b031663095ea7b3735fbdb2315678afecb367f032d93f642f64180aa384606001356040518363ffffffff1660e01b8152600401610d9392919061205e565b602060405180830381600087803b158015610dad57600080fd5b505af1158015610dc1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de5919061185e565b505b735fbdb2315678afecb367f032d93f642f64180aa36372ce4275610e0e6020850185611892565b60408401356060850135610e25608088018861230f565b88606001356040518763ffffffff1660e01b8152600401610e4b96959493929190612208565b600060405180830381600087803b158015610e6557600080fd5b505af1158015610e79573d6000803e3d6000fd5b50505050505050565b60058101805460ff19166006179055610e9a8161113c565b50565b60058301805460ff19166002179055610eba6004840183836113e6565b50505050565b6040808401516060850151915163856296f760e01b8152600092735fbdb2315678afecb367f032d93f642f64180aa39283926339dd7530928892859263856296f792610f1192918b906004016121df565b60206040518083038186803b158015610f2957600080fd5b505afa158015610f3d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f61919061187a565b6040518363ffffffff1660e01b8152600401610f7e92919061205e565b60206040518083038186803b158015610f9657600080fd5b505afa158015610faa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fce919061187a565b95945050505050565b600081861415610fe8575083610fce565b8186101561107357604051631c1bd82f60e11b81526001600160a01b03851690633837b05e9061101c908990600401612172565b60206040518083038186803b15801561103457600080fd5b505afa158015611048573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061106c919061166f565b9050610fce565b81861115610fce57604051631c1bd82f60e11b81526001600160a01b03841690633837b05e9061101c908990600401612172565b6040808301516060840151915163856296f760e01b8152600092735fbdb2315678afecb367f032d93f642f64180aa39263856296f7926110ec929087906004016121df565b60206040518083038186803b15801561110457600080fd5b505afa158015611118573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2c919061187a565b6001810154604051633124a62b60e21b8152735fbdb2315678afecb367f032d93f642f64180aa39163c49298ac9161117b91906004808701910161219c565b600060405180830381600087803b15801561119557600080fd5b505af11580156111a9573d6000803e3d6000fd5b5050505050565b6005810180546004919060ff19166001836103a0565b81546060908360006111d783612518565b90915550506001830154610100900460ff1661131e576003830154604051631c1bd82f60e11b81526000916001600160a01b03851691633837b05e9161121f91600401612172565b60206040518083038186803b15801561123757600080fd5b505afa15801561124b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061126f919061166f565b9050600080826001600160a01b03168660040160405161128f9190611ee3565b600060405180830381855afa9150503d80600081146112ca576040519150601f19603f3d011682016040523d82523d6000602084013e6112cf565b606091505b509150915081611314576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161130b9061224a565b60405180910390fd5b92506113ae915050565b82600401805461132d906124e3565b80601f0160208091040260200160405190810160405280929190818152602001828054611359906124e3565b80156113a65780601f1061137b576101008083540402835291602001916113a6565b820191906000526020600020905b81548152906001019060200180831161138957829003601f168201915b505050505090505b92915050565b6040805160c081018252600080825260208201819052918101829052606080820183905260808201529060a082015290565b828054828255906000526020600020908101928215611421579160200282015b82811115611421578235825591602001919060010190611406565b5061142d929150611431565b5090565b5b8082111561142d5760008155600101611432565b80356114518161255f565b919050565b60008083601f840112611467578182fd5b50813567ffffffffffffffff81111561147e578182fd5b602083019150836020808302850101111561149857600080fd5b9250929050565b600082601f8301126114af578081fd5b813560206114c46114bf836123e4565b6123ba565b82815281810190858301838502870184018810156114e0578586fd5b855b858110156114fe578135845292840192908401906001016114e2565b5090979650505050505050565b600082601f83011261151b578081fd5b8151602061152b6114bf836123e4565b8281528181019085830183850287018401881015611547578586fd5b855b858110156114fe57815184529284019290840190600101611549565b803561145181612574565b80516114518161255f565b803561145181612582565b805161145181612582565b600061010082840312156115a3578081fd5b50919050565b600060c082840312156115a3578081fd5b600060c082840312156115cb578081fd5b60405160c0810167ffffffffffffffff82821081831117156115ef576115ef612549565b816040528293506115ff85611446565b8352602085013560208401526040850135604084015260608501356060840152608085013591508082111561163357600080fd5b506116408582860161149f565b60808301525061165260a0840161157b565b60a08201525092915050565b803560ff8116811461145157600080fd5b600060208284031215611680578081fd5b8151610d2c8161255f565b60008060006060848603121561169f578182fd5b83356116aa8161255f565b9250602084013567ffffffffffffffff808211156116c6578384fd5b6116d287838801611591565b935060408601359150808211156116e7578283fd5b506116f4868287016115a9565b9150509250925092565b60006020808385031215611710578182fd5b825167ffffffffffffffff80821115611727578384fd5b818501915085601f83011261173a578384fd5b81516117486114bf826123e4565b81815284810190848601875b84811015611805578151870160c080601f19838f03011215611774578a8bfd5b604080518281018181108b8211171561178f5761178f612549565b825261179c848d01611570565b8152818401518c820152606080850151838301526080850151818301525060a08401519150898211156117cd578c8dfd5b6117db8f8d8487010161150b565b60808201526117eb838501611586565b60a082015287525050509287019290870190600101611754565b50909998505050505050505050565b600080600060408486031215611828578081fd5b833567ffffffffffffffff81111561183e578182fd5b61184a86828701611456565b909790965060209590950135949350505050565b60006020828403121561186f578081fd5b8151610d2c81612574565b60006020828403121561188b578081fd5b5051919050565b6000602082840312156118a3578081fd5b8135610d2c8161255f565b600080600080608085870312156118c3578182fd5b843567ffffffffffffffff8111156118d9578283fd5b6118e587828801611591565b94505060208501356118f68161255f565b925060408501356119068161255f565b9396929550929360600135925050565b600080600080600060a0868803121561192d578283fd5b853567ffffffffffffffff80821115611944578485fd5b61195089838a016115a9565b96506020880135915080821115611965578485fd5b5061197288828901611591565b94505060408601356119838161255f565b94979396509394606081013594506080013592915050565b6000806000606084860312156119af578081fd5b833567ffffffffffffffff8111156119c5578182fd5b6119d1868287016115ba565b93505060208401356119e28161255f565b929592945050506040919091013590565b60008060408385031215611a05578182fd5b823567ffffffffffffffff811115611a1b578283fd5b611a27858286016115ba565b95602094909401359450505050565b600060208284031215611a47578081fd5b5035919050565b600080600060408486031215611a62578081fd5b83359250602084013567ffffffffffffffff811115611a7f578182fd5b611a8b86828701611456565b9497909650939450505050565b60008060408385031215611aaa578182fd5b82359150602083013567ffffffffffffffff811115611ac7578182fd5b611ad38582860161149f565b9150509250929050565b600080600060608486031215611af1578081fd5b833567ffffffffffffffff811115611b07578182fd5b840160e08187031215611b18578182fd5b925060208401356119e28161255f565b60008060408385031215611b3a578182fd5b823591506020830135611b4c8161255f565b809150509250929050565b600080600080600060a08688031215611b6e578283fd5b853594506020860135611b808161255f565b93506040860135611b908161255f565b92506060860135611ba08161255f565b949793965091946080013592915050565b6001600160a01b03169052565b8183526020808401936000918085028201810184845b878110156114fe57848303601f19018952611bef8288612414565b611bfa858284611ced565b9a86019a9450505090830190600101611bd4565b8183526020808401936000918085028201810184845b878110156114fe57848303601f1901895281353688900360de19018112611c49578687fd5b87018035845260e085820135611c5e81612574565b611c6a87870182611d74565b506040611c78818401611565565b611c8482880182611d74565b50506060611c9381840161165e565b611c9f82880182611edc565b50506080828101359086015260a0808301359086015260c0611cc38184018461245c565b93508282880152611cd78388018583611d7a565b9c88019c96505050928501925050600101611c24565b60008284527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831115611d1e578081fd5b6020830280836020870137939093016020019283525090919050565b6000815180845260208085019450808401835b83811015611d6957815187529582019590820190600101611d4d565b509495945050505050565b15159052565b60008284528282602086013780602084860101526020601f19601f85011685010190509392505050565b60008151808452815b81811015611dc957602081850181015186830182015201611dad565b81811115611dda5782602083870101525b50601f01601f19169290920160200192915050565b60078110611e0d57634e487b7160e01b600052602160045260246000fd5b9052565b6000610100611e2884611e2385611446565b611bb1565b602083013560208501526040830135604085015260608301356060850152611e536080840184612414565b826080870152611e668387018284611ced565b92505050611e7760a0840184612414565b85830360a0870152611e8a838284611ced565b92505050611e9b60c0840184612414565b85830360c0870152611eae838284611bbe565b92505050611ebf60e084018461245c565b85830360e0870152611ed2838284611d7a565b9695505050505050565b60ff169052565b8154600090819060028104600180831680611eff57607f831692505b6020808410821415611f1f57634e487b7160e01b87526022600452602487fd5b818015611f335760018114611f4457611f70565b60ff19861689528489019650611f70565b611f4d8a612408565b885b86811015611f685781548b820152908501908301611f4f565b505084890196505b509498975050505050505050565b6000848683375060609290921b6bffffffffffffffffffffffff1916919092019081526014810191909152603401919050565b6001600160a01b0391909116815260200190565b60006001600160a01b03808816835280871660208401525060a06040830152611ff160a0830186611d3a565b82810360608401526120038186611d3a565b905082810360808401526120178185611da4565b98975050505050505050565b6001600160a01b039390931683526020830191909152604082015260600190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b03929092168252602082015260400190565b60006001600160a01b038516825283602083015260606040830152823561209d8161255f565b6120aa6060840182611bb1565b506120b760208401611446565b6120c46080840182611bb1565b506120d160408401611446565b6120de60a0840182611bb1565b50606083013560c08301526120f6608084018461245c565b60e08085015261210b61014085018284611d7a565b91505061211b60a0850185612414565b605f198086850301610100870152612134848385611c0e565b935061214360c08801886124a1565b92508086850301610120870152505061215c8282611e11565b979650505050505050565b901515815260200190565b90815260200190565b6000838252604060208301526121946040830184611d3a565b949350505050565b60006040820184835260206040818501528185548084526060860191508685528285209350845b818110156114fe578454835260019485019492840192016121c3565b9283526020830191909152604082015260600190565b600060208252610d2c6020830184611da4565b60006001600160a01b038816825286602083015285604083015260a0606083015261223760a083018587611ced565b9050826080830152979650505050505050565b60208082526018908201527f496e676573742073746174696363616c6c206661696c65640000000000000000604082015260600190565b6000602080835260e083016001600160a01b03855116828501528185015160408501526040850151606085015260608501516080850152608085015160c060a08601528181518084526101008701915084830193508592505b808310156122fa57835182529284019260019290920191908401906122da565b5060a08701519350611ed260c0870185611def565b6000808335601e19843603018112612325578283fd5b83018035915067ffffffffffffffff82111561233f578283fd5b602090810192508102360382131561149857600080fd5b6000808335601e1984360301811261236c578283fd5b83018035915067ffffffffffffffff821115612386578283fd5b60200191503681900382131561149857600080fd5b6000823560de198336030181126123b0578182fd5b9190910192915050565b60405181810167ffffffffffffffff811182821017156123dc576123dc612549565b604052919050565b600067ffffffffffffffff8211156123fe576123fe612549565b5060209081020190565b60009081526020902090565b6000808335601e1984360301811261242a578283fd5b830160208101925035905067ffffffffffffffff81111561244a57600080fd5b60208102360383131561149857600080fd5b6000808335601e19843603018112612472578283fd5b830160208101925035905067ffffffffffffffff81111561249257600080fd5b80360383131561149857600080fd5b6000823560fe198336030181126124b6578182fd5b90910192915050565b600082198211156124d2576124d2612533565b500190565b60006113ae36836115ba565b6002810460018216806124f757607f821691505b602082108114156115a357634e487b7160e01b600052602260045260246000fd5b600060001982141561252c5761252c612533565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610e9a57600080fd5b8015158114610e9a57600080fd5b60078110610e9a57600080fdfea2646970667358221220489ee5061d794b95f9258fe1cf8e0d4cc6aa911a3ee711c4527e3b76bcca25ee64736f6c63430008000033";

export class SolverLib__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SolverLib> {
    return super.deploy(overrides || {}) as Promise<SolverLib>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SolverLib {
    return super.attach(address) as SolverLib;
  }
  connect(signer: Signer): SolverLib__factory {
    return super.connect(signer) as SolverLib__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SolverLibInterface {
    return new utils.Interface(_abi) as SolverLibInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SolverLib {
    return new Contract(address, _abi, signerOrProvider) as SolverLib;
  }
}
