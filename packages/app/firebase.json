{
    "firestore": {
        "rules": "firestore.rules",
        "indexes": "firestore.indexes.json"
    },
    "hosting": {
        "public": "out",
        "ignore": ["firebase.json", "**/.*", "**/node_modules/**"],
        "headers": [
            {
                "key": "Access-Control-Allow-Origin",
                "value": "\\*"
            },
            {
                "key": "Access-Control-Allow-Methods",
                "value": "GET"
            },
            {
                "key": "Access-Control-Allow-Headers",
                "value": "X-Requested-With, content-type, Authorization"
            }
        ],
        "cleanUrls": true,
        "rewrites": [
            {
                "source": "/api/pinPinata",
                "function": "pinPinata"
            },
            {
                "source": "/api/addWebhook",
                "function": "addWebhook"
            },
            {
                "source": "/api/errorLog",
                "function": "errorLog"
            },
            {
                "destination": "/composer/composition/[compositionStreamID].html",
                "regex": "^/composer/composition/([^/]+?)(?:/)?$"
            },
            {
                "destination": "/dashboard/proposals/edit/[proposalStreamID].html",
                "regex": "^/dashboard/proposals/edit/([^/]+?)(?:/)?$"
            },
            {
                "destination": "/dashboard/proposals/new/[proposalStreamID].html",
                "regex": "^/dashboard/proposals/new/([^/]+?)(?:/)?$"
            },
            {
                "destination": "/dashboard/templates/edit/[templateStreamID].html",
                "regex": "^/dashboard/templates/edit/([^/]+?)(?:/)?$"
            },
            {
                "destination": "/dashboard/templates/new/[templateStreamID].html",
                "regex": "^/dashboard/templates/new/([^/]+?)(?:/)?$"
            },
            {
                "destination": "/proposals/[proposalStreamID].html",
                "regex": "^/proposals/([^/]+?)(?:/)?$"
            },
            {
                "destination": "/solvers/[solverAddress].html",
                "regex": "^/solvers/([^/]+?)(?:/)?$"
            },
            {
                "destination": "/templates/[templateStreamID].html",
                "regex": "^/templates/([^/]+?)(?:/)?$"
            }
        ]
    }
}
